<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>学习笔记 on Fiveth</title><link>https://blog.fiveth.cc/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><description>Recent content in 学习笔记 on Fiveth</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Fiveth</copyright><lastBuildDate>Sun, 14 Apr 2024 21:57:47 +0000</lastBuildDate><atom:link href="https://blog.fiveth.cc/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>一本让我开始觉醒的书：《认知觉醒》</title><link>https://blog.fiveth.cc/p/9c7a/</link><pubDate>Sun, 14 Apr 2024 21:57:47 +0000</pubDate><guid>https://blog.fiveth.cc/p/9c7a/</guid><description>&lt;img src="https://p.fiveth.cc/img/2024/0518114933.jpg" alt="Featured image of post 一本让我开始觉醒的书：《认知觉醒》" />&lt;p>最近我读了《认知觉醒》这本书，作者是周岭。我非常感谢这本书，对我帮助非常大。如果你想改变自己现在的生活，变得更加优秀，这本书一定会帮到你。书中给出了许多提升自己的方法，其中的每个章节都让我有所感悟。这篇文章我会讲其中一些让我最受感触的点。&lt;/p>
&lt;h2 id="元认知">元认知
&lt;/h2>&lt;p>书中提到了“元认知”这个概念，当我们开启元认知，就会不断的进步、提升。开启元认知，就是&lt;strong>开启第三人称，时刻审视自己在做什么、在想什么&lt;/strong>。有了这种觉知，你就会在玩游戏的时候意识到自己正在过度放纵，并且思考自己的大脑为什么会沉迷于游戏当中；当你分手后无比沮丧的时候，就会思考自己现在处于一个怎样的状态，为什么不开心。当你开启这样一个能力之后，你就会无限进步，你能一直审视自己的行为和思维，在错误的时候意识到并改进。这就相当于自己开了上帝视角，时刻地在监督自己。&lt;/p>
&lt;p>当你知道了这个概念之后，你就可以开始行动、练习，时刻审视自己。当你受到任何感触，比如开心或沮丧时，问问自己是什么原因，这会让你变得更加了解自己。最近我看到一个句子让我很有感触，&amp;quot;&lt;strong>who looks outisde, dreams; who looks inside, awakes.&lt;/strong>&amp;quot;-Carl Jung，当你开始挖掘自己内心时，你就会清醒，明白自己到底想要什么，了解自己的思维方式，这会帮你打开自我提升的大门。写日记、写每日反思是一个很好的方法，在每天的结尾反思自己做了什么，无需置疑，这绝对是一个改变终身的习惯，孔子说过”吾日三省吾身“。其次，&lt;strong>练习元认知最好的方法是冥想&lt;/strong>，具体关于冥想的知识，大家可以自行去搜索，之后我会单独写一篇文章来讲我的冥想心得，总之这是一个非常有益的习惯，在冥想中，我们会练习将注意力放在呼吸和身体上，当有杂念的时候，我们就需要意识到并注意力拉回。可见冥想是练习元认知能力最直接的方法。&lt;/p>
&lt;h2 id="行动">行动
&lt;/h2>&lt;p>”&lt;strong>真正的成长不在于自己懂了多少道理，而在于自己做了多少改变&lt;/strong>“&lt;/p>
&lt;p>很多时候，我们会从书中或者视频中学到很多知识，在读后我们都会恍然大悟，觉得很有道理，但是，你可以回忆一下其中有多少是你真正为之做出改变的，运用到了生活之中的。我们很容易就会陷入到只停留在懂了，但没有去做的阶段。所以，当你学到任何知识让你受到感触的，那就开始行动，思考如何做出改变。这个道理很使用于读书，很多人读书会做大量的笔记，甚至思维导图，但他们只是将作者的思路整理列了个大纲，而在做完之后他们认为懂了就再也没翻阅过，即使翻阅，大量的内容也会让他们头晕目眩，这点我也深有感悟。真正好的读书方法是：&lt;/p>
&lt;p>&lt;strong>在书中取一个你最受感触的点并为之做出改变，这远远比你把一大堆知识记下来要有用得多&lt;/strong>。想想，一本书只要让你改变了一点点，那它就已经发挥了它的巨大价值。&lt;/p>
&lt;p>所以，在读完这本书后我改进了自己的读书方法，在读完后只记下最受感触的几个点，并尝试将他们运用起来，做出改变。而不是大量梳理（可能适用于课程学习，但肯定不适用于读书），告诉自己我懂了。其次，我为什么会写这篇文章，分享读书知识，那就是费曼学习法。&lt;/p>
&lt;h2 id="费曼">费曼
&lt;/h2>&lt;p>费曼学习法就是&lt;strong>将自己学到的知识，用自己的话讲述给他人&lt;/strong>，在这个过程中知识会在你的大脑中得到加工和巩固，如果你能非常清晰地讲述给他人，那说明你真正懂了。这本书我是上周读的，而我现在并没有拿着这本书写博客，我只是将自己从这本书中得到的最受感触的，进入我记忆中的，用自己的话写了出来。&lt;/p>
&lt;h2 id="关联">关联
&lt;/h2>&lt;p>&lt;strong>能与自己产生关联的知识，是记得最深的&lt;/strong>。从一本书中你可能会学到很多有道理的知识，但你不一定会记住每一个。这个知识需要和你以往某个经历，或者存在于你知识体系中的某个点练习起来，才会被记得非常深。如果和你大脑中的知识没有任何关联，即使很有道理，也很容易忘记。所以，利用好这点，当你看到某个很受感触的知识时，有什么你已知的知识与其相关联，将你的想法记下来。如果你现在是一个学生，你读到职场的一些知识，那么就把它先放一放吧。&lt;/p>
&lt;hr>
&lt;p>以上就是这本书我深受感触的一些知识点，当然这些只是对我来说最受感触的，和我有关联的，其中还有非常多有用的知识，非常推荐大家自行去阅读这本书。如果大家喜欢这篇文章，可以关注本站，我会每周分享自己读到的好书。&lt;/p></description></item><item><title>阿谦读书笔记：《原子习惯》</title><link>https://blog.fiveth.cc/p/a76a/</link><pubDate>Thu, 23 Nov 2023 16:07:26 +0000</pubDate><guid>https://blog.fiveth.cc/p/a76a/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/habits.jpg" alt="Featured image of post 阿谦读书笔记：《原子习惯》" />&lt;h2 id="基础">基础
&lt;/h2>&lt;h3 id="小习惯的大力量">小习惯的大力量
&lt;/h3>&lt;p>一个微小的习惯改变，会对未来影响很大。
每天进步1%，一年就是很多。
专注于系统，而不是目标。&lt;/p>
&lt;h3 id="基于身份的习惯比基于目标的习惯更有效">基于身份的习惯比基于目标的习惯更有效
&lt;/h3>&lt;ol>
&lt;li>自己想成为什么样的人&lt;/li>
&lt;li>用习惯去证明自己是这样的人&lt;/li>
&lt;/ol>
&lt;h3 id="习惯形成的4个步骤">习惯形成的4个步骤：
&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>提示，渴望，反应，奖励。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>例子&lt;/code>：你起床(提示)，想要清醒(渴望)，所以喝了杯咖啡(反应)，满足了清醒的需求(奖励)。&lt;/p>
&lt;p>&lt;strong>建立好习惯&lt;/strong>：让提示更明显，让渴望更吸引，让反应更简单，让奖励更令人满意。
&lt;strong>打破坏习惯&lt;/strong>：让提示不明显，让渴望不吸引，让反应更困难，让奖励更令人不满。&lt;/p>
&lt;h2 id="1st-law让提示更明显">1st law—让提示更明显
&lt;/h2>&lt;h3 id="加强对习惯的意识">加强对习惯的意识
&lt;/h3>&lt;p>&lt;strong>写习惯清单&lt;/strong>：把自己现有的习惯全写上去，并做好坏评估。&lt;/p>
&lt;p>&lt;strong>Pointing-and-calling&lt;/strong>：把自己接下来要做的事和结果大声说出来。这样可以增强意识。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>例子&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>“明天五点我要去邮政局”&lt;/li>
&lt;li>“我现在要吃饼干，但是我并不需要，这会让我变胖。”&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="让提示更明显的两个方法">让提示更明显的两个方法
&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>Implementation intension(执行意向)公式&lt;/strong>：“I will [BEHAVIOR] at [TIME] in [LOCATION].”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>Habit stacking(习惯堆叠)公式&lt;/strong>：“After [CURRENT HABIT], I will [NEW HABIT].”&lt;/p>
&lt;/blockquote>
&lt;h3 id="环境比动力更重要">环境比动力更重要
&lt;/h3>&lt;p>&lt;strong>让好习惯的提示更明显&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>把要阅读的书放在桌子上显眼的地方&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把游戏手柄放隐蔽的地方&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>给特定环境关联特定习惯&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>在床上就睡觉，在桌上就学习&lt;/li>
&lt;/ul>
&lt;p>（尽量给一个环境只关联一个习惯）&lt;/p>
&lt;h3 id="借助环境远离坏习惯">借助环境远离坏习惯
&lt;/h3>&lt;p>依靠自控力只是一个短期的方法，我们需要环境配合才能更长久，要&lt;strong>远离坏习惯的提示&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>例子&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>写作业效率不高，就把手机放在另一个房间一段时间。&lt;/li>
&lt;li>花钱买太多东西，就不要刷淘宝。&lt;/li>
&lt;li>老玩游戏，就把手柄放在看不到的地方。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="2nd-law-让它更吸引">2nd law 让它更吸引
&lt;/h2>&lt;h3 id="诱惑捆绑">诱惑捆绑
&lt;/h3>&lt;p>把需要做的和想做的事关联起来&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>habit stacking + temptation bundling公式&lt;/strong>:
After [CURRENT HABIT], I will [HABIT I NEED].
After [HABIT I NEED], I will [HABIT I WANT].&lt;/p>
&lt;/blockquote>
&lt;h3 id="加入好的圈子">加入好的圈子
&lt;/h3>&lt;p>加入你想建立的习惯在他们之中是常态的圈子，我们会被所处圈子影响&lt;/p>
&lt;p>找到你和圈子中的人的相同特征，这会让你有归属感&lt;/p>
&lt;h3 id="激励仪式">激励仪式
&lt;/h3>&lt;p>创造一个激励仪式在困难习惯之前做，给好习惯关联上积极的情感。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>例子&lt;/code>：每次玩游戏前深呼吸然后笑，之后在写作业前也这样做。&lt;/p>
&lt;/blockquote>
&lt;h2 id="3rd-law-让它更简单">3rd law 让它更简单
&lt;/h2>&lt;h3 id="开始行动不断重复习惯不要纸上谈兵">开始行动，不断重复习惯，不要纸上谈兵
&lt;/h3>&lt;p>调整环境，让习惯更简单。&lt;strong>每次做完习惯之后，都为下一次习惯做好准备&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>例子&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>想健身，提前把装备准备好。&lt;/li>
&lt;li>想写作业，提前把作业放在桌上。&lt;/li>
&lt;li>玩游戏，就把手柄锁柜子里。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="善用决定性时刻用小行为决定走向">善用决定性时刻，用小行为决定走向。
&lt;/h3>&lt;p>当你穿上了跑鞋，就说明你决定了你接下来会去跑步。&lt;/p>
&lt;p>这会减少拖延和犹豫。&lt;/p>
&lt;h3 id="两分钟规则">两分钟规则
&lt;/h3>&lt;ol>
&lt;li>简化习惯，所有习惯都能简化成在两分钟内完成的形式。&lt;/li>
&lt;li>建立起习惯后，再去提升时长和质量。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>例子：&lt;/p>
&lt;ul>
&lt;li>每天读一页书。&lt;/li>
&lt;li>穿上跑步鞋。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="自动化你的习惯">自动化你的习惯
&lt;/h3>&lt;p>投资&lt;strong>锁定未来行为&lt;/strong>的技术和一次性购买。&lt;/p>
&lt;p>&lt;code>例子&lt;/code>：买健身房卡，这会迫使你未来常去锻炼。&lt;/p>
&lt;h2 id="4th-law-让它更令人开心">4th law 让它更令人开心
&lt;/h2>&lt;h3 id="即使奖励">即使奖励
&lt;/h3>&lt;p>给好习惯&lt;strong>增加立即能获得的奖励&lt;/strong>，给坏习惯&lt;strong>增加立即会得到的惩罚&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>The Cardinal Rule of Behavior Change&lt;/code>:&lt;/p>
&lt;p>What is immediately rewarded is repeated. What is immediately punished is avoided.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>例子&lt;/code>：记账“去旅游”，每少吃一次大餐就往里存50元。&lt;/p>
&lt;h3 id="视觉化进度">视觉化进度
&lt;/h3>&lt;p>&lt;strong>视觉化习惯的完成进度&lt;/strong>，增加每次做完后的成就感&lt;/p>
&lt;p>&lt;code>例子&lt;/code>：健身记录，读书页码，读书打卡&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Habit Tracking(习惯记录)&lt;/strong>&lt;/p>
&lt;p>The habit stacking + habit tracking公式:&lt;/p>
&lt;p>After [CURRENT HABIT], I will [TRACK MY HABIT].”&lt;/p>
&lt;/blockquote>
&lt;p>注意：不要因过度重视记录的次数，而忽略了习惯的质量和本身的目的。&lt;/p>
&lt;h3 id="习惯中断要立即重拾">习惯中断要立即重拾
&lt;/h3>&lt;p>不要连续缺勤两次，习惯&lt;strong>中断要立即重拾&lt;/strong>&lt;/p>
&lt;h3 id="习惯违反合同">习惯违反合同
&lt;/h3>&lt;p>找一个搭档，监督你的行为。&lt;/p>
&lt;p>建立习惯合同，让违反承诺的代价变得公开和痛苦。&lt;/p>
&lt;h2 id="高级策略">高级策略
&lt;/h2>&lt;h3 id="选择适合自己的习惯">选择适合自己的习惯
&lt;/h3>&lt;p>每个人都有自己的人格，有自己适合做的事情，要&lt;strong>取长补短&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>选择适合自己的习惯&lt;/strong>，会更好坚持。&lt;/p>
&lt;h3 id="忍受无聊">忍受无聊
&lt;/h3>&lt;p>成功在于能&lt;strong>忍受无聊&lt;/strong>。&lt;/p>
&lt;p>任何人在感到有动力时都可以努力工作。只有在&lt;strong>没有动力&lt;/strong>的时候，还能&lt;strong>坚持下去&lt;/strong>，才会超越他人。&lt;/p>
&lt;h3 id="习惯的弊端">习惯的弊端
&lt;/h3>&lt;p>养成习惯之后，很容易&lt;strong>停止去思考和提升&lt;/strong>。&lt;/p>
&lt;p>我们要定期&lt;strong>做反思和回顾&lt;/strong>，时刻注意自己的表现。&lt;/p></description></item><item><title>OpenGL教学 | 3.如何给形状添加纹理，绘制各种带图案的形状？</title><link>https://blog.fiveth.cc/p/7cf1/</link><pubDate>Tue, 30 May 2023 18:33:42 +0000</pubDate><guid>https://blog.fiveth.cc/p/7cf1/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/grasscover.jpg" alt="Featured image of post OpenGL教学 | 3.如何给形状添加纹理，绘制各种带图案的形状？" />&lt;p>本篇将学习OpenGL中关于纹理的各种知识。纹理就是图片，用于给模型添加细节。&lt;/p>
&lt;h2 id="纹理环绕方式">纹理环绕方式
&lt;/h2>&lt;p>如果我们把纹理坐标设置在范围之外会发生什么？OpenGL默认的行为是重复这个纹理图像。下面更多的选择：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>环绕方式&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>GL_REPEAT&lt;/td>
&lt;td>对纹理的默认行为。重复纹理图像。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_MIRRORED_REPEAT&lt;/td>
&lt;td>和GL_REPEAT一样，但每次重复图片是镜像放置的。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_CLAMP_TO_EDGE&lt;/td>
&lt;td>纹理坐标会被约束在0到1之间，超出的部分会重复纹理坐标的边缘，产生一种边缘被拉伸的效果。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_CLAMP_TO_BORDER&lt;/td>
&lt;td>超出的坐标为用户指定的边缘颜色。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>设置坐标轴环绕方式（s、t（如果是使用3D纹理那么还有一个r））&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_WRAP_S&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_MIRRORED_REPEAT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_WRAP_T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_MIRRORED_REPEAT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果选择GL_CLAMP_TO_BORDER选项，需要指定一个边缘的颜色。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">borderColor&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameterfv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_BORDER_COLOR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">borderColor&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="纹理过滤">纹理过滤
&lt;/h2>&lt;p>如何将&lt;strong>纹理像素&lt;/strong>(Texture Pixel)映射到纹理坐标，让分辨率清晰&lt;/p>
&lt;p>纹理过滤有很多个选项，但是现在我们只讨论最重要的两种：&lt;/p>
&lt;h4 id="gl_nearest">GL_NEAREST
&lt;/h4>&lt;p>邻近过滤 (Nearest Neighbor Filtering):&lt;/p>
&lt;p>选择中心点最接近纹理坐标的那个像素&lt;/p>
&lt;p>&lt;img src="https://learnopengl-cn.github.io/img/01/06/filter_nearest.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h4 id="gl_linear">GL_LINEAR
&lt;/h4>&lt;p>线性过滤 (linear Filtering):&lt;/p>
&lt;p>基于纹理坐标附近的纹理像素，计算出一个插值 (心距离纹理坐标越近,贡献越大)&lt;/p>
&lt;p>&lt;img src="https://learnopengl-cn.github.io/img/01/06/filter_linear.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h4 id="效果对比">效果对比
&lt;/h4>&lt;p>&lt;img src="https://learnopengl-cn.github.io/img/01/06/texture_filtering.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>我们可以在纹理被缩小的时候使用邻近过滤，被放大时使用线性过滤。方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MIN_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_NEAREST&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MAG_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="多级渐远纹理">多级渐远纹理
&lt;/h2>&lt;p>(Mipmap)：一系列的纹理图像，后一个纹理图像是前一个的二分之一。&lt;/p>
&lt;p>功能：提升真实性、提升性能。&lt;/p>
&lt;p>&lt;img src="https://learnopengl-cn.github.io/img/01/06/mipmaps.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>过滤方式&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>GL_NEAREST_MIPMAP_NEAREST&lt;/td>
&lt;td>使用最邻近的多级渐远纹理来匹配像素大小，并使用邻近插值进行纹理采样&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_LINEAR_MIPMAP_NEAREST&lt;/td>
&lt;td>使用最邻近的多级渐远纹理级别，并使用线性插值进行采样&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_NEAREST_MIPMAP_LINEAR&lt;/td>
&lt;td>在两个最匹配像素大小的多级渐远纹理之间进行线性插值，使用邻近插值进行采样&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_LINEAR_MIPMAP_LINEAR&lt;/td>
&lt;td>在两个邻近的多级渐远纹理之间使用线性插值，并使用线性插值进行采样&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>设置方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MIN_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR_MIPMAP_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MAG_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="加载与创建纹理">加载与创建纹理
&lt;/h2>&lt;p>将图像加载到应用中，需要自己写一个图像加载器，或者使用支持多种格式的图像加载库。&lt;/p>
&lt;h3 id="stb_imageh">stb_image.h
&lt;/h3>&lt;p>&lt;a class="link" href="https://github.com/nothings/stb/blob/master/stb_image.h" target="_blank" rel="noopener"
>stb_image.h下载链接&lt;/a>&lt;/p>
&lt;p>将头文件加入你的工程，并在源文件中输入以下代码引入：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define STB_IMAGE_IMPLEMENTATION &lt;/span>&lt;span class="c1">//让头文件只包含相关的函数定义源码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;stb_image.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来，我们用stb_image加载图片&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nrChannels&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stbi_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;container.jpg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">nrChannels&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>加载图片前我们为了防止图片颠倒输出，我们可以输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stbi_set_flip_vertically_on_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//OpenGL会自动将图片颠倒，所以我们要上下翻转
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="生成纹理">生成纹理
&lt;/h2>&lt;p>创建纹理对象&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glGenTextures&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成纹理&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexImage2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_RGB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_RGB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_BYTE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glGenerateMipmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>第一个参数指定了纹理目标(Target)。设置为GL_TEXTURE_2D意味着会生成与当前绑定的纹理对象在同一个目标上的纹理（任何绑定到GL_TEXTURE_1D和GL_TEXTURE_3D的纹理不会受到影响）。&lt;/li>
&lt;li>第二个参数为纹理指定多级渐远纹理的级别，如果你希望单独手动设置每个多级渐远纹理的级别的话。这里我们填0，也就是基本级别。&lt;/li>
&lt;li>第三个参数：纹理储存格式。(RGB\RGBA)&lt;/li>
&lt;li>第四个和第五个参数设置最终的纹理的宽度和高度。&lt;/li>
&lt;li>下个参数应该总是被设为&lt;code>0&lt;/code>（历史遗留的问题）。&lt;/li>
&lt;li>第七第八个参数定义了源图的格式和数据类型。我们使用RGB值加载这个图像，并把它们储存为&lt;code>char&lt;/code>(byte)数组，我们将会传入对应值。&lt;/li>
&lt;li>最后一个参数：图像数据。&lt;/li>
&lt;/ul>
&lt;p>最后还要释放图像内存&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stbi_image_free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>生成纹理的整个过程&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glGenTextures&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 为当前绑定的纹理对象设置环绕、过滤方式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_WRAP_S&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_REPEAT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_WRAP_T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_REPEAT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MIN_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MAG_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 加载并生成纹理
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nrChannels&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stbi_set_flip_vertically_on_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">//OpenGL会自动将图片颠倒，所以我们要上下翻转
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stbi_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;container.jpg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">nrChannels&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glTexImage2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_RGB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_RGB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_BYTE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGenerateMipmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Failed to load texture&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stbi_image_free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="应用纹理">应用纹理
&lt;/h2>&lt;p>接下来我们来应用纹理，绘制一个带我的世界草块纹理的矩形：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/grass.jpg" target="_blank" rel="noopener"
>草块图片&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ---- 位置 ---- ---- 颜色 ---- - 纹理坐标 -
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 左下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span> &lt;span class="c1">// 左上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">indices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// first triangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1">// second triangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在循环中绘制&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glDrawElements&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TRIANGLES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们的草块就出来了！&lt;/p>
&lt;p>我们再在草块上加上顶点颜色：修改片段着色器&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/grasswin.webp" style="zoom:50%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E7%BA%B9%E7%90%86%E5%BA%94%E7%94%A8.cpp" target="_blank" rel="noopener"
>纹理应用源码&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ourTexture&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TexCoord&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ourColor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://p.fiveth.cc/img/m/colorgrass.webp" style="zoom:50%;" />
&lt;h2 id="纹理单元">纹理单元
&lt;/h2>&lt;p>纹理单元(Texture Unit)：纹理的位置值&lt;/p>
&lt;p>绑定前激活纹理单元：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glActiveTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 在绑定纹理之前先激活纹理单元
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>我们来做个笑脸草块：&lt;/strong>&lt;/p>
&lt;p>先修改一下片段着色器：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">uniform&lt;/span> &lt;span class="n">sampler2D&lt;/span> &lt;span class="n">texture1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">uniform&lt;/span> &lt;span class="n">sampler2D&lt;/span> &lt;span class="n">texture2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texture1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TexCoord&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texture2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TexCoord&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mf">0.2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//mix输出两个texture的混合值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再设置纹理单元&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glUniform1i&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">glGetUniformLocation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;texture1&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//手动设置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;texture2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在我们绑定多个纹理并绘制：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glActiveTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glActiveTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glDrawElements&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TRIANGLES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就可以看到我们的笑脸草块了&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/smilegrass.webp" style="zoom:50%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E6%B7%B7%E5%90%88%E7%BA%B9%E7%90%86.cpp" target="_blank" rel="noopener"
>混合纹理源码&lt;/a>&lt;/p></description></item><item><title>OpenGL教程 | 2.了解着色器，并绘制彩色三角形</title><link>https://blog.fiveth.cc/p/9641/</link><pubDate>Sun, 28 May 2023 16:20:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/9641/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/colorcover.jpg" alt="Featured image of post OpenGL教程 | 2.了解着色器，并绘制彩色三角形" />&lt;p>本篇我们会更深入地了解着色器：&lt;/p>
&lt;ol>
&lt;li>学会着色器如何输入输出&lt;/li>
&lt;li>学会使用Uniform，绘制会随时间变化颜色的图形&lt;/li>
&lt;li>绘制彩色三角形&lt;/li>
&lt;li>定义自己的着色器类&lt;/li>
&lt;/ol>
&lt;p>本文参考&lt;a class="link" href="https://learnopengl.com/" target="_blank" rel="noopener"
>LearnOpenGL&lt;/a>教学网站&lt;/p>
&lt;blockquote>
&lt;p>经验：建议打开源代码看着学习，光跟着文档的话思路会很乱&lt;/p>
&lt;/blockquote>
&lt;p>下面是我做的笔记&lt;/p>
&lt;p>配合源码食用更佳🤫：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL" target="_blank" rel="noopener"
>OpenGL学习源码&lt;/a>&lt;/p>
&lt;h2 id="向量">向量
&lt;/h2>&lt;p>数据类型：一般使用vecn（包含n个float分量的默认向量）&lt;/p>
&lt;p>&lt;strong>重组（灵活的分量选择方式）：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//重组的例子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">vec2&lt;/span> &lt;span class="n">someVec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec4&lt;/span> &lt;span class="n">differentVec&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">someVec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyxx&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec3&lt;/span> &lt;span class="n">anotherVec&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">differentVec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zyw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec4&lt;/span> &lt;span class="n">otherVec&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">someVec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xxxx&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">anotherVec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">yxzy&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec2&lt;/span> &lt;span class="n">vect&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.7&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec4&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vect&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec4&lt;/span> &lt;span class="n">otherResult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="输入与输出">输入与输出
&lt;/h2>&lt;p>我们给着色器加上输入和输出，让顶点着色器为片段着色器决定颜色。&lt;/p>
&lt;h4 id="顶点着色器">顶点着色器
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 位置变量的属性位置值为0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">vertexColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 指定一个颜色输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gl_Position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 注意我们如何把一个vec3作为vec4的构造器的参数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">vertexColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 把输出变量设置为暗红色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="片段着色器">片段着色器
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">FragColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">in&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">vertexColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 从顶点着色器传来的输入变量（名称相同、类型相同）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vertexColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在运行，就可以看到我们成功将颜色由顶点着色器输入到片段着色器中，将三角形的颜色设置成了深红色。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/redtriangle.png" style="zoom:50%;" />
&lt;h2 id="uniform">Uniform
&lt;/h2>&lt;p>Uniform是一种从CPU中的应用向GPU中的着色器发送数据的方式&lt;/p>
&lt;p>我们在&lt;strong>片段着色器&lt;/strong>中声明Uniform&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">FragColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">uniform&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">ourColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 在OpenGL程序代码中设定这个变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ourColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在，我们就可以在渲染循环中去改变三角形颜色了。这里我们用让它随时间变化颜色。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">timeValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glfwGetTime&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">greenValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">sin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timeValue&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">2.0f&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">vertexColorLocation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glGetUniformLocation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;ourColor&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glUseProgram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glUniform4f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexColorLocation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">greenValue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://p.fiveth.cc/img/m/uniform.gif" style="zoom:95%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/Uniform.cpp" target="_blank" rel="noopener"
>Uniform源码&lt;/a>&lt;/p>
&lt;h2 id="你好彩色三角形">你好，彩色三角形
&lt;/h2>&lt;p>现在，我们将把颜色数据添加为3个值至vertices数组。我们将把三角形的三个角分别指定为红色、绿色和蓝色。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//顶点数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 位置 // 颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 左下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span> &lt;span class="c1">// 顶部
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们让顶点着色器接收颜色值，并输出到片段着色器。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 位置变量的属性位置值为 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">aColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 颜色变量的属性位置值为 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">out&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">ourColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 向片段着色器输出一个颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gl_Position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ourColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">aColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 将ourColor设置为我们从顶点数据那里得到的输入颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再修改一下片段着色器，让他输入颜色。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">FragColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">ourColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ourColor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在我们修改着色器的顶点格式。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 位置属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glVertexAttribPointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FLOAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glEnableVertexAttribArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 颜色属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glVertexAttribPointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FLOAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glEnableVertexAttribArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后我们就可以看到一个彩色的三角形😍&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/colorful.webp" style="zoom:50%;" />
&lt;p>三角形会自动将我们给的三个顶点颜色进行渐变，这是在片段着色器中进行的所谓片段插值(Fragment Interpolation)的结果。&lt;/p>
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E5%BD%A9%E8%89%B2%E4%B8%89%E8%A7%92.cpp" target="_blank" rel="noopener"
>彩色三角形源码&lt;/a>&lt;/p>
&lt;h2 id="自己的着色器类">自己的着色器类
&lt;/h2>&lt;p>管理着色器类是很麻烦的事，所以我们要写一个类来让我们能更轻松的管理。&lt;/p>
&lt;p>我们的着色器类用于：&lt;/p>
&lt;ol>
&lt;li>打开着色器文件&lt;/li>
&lt;li>编译和链接着色器&lt;/li>
&lt;li>use用来激活着色器程序&lt;/li>
&lt;li>set用于设置和查询uniform&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>使用方法&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Shader&lt;/span> &lt;span class="nf">ourShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;path/to/shaders/shader.vs&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;path/to/shaders/shader.fs&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span>&lt;span class="p">(...)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;someUniform&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DrawStuff&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>顶点和片段着色器的文件名可以任意取（推荐用shader.vs和shader.fs，很直观）&lt;/p>
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/shader.h" target="_blank" rel="noopener"
>着色器类源码&lt;/a>&lt;/p>
&lt;hr>
&lt;p>恭喜你又学完了一篇教程🎉，你正在向目标一步一步地进发。&lt;/p></description></item><item><title>OpenGL教程 | 1.如何上手OpenGL, 绘制三角形和矩形</title><link>https://blog.fiveth.cc/p/8ca/</link><pubDate>Wed, 24 May 2023 21:34:08 +0000</pubDate><guid>https://blog.fiveth.cc/p/8ca/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/openglcover.webp" alt="Featured image of post OpenGL教程 | 1.如何上手OpenGL, 绘制三角形和矩形" />&lt;h2 id="关于学习opengl">关于学习OpenGL
&lt;/h2>&lt;p>OpenGL是学习计算机图形学的必备，虽然现在Vulkan是未来的OpenGL，但目前OpenGL仍是无法被替代的。&lt;/p>
&lt;p>Vulkan学习难度过高，个人做项目太耗时间，所以OpenGL依旧是很好的选择。很多大神都认为，先学OpenGL打基础，在学习Vulkan的时候再将原先的知识进行分解转化，是个很好的方法。因为学习Vulkan时，想让屏幕上显示点东西需要做的工作太多了，非常容易放弃。(别说Vulkan了，OpenGL就已经够难了🤕)&lt;/p>
&lt;p>所以看了各论坛和思考后，我决定先上手OpenGL。&lt;/p>
&lt;p>这是一个非常好的OpenGL教学网站：&lt;a class="link" href="https://learnopengl.com/" target="_blank" rel="noopener"
>英文版&lt;/a> | &lt;a class="link" href="https://learnopengl-cn.github.io/" target="_blank" rel="noopener"
>中文版&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>经验：建议打开源代码看着学习，光跟着文档的话思路会很乱&lt;/p>
&lt;/blockquote>
&lt;p>下面是我做的笔记&lt;/p>
&lt;p>配合源码食用更佳🤫：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL" target="_blank" rel="noopener"
>OpenGL学习源码&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="配置">配置
&lt;/h2>&lt;p>因为OpenGL不支持，所以我们需要一个库用于显示窗口和处理用户输入 (如GLUT，SDL，SFML和GLFW)&lt;/p>
&lt;p>这里我们使用GLFW&lt;/p>
&lt;h3 id="glfw">GLFW
&lt;/h3>&lt;p>一个专门针对OpenGL的C语言库。&lt;a class="link" href="https://www.glfw.org/download.html" target="_blank" rel="noopener"
>GLFW下载&lt;/a>&lt;/p>
&lt;p>为确保完整性，下载&lt;strong>源代码&lt;/strong>后用CMake编译。&lt;/p>
&lt;h3 id="cmake">CMake
&lt;/h3>&lt;p>一个工程文件生成工具。&lt;a class="link" href="https://cmake.org/download/" target="_blank" rel="noopener"
>Cmake下载&lt;/a>&lt;/p>
&lt;h3 id="glad">glad
&lt;/h3>&lt;p>用于简化OpenGL获取函数地址的库。&lt;a class="link" href="https://glad.dav1d.de/" target="_blank" rel="noopener"
>生成glad&lt;/a>&lt;/p>
&lt;h3 id="配置-1">配置
&lt;/h3>&lt;p>在vs项目属性中指向include和lib文件夹&lt;/p>
&lt;p>将glad/src里的glad.c放入工程文件，并在vs中&lt;strong>添加现有项&lt;/strong>&lt;/p>
&lt;p>在依赖项里加入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glfw3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">opengl32&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lib&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="你好窗口">你好，窗口
&lt;/h2>&lt;h3 id="代码">代码
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;glad/glad.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;GLFW/glfw3.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">framebuffer_size_callback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//配置项
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SCR_WIDTH&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">800&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SCR_HEIGHT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">600&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//初始化glfw
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glfwInit&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_CONTEXT_VERSION_MAJOR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_CONTEXT_VERSION_MINOR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_OPENGL_PROFILE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GLFW_OPENGL_CORE_PROFILE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建glfw窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glfwCreateWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SCR_WIDTH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SCR_HEIGHT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;LearnOpenGL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Failed to create GLFW window&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwTerminate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwMakeContextCurrent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//窗口变换
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glfwSetFramebufferSizeCallback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">framebuffer_size_callback&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//glad加载opengl指针
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">gladLoadGLLoader&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">GLADloadproc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">glfwGetProcAddress&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Failed to initialize GLAD&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//渲染循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">glfwWindowShouldClose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//处理输入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//渲染
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glClearColor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.2f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.3f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.3f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glClear&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_COLOR_BUFFER_BIT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//glfw检查并调用事件，交换缓冲
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glfwSwapBuffers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwPollEvents&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// glfw清除
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glfwTerminate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//输入处理函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">glfwGetKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GLFW_KEY_ESCAPE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">GLFW_PRESS&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwSetWindowShouldClose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// glfw，窗口大小变换时自动调用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">framebuffer_size_callback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glViewport&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E7%AA%97%E5%8F%A3.cpp" target="_blank" rel="noopener"
>窗口源码&lt;/a>&lt;/p>
&lt;h2 id="你好三角形">你好，三角形
&lt;/h2>&lt;p>现代Opengl渲染至少要设置一个&lt;strong>顶点着色器&lt;/strong>和一个&lt;strong>片段着色器&lt;/strong>。&lt;/p>
&lt;h3 id="知识">知识
&lt;/h3>&lt;ul>
&lt;li>VAO (顶点数组对象 Vertex Array Object)&lt;/li>
&lt;li>VBO (顶点缓冲对象 Vertex Buffer Object)&lt;/li>
&lt;li>EBO (元素缓冲对象 Element Buffer Object)&lt;/li>
&lt;/ul>
&lt;h4 id="顶点着色器">顶点着色器
&lt;/h4>&lt;p>Vertex Shader&lt;/p>
&lt;h5 id="基础源码">基础源码
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gl_Position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="片段着色器">片段着色器
&lt;/h4>&lt;p>Fragment Shader 计算像素最后的颜色输出&lt;/p>
&lt;h5 id="基础源码-1">基础源码
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">FragColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.2f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//输出黄色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="着色器程序">着色器程序
&lt;/h4>&lt;p>Shader Program Object&lt;/p>
&lt;p>链接多个着色器，将它们合并在一起。&lt;/p>
&lt;h4 id="链接顶点属性">链接顶点属性
&lt;/h4>&lt;p>指定Opengl如何解释顶点数据。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glVertexAttribPointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FLOAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glEnableVertexAttribArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>第一个参数：顶点属性。&lt;/li>
&lt;li>第二个参数：顶点属性的大小。顶点属性是一个&lt;strong>vec3&lt;/strong>，它由3个值组成，所以大小是3。&lt;/li>
&lt;li>第三个参数：数据的类型，这里是GL_FLOAT(GLSL中&lt;strong>vec&lt;/strong>*都是由浮点数值组成的)。&lt;/li>
&lt;li>第四个参数：是否希望数据被标准化(Normalize)。如果我们设置为GL_TRUE，所有数据都会被映射到0（对于有符号型signed数据是-1）到1之间。我们把它设置为GL_FALSE。&lt;/li>
&lt;li>第五个参数叫做步长(Stride)，它告诉我们在连续的顶点属性组之间的间隔。由于下个组位置数据在3个&lt;strong>float&lt;/strong>之后，我们把步长设置为&lt;strong>3 * sizeof(float&lt;/strong>)。要注意的是由于我们知道这个数组是紧密排列的（在两个顶点属性之间没有空隙）我们也可以设置为0来让OpenGL决定具体步长是多少（只有当数值是紧密排列时才可用）。（译注: &lt;strong>这个参数的意思简单说就是从这个属性第二次出现的地方到整个数组0位置之间有多少字节&lt;/strong>）。&lt;/li>
&lt;li>最后一个参数：类型是&lt;strong>void&lt;/strong>*，所以需要我们进行这个奇怪的强制类型转换。它表示位置数据在缓冲中起始位置的偏移量(Offset)。由于位置数据在数组的开头，所以这里是0。我们会在后面详细解释这个参数。&lt;/li>
&lt;/ul>
&lt;h3 id="代码-1">代码
&lt;/h3>&lt;h4 id="硬编码着色器源码">硬编码着色器源码
&lt;/h4>&lt;p>定义全局变量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//硬编码着色器源代码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">vertexShaderSource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#version 330 core&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;layout (location = 0) in vec3 aPos;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;void main()&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;{&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34; gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;}&lt;/span>&lt;span class="se">\0&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">fragmentShaderSource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#version 330 core&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;out vec4 FragColor;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;void main()&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;{&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34; FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;}&lt;/span>&lt;span class="se">\n\0&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="配置着色器">配置着色器
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建&amp;amp;编译 着色器
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 顶点着色器vertex shader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">vertexShader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glCreateShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_VERTEX_SHADER&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glShaderSource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">vertexShaderSource&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glCompileShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 检测错误
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">success&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">infoLog&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">512&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGetShaderiv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_COMPILE_STATUS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGetShaderInfoLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">512&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">infoLog&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;ERROR::SHADER::VERTEX::COMPILATION_FAILED&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">infoLog&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 片段着色器fragment shader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">fragmentShader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glCreateShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_FRAGMENT_SHADER&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glShaderSource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">fragmentShaderSource&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glCompileShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 检测错误
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glGetShaderiv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_COMPILE_STATUS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGetShaderInfoLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">512&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">infoLog&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">infoLog&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 着色器程序(链接着色器)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">shaderProgram&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glCreateProgram&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glAttachShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vertexShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glAttachShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glLinkProgram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 检测错误
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glGetProgramiv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINK_STATUS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGetProgramInfoLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">512&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">infoLog&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;ERROR::SHADER::PROGRAM::LINKING_FAILED&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">infoLog&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//删除前面的着色器
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glDeleteShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glDeleteShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 链接顶点属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// left
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// right
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span> &lt;span class="c1">// top
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//VBO顶点缓冲对象，VAO顶点数组对象
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">VBO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">VAO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGenVertexArrays&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGenBuffers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">VBO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 先绑定VAO，然后VBO，最后设置顶点属性指针
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//bind the Vertex Array Object first, then bindand set vertex buffer(s), and then configure vertex attributes(s).
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glBindBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">VBO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glBufferData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertices&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_STATIC_DRAW&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glVertexAttribPointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FLOAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glEnableVertexAttribArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 解绑
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glBindBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>glBufferData参数&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>GL_STATIC_DRAW ：数据不会或几乎不会改变。&lt;/li>
&lt;li>GL_DYNAMIC_DRAW：数据会被改变很多。&lt;/li>
&lt;li>GL_STREAM_DRAW ：数据每次绘制时都会改变。&lt;/li>
&lt;/ul>
&lt;h4 id="绘制三角形">绘制三角形
&lt;/h4>&lt;p>在渲染循环中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//画三角形
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glUseProgram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glDrawArrays&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TRIANGLES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就可以跟三角形说你好了！😎&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/triangle.webp" style="zoom:50%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E4%B8%89%E8%A7%92%E5%BD%A2.cpp" target="_blank" rel="noopener"
>三角形源码&lt;/a>&lt;/p>
&lt;h2 id="hey矩形">Hey，矩形
&lt;/h2>&lt;p>我们绘制两个三角形来组成一个矩形&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 第一个三角形
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右上角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右下角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 左上角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 第二个三角形
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右下角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 左下角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span> &lt;span class="c1">// 左上角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是，我们会看到，有两个顶点是重叠的，这回大大增加开销。所以我们要用到&lt;strong>元素缓冲对象&lt;/strong>。&lt;/p>
&lt;h4 id="元素缓冲对象">元素缓冲对象
&lt;/h4>&lt;p>&lt;strong>EBO&lt;/strong> 他存储 OpenGL 用来决定要绘制哪些顶点的索引&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// top right
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// bottom right
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// bottom left
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span> &lt;span class="c1">// top left
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">indices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// 从0开始!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// first Triangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1">// second Triangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到现在只用存四个顶点数据&lt;/p>
&lt;p>和VAO,VBO一样，创建并绑到缓冲中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">EBO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ELEMENT_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">EBO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBufferData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ELEMENT_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">indices&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">indices&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_STATIC_DRAW&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后在渲染循环中绘制&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 绘制
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glUseProgram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glDrawElements&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TRIANGLES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//绘制元素缓冲中的内容
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后我们就得到我们的矩形了&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/rectangle.webp" style="zoom:50%;" />
&lt;p>我们还可以打开线框模式，显示矩形由两个三角形组成&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glPolygonMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_FRONT_AND_BACK&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//G_LINE打开，GL_FILL关闭
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://p.fiveth.cc/img/m/rectline.webp" style="zoom:50%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E7%9F%A9%E5%BD%A2.cpp" target="_blank" rel="noopener"
>矩形源码&lt;/a>&lt;/p>
&lt;hr>
&lt;p>如果你也到这步了，那么恭喜你🎉，通过了OpenGL最难部分之一。&lt;/p>
&lt;p>接下来的路还很长，我们一起加油。&lt;/p></description></item><item><title>阿谦读书笔记：《深入浅出程序设计竞赛》</title><link>https://blog.fiveth.cc/p/98d7/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/98d7/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/shenji.jpg" alt="Featured image of post 阿谦读书笔记：《深入浅出程序设计竞赛》" />&lt;h2 id="简介">简介
&lt;/h2>&lt;p>《深入浅出程序设计竞赛》是洛谷站长出的书，帮助青少年上手C++算法竞赛。书中对学习算法竞赛的顺序编排非常好，很系统，很适合用于算法竞赛入门。文章最后有书籍pdf版。&lt;/p>
&lt;hr>
&lt;p>&lt;strong>下面是我从基础语言入门部分(第一部分)总结出来的精华笔记。&lt;/strong>&lt;/p>
&lt;h2 id="文件操作">文件操作
&lt;/h2>&lt;p>在文件里创建 title.in文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">freeopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;title.in&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">stdin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">freeopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;title.out&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="头文件">头文件
&lt;/h2>&lt;h5 id="cstdio头文件">cstdio头文件
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//输入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="cmath头文件">cmath头文件:
&lt;/h5>&lt;p>包含一系列&lt;strong>数学函数&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="err">根号&lt;/span>&lt;span class="n">sqrt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">几次方&lt;/span>&lt;span class="n">pow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="algorithm头文件">algorithm头文件：
&lt;/h5>&lt;p>一系列&lt;strong>算法函数&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">min&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">swap&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="cstring头文件">cstring头文件：
&lt;/h5>&lt;p>用于char字符串&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">strlen获取字符串长度&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">strcpy复制字符串内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fgets读入字符串&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">sscanf获取字符串&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">sprintf输&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="杂货">杂货
&lt;/h2>&lt;h5 id="ascii码">ASCII码:
&lt;/h5>&lt;p>&amp;lsquo;A&amp;rsquo;=66, &amp;lsquo;a&amp;rsquo;=97&lt;/p>
&lt;h5 id="强制转换">强制转换:
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="函数">函数:
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//在这个函数里面对放入的a进行修改，函数外是不会生效的。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//相当于给放入的变量取了个别名，对其修改，该变量也会改变。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="c1">//相当于传入&amp;amp;a[]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//这也是一样，相当于把n的地址告诉函数，这样才能输入到n中。
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="左移右移运算符">左移/右移运算符
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//左移运算符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">^&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//右移运算符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">^&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="随机数">随机数
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;cstdlib&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;ctime&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">srand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ans&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="c1">//生成0到(a-1)随机数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//ans=rand()%(b-a+1)+a 生成a到b随机数
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="异或运算符-">异或运算符: ^
&lt;/h5>&lt;p>一个成立一个不成立&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">true&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nb">false&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">true&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="字符串">字符串
&lt;/h2>&lt;h5 id="char字符串">char字符串
&lt;/h5>&lt;p>结束标记字符：&amp;rsquo;\0&amp;rsquo;&lt;/p>
&lt;p>&lt;strong>读入字符串方法：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cin&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这两种方法只能读到空格或者换行就会终止&lt;/p>
&lt;p>如果要输入&lt;strong>包括空格或换行的字符串&lt;/strong>，并存入一个字符串中，就用下面这种方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getchar&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//读入字符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">EOF&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">putchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>结束输入的时候，要使用组合键Ctrl+Z，然后回车。&lt;/p>
&lt;p>这是因为getchar返回EOF(End of file)代表文件读入完毕。&lt;/p>
&lt;p>windows下输入Ctrl+z / Linux下输入Ctrl+D 来输入EOF标记&lt;/p>
&lt;h5 id="string字符串">string字符串
&lt;/h5>&lt;p>加强版字符串，可以赋值、拼接&lt;/p>
&lt;p>&lt;strong>字符串string需要使用头文件 string,包括下面的常用方法&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//定义字符串变量s
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//拼接字符串1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//拼接字符串2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//比较字符串 s 的字典序是否在字符 str 的字典序之前
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取长度1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取长度2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//截取字符串s,从第 pos 个位置开始len 个字符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">substr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//在字符串s的第 pos 个字符之前插字符串 st
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//在字符串 s 中从第 pos 个字符开始寻找 str,并返回位置,如果找不到返回-1。pos 可以省略,默认值是 0。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//可以获取带空格字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">getline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" href="https://kevinwu06.lanzout.com/igPpV0rpkuve" target="_blank" rel="noopener"
>深入浅出程序设计竞赛.zip 蓝奏云&lt;/a>&lt;/p></description></item><item><title>阿谦读书笔记：Computational Fairy Tales</title><link>https://blog.fiveth.cc/p/ee7c/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/ee7c/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/computa.jpg" alt="Featured image of post 阿谦读书笔记：Computational Fairy Tales" />&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>This is a book on the &lt;strong>Computer Science book list of Oxford&lt;/strong>. It is a good book for crossing the threshold of computer science.&lt;/p>
&lt;p>The book briefly introduces the some &lt;strong>fundamental knowledges&lt;/strong> of computer science through an interesting adventure story.&lt;/p>
&lt;p>I recognized many &lt;strong>computational terms&lt;/strong> in the book that I&amp;rsquo;ve already learned in Chinese. So it helped me to know the spelling of the computational terms in English. And I also learned a lot that I&amp;rsquo;ve not learned about. I&amp;rsquo;ll keep on studying computer science and be on the way for fulfilling my dream.&lt;/p>
&lt;p>I note down all the essential terms in the book to sum it up and help me for review.&lt;/p>
&lt;h2 id="base">Base
&lt;/h2>&lt;p>&lt;strong>Computer Science:&lt;/strong> a way of thinking about problems.&lt;/p>
&lt;p>A set of core concepts-approaches to solving fundamental problems,and how combine them to solve larger and more complex problem.&lt;/p>
&lt;p>**Algorithm: **a set of specific steps for solving a problem.&lt;/p>
&lt;p>**Variable: **a place in memory where you can store a single piece of data.&lt;/p>
&lt;p>&lt;strong>IF-ELSE statements:&lt;/strong> branch off and execute one of different blocks of code.&lt;/p>
&lt;p>**Loops: **programming constructs for repeating a set of instructions until some terminal criterion is met.&lt;/p>
&lt;p>**Boolean logic: **base on two values: TRUE and FALSE&lt;/p>
&lt;p>&lt;strong>Binary:&lt;/strong> a number system which each digit can take one of 0 or 1.&lt;/p>
&lt;p>101=(1x2^2^)(0x2^1^)(1x2^0^)&lt;/p>
&lt;p>**Pseudocode: **an informal understandable way of writing algorithms.&lt;/p>
&lt;h2 id="data-structure">Data Structure
&lt;/h2>&lt;p>&lt;strong>Arrays:&lt;/strong> like a set of bins with a fixed number of slots.&lt;/p>
&lt;p>&lt;strong>Strings:&lt;/strong> sequences(array) of characters&lt;/p>
&lt;p>&lt;strong>Swapping two values:&lt;/strong>&lt;/p>
&lt;p>1.put one into temporary storage&lt;/p>
&lt;p>2.the other in the memory location of first entry&lt;/p>
&lt;p>3.the data from temporary storage is written to second entry.&lt;/p>
&lt;p>&lt;strong>Pointers:&lt;/strong> variables that hold addresses in the computer memory. &lt;em>Flexible&lt;/em>&lt;/p>
&lt;p>&lt;strong>Linked lists:&lt;/strong> data structures that store lists of items. Use pointer to store the next and previous node.&lt;/p>
&lt;p>&lt;strong>Stacks:&lt;/strong> last-in, first-out data structure.&lt;/p>
&lt;p>&lt;strong>Queues:&lt;/strong> first in, first out data structure.&lt;/p>
&lt;p>&lt;strong>Priority queues:&lt;/strong> return the highest priority data.&lt;/p>
&lt;p>&lt;strong>Binary search trees:&lt;/strong> efficient searches by value like a tree.&lt;/p>
&lt;p>&lt;strong>Caching data:&lt;/strong> storing a copy of data in a quickly accessible location to speed up future accesses of that data.&lt;/p>
&lt;p>&lt;strong>Recursion:&lt;/strong> a problem-solving technique that builds a solution to a problem from solutions to smaller subproblems of the same type.&lt;/p>
&lt;p>&lt;strong>Binary search:&lt;/strong> algorithm for efficiently finding a target value within a sorted list.&lt;/p>
&lt;p>&lt;strong>Insertion sort:&lt;/strong> simple inefficient sorting an array of number.&lt;/p>
&lt;p>&lt;strong>Bubble sort:&lt;/strong> Swapping adjacent elements if they are out of order.&lt;/p>
&lt;p>&lt;strong>Merge sort:&lt;/strong> Break the data in half, sort each half separately using merge sort and merge together.&lt;/p>
&lt;p>*&lt;strong>Oracle&amp;rsquo;s Array:&lt;/strong> Using algorithms and data structures together to create complex programs.&lt;/p>
&lt;p>&lt;strong>Graph:&lt;/strong> is defined by a set of nodes and a set of edges that link together the nodes.&lt;/p>
&lt;p>Directed/Undirected&lt;/p>
&lt;p>Weighted/Unweighted&lt;/p>
&lt;p>&lt;strong>Dijkstra&amp;rsquo;s algorithm:&lt;/strong> find the shortest path from a given starting node to all other nodes in the graph.&lt;/p>
&lt;p>&lt;strong>Representations of graphs:&lt;/strong> two common data structure representing graphs:&lt;/p>
&lt;p>​ &lt;strong>adjacency matrix:&lt;/strong> One row and one column for each node.&lt;/p>
&lt;p>​ &lt;strong>adjacency list:&lt;/strong> a separate list of neighbors for each node.&lt;/p>
&lt;p>&lt;strong>Traveling salesman problem:&lt;/strong> find the shortest path through a graph that visits each node and return to the starting node. &lt;em>&lt;strong>NP-hard&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>Depth-first search:&lt;/strong> a search algorithm that fully explores a single path before backtracking to test other paths.&lt;/p>
&lt;p>&lt;strong>Minimum Spanning Tree:&lt;/strong> the smallest set of edges that all of the nodes are connected.&lt;/p>
&lt;p>&lt;strong>Hamiltonian path:&lt;/strong> visits each node in a graph exactly one time. &lt;em>&lt;strong>NP-Hard&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="computational-thinking">Computational Thinking
&lt;/h2>&lt;p>Complex algorithms build on a core set of fundamental concepts. Mastering them and learn to combine them is the key to solving to problems.&lt;/p>
&lt;p>&lt;strong>NP-Hard:&lt;/strong> computational problems for which there are no known efficient and exact solution.&lt;/p>
&lt;p>&lt;strong>Quicksort:&lt;/strong> a recursive sorting algorithm that is similar to merge sort but faster.&lt;/p>
&lt;p>&lt;strong>Comments:&lt;/strong> additional text within code that improve the read ability.&lt;/p></description></item><item><title>阿谦学习笔记：HTML</title><link>https://blog.fiveth.cc/p/c57/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/c57/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/html.jpg" alt="Featured image of post 阿谦学习笔记：HTML" />&lt;p>这是我之前学习html做的一点笔记，是一些基础，非常简单好学。&lt;/p>
&lt;h2 id="网页基本信息">·网页基本信息
&lt;/h2>&lt;p>doctype声明&lt;/p>
&lt;h4 id="meta描述性标签">meta描述性标签
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/meta.webp" style="zoom:50%;" />
&lt;hr>
&lt;h2 id="网页基本标签">·网页基本标签
&lt;/h2>&lt;h5 id="标题标签">标题标签
&lt;/h5>&lt;p>h1~h6&lt;/p>
&lt;h5 id="段落标签">段落标签
&lt;/h5>&lt;p>p&lt;/p>
&lt;h4 id="换行标签">换行标签
&lt;/h4>&lt;p>br&lt;/p>
&lt;h4 id="粗体斜体">粗体斜体
&lt;/h4>&lt;p>粗体b 斜体i&lt;/p>
&lt;h4 id="特殊符号">特殊符号
&lt;/h4>&lt;p>（&amp;amp; ;）&lt;/p>
&lt;p>空格 nbsp&lt;/p>
&lt;p>大于gt 小于lt&lt;/p>
&lt;p>版权copy&lt;/p>
&lt;hr>
&lt;h2 id="图像标签">·图像标签
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/图像.webp" style="zoom: 25%;" />
&lt;hr>
&lt;h2 id="超链接标签">·超链接标签
&lt;/h2>&lt;h4 id="页面跳转">页面跳转
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/超链接.webp" style="zoom: 33%;" />
&lt;h4 id="锚链接">锚链接
&lt;/h4>&lt;p>&lt;strong>锚标记&lt;/strong> a id=“top”&lt;/p>
&lt;p>&lt;strong>邮件链接&lt;/strong> mailto:&lt;/p>
&lt;p>&lt;strong>QQ链接&lt;/strong> 上“qq推广”官网&lt;/p>
&lt;hr>
&lt;h2 id="概念行内元素和块元素">·*概念:行内元素和块元素
&lt;/h2>&lt;h4 id="块元素">块元素
&lt;/h4>&lt;p>独占一行的元素&lt;/p>
&lt;h4 id="行内元素">行内元素
&lt;/h4>&lt;p>撑开宽度的元素&lt;/p>
&lt;hr>
&lt;h2 id="列表">·列表
&lt;/h2>&lt;h4 id="有序列表无序列表">有序列表、无序列表
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/有序无序列表.webp" style="zoom: 33%;" />
&lt;h4 id="自定义列表">自定义列表
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/自定义列表.webp" style="zoom: 50%;" />
&lt;hr>
&lt;h2 id="表格标签">·表格标签
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/表格.webp" style="zoom:33%;" />
&lt;hr>
&lt;h2 id="媒体元素">·媒体元素
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/媒体.webp" style="zoom: 33%;" />
&lt;hr>
&lt;h2 id="页面结构">·页面结构
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/页面结构.webp" style="zoom: 25%;" />
&lt;hr>
&lt;h2 id="iframe内联框架">·iframe内联框架
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/iframe.webp" style="zoom: 33%;" />
&lt;p>链接控制iframe窗口跳转&lt;/p>
&lt;hr>
&lt;h2 id="表单">·表单
&lt;/h2>&lt;h4 id="表单-1">表单
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/表单.webp" style="zoom:33%;" />
&lt;h4 id="元素表单格式">元素表单格式
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/表单元素格式.webp" style="zoom: 25%;" />
&lt;h4 id="文本框">文本框
&lt;/h4>&lt;p>text&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/文本框.webp" style="zoom: 50%;" />
&lt;h4 id="单选框">单选框
&lt;/h4>&lt;p>radio&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/单选框.webp" style="zoom: 50%;" />
&lt;h4 id="多选框">多选框
&lt;/h4>&lt;p>checkbox&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/多选框.webp" style="zoom: 50%;" />
&lt;h4 id="按钮">按钮
&lt;/h4>&lt;p>button&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/按钮.webp" style="zoom: 50%;" />
&lt;h4 id="下拉框">下拉框
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/下拉框.webp" style="zoom: 50%;" />
&lt;h4 id="文本域文件域">文本域、文件域
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/文本文件域.webp" style="zoom: 33%;" />
&lt;h4 id="滑块搜索框">滑块、搜索框
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/滑块、搜索框.webp" style="zoom: 33%;" />
&lt;h4 id="简单验证">简单验证
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/功能表单.webp" style="zoom: 40%;" />
&lt;h2 id="表单应用">表单应用
&lt;/h2>&lt;p>只读 readonly&lt;/p>
&lt;p>禁用 disabled&lt;/p>
&lt;p>隐藏 hidden&lt;/p>
&lt;h2 id="表单初级验证">表单初级验证
&lt;/h2>&lt;p>placeholder 提示信息&lt;/p>
&lt;p>required 必填&lt;/p>
&lt;p>pattern 正则表达式（百度上搜索各种）&lt;/p>
&lt;hr>
&lt;p>图片来源于b站狂神说的html课程，推荐。&lt;/p></description></item></channel></rss>
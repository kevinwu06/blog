<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Fiveth</title><link>https://blog.fiveth.cc/post/</link><description>Recent content in Posts on Fiveth</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Fiveth</copyright><lastBuildDate>Mon, 10 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.fiveth.cc/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Fiveth's Life 1</title><link>https://blog.fiveth.cc/p/life-1/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/life-1/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/lowsun.webp" alt="Featured image of post Fiveth's Life 1" />&lt;p>Hi，这篇分享下最近的生活~&lt;/p>
&lt;h2 id="18岁生日">🥳18岁生日
&lt;/h2>&lt;p>时间过得真快，小时候一直期盼着成年，现在竟然要来了。&lt;/p>
&lt;h2 id="入手nas">💿入手NAS
&lt;/h2>&lt;p>正好前段时间在折腾数据的存储，所以我买了一台NAS（Z2pro+红盘plus4T），暂时只买了一个盘，数据的备份可以使用ZDR备份到网盘。我看中双盘位这个体积，之后出国留学方便携带。
&lt;img src="https://p.fiveth.cc/img/2024/0611211652.webp"
loading="lazy"
alt="NAS"
>&lt;img src="https://p.fiveth.cc/img/2024/0611211652-3.webp"
loading="lazy"
alt="软件页面"
>&lt;/p>
&lt;p>我已经把几台设备的照片全部备份到了NAS中，可以用极相册方便地查看所有照片。还可以在外面的时候用挂几个电影下载到NAS，回到家就可以看下好的电影了，幸福啊！&lt;/p>
&lt;h2 id="考季结束">✍️考季结束
&lt;/h2>&lt;p>两个月的A-Level考季终于结束了，总共考了12场考试，终于解放了😭。
&lt;img src="https://p.fiveth.cc/img/2024/0611211652-1.webp"
loading="lazy"
alt="考试日历"
>&lt;/p>
&lt;h2 id="开发游戏">💻开发游戏
&lt;/h2>&lt;p>最近又有兴致写游戏了，于是开始了一个游戏项目，用C++和SDL写，在b站发布&lt;a class="link" href="https://www.bilibili.com/video/BV1JD421373v/" target="_blank" rel="noopener"
>开发日志&lt;/a>。&lt;/p>
&lt;p>不得不说独立开发者在媒体&lt;code>发布开发日志&lt;/code>是&lt;code>非常好的方法&lt;/code>，可以&lt;code>获得群众的建议和反馈&lt;/code>，目前看评论区的反馈让我受启发改了许多地方了，闭门造车容易走弯路。&lt;/p>
&lt;p>&lt;img src="https://p.fiveth.cc/img/2024/0611211652-2.webp"
loading="lazy"
alt="开始页面"
>&lt;img src="https://p.fiveth.cc/img/2024/0611211652-7.webp"
loading="lazy"
alt="游戏画面"
>&lt;/p>
&lt;h2 id="健身进度">💪健身进度
&lt;/h2>&lt;p>到现在健身大概一年半了，我体重现在67kg，这周卧推新pr 80kg，大概是1.2倍体重了，不知道明年能不能破百呢，话说我卧推现在练的挺少的，今年一直都是主练腿，蹲拉新pr都还没测，我先再沉淀一波。&lt;/p>
&lt;h2 id="空洞骑士">🦴空洞骑士
&lt;/h2>&lt;p>好久没玩游戏了，前段时间一直&lt;code>电子阳痿&lt;/code>，没什么兴致玩游戏，steam库里一堆游戏找不到想玩的。最近在玩&lt;code>空洞骑士&lt;/code>，打到竞技场了，还整到了坚固力量。最喜欢这游戏的下劈，这个特性真的爽。
&lt;img src="https://p.fiveth.cc/img/2024/0611211652-5.webp"
loading="lazy"
alt="空洞骑士"
>&lt;/p>
&lt;h2 id="追追追番">📺追追追番
&lt;/h2>&lt;p>也是好久没看番了，这几周看了《镇魂街3》、《怪兽8号》、《我独自升级》、《五等分的新娘》、《我推的孩子》。&lt;/p>
&lt;p>《五等分的新娘》看完后劲好大，&lt;code>二乃天外飞仙&lt;/code>！&lt;/p>
&lt;blockquote>
&lt;p>最近正好官方决定制作后续《新婚旅行篇》，又有得看了！
&lt;img src="https://p.fiveth.cc/img/2024/0611211652-6.webp"
loading="lazy"
alt="二乃"
>&lt;/p>
&lt;/blockquote>
&lt;h2 id="美剧硅谷">🧑‍💻美剧硅谷
&lt;/h2>&lt;p>上个月一直在看美剧&lt;code>《硅谷》&lt;/code>，总共六季全看完了。讲述程序员在硅谷创业的搞笑美剧。好几次笑的肚子疼。&lt;/p>
&lt;blockquote>
&lt;p>这部剧被&lt;code>比尔盖茨&lt;/code>写观后感推荐过。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://p.fiveth.cc/img/2024/0611211652-4.webp"
loading="lazy"
alt="硅谷"
>&lt;/p>
&lt;h2 id="写写手账">📒写写手账
&lt;/h2>&lt;p>开始写手账到现在两个月了，我的手账结构是这样的，第一个板块写每天待办（原来是待办，现在已经变成记每天做了什么了），然后有什么趣事、想法就写在旁边，记录一下情绪。每个月画几个打卡表，包括冥想、健身。后面有个笔记板块，每读一本书就记一两面。是个比较自由随意的all-in-one。&lt;/p>
&lt;p>&lt;code>写手帐的原因&lt;/code>：以后就可以回看每天都做了什么，不写的话很多记忆就消失了，其次每天写自己做了什么还可以让自己反思、改进。&lt;/p>
&lt;p>到现在坚持记了两个月了，一开始特别有热情。最近越来越懒了，p人属性爆发了（我就不信了，一定要把p人属性干掉💢）。找找状态继续坚持。&lt;/p></description></item><item><title>颈椎训练：每个人都应该将其加入日常</title><link>https://blog.fiveth.cc/p/train-neck/</link><pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/train-neck/</guid><description>&lt;img src="https://p.fiveth.cc/img/2024/0522220801.webp" alt="Featured image of post 颈椎训练：每个人都应该将其加入日常" />&lt;p>hi大家好，作为一个学生的我，一直对体态问题有关注。&lt;/p>
&lt;p>每天都长时间坐着学习、看电脑，颈椎难免出现问题，如头前倾、颈椎生理曲度变直、富贵包，所以有一套固定的&lt;code>颈椎保健训练&lt;/code>很重要。&lt;/p>
&lt;p>⭐&lt;a class="link" href="https://space.bilibili.com/408907896" target="_blank" rel="noopener"
>脊医博士鹏哥&lt;/a>作为中国奥委会备战特聘的运动脊医专家，给出的&lt;code>训练方案&lt;/code>非常科学全面，让看过很多相关视频的我眼前一新。没想到加入平衡训练和眼睛训练，对我们的脊椎和脊柱有很大帮助。其次颈椎的问题还和我们大脑的压力息息相关。&lt;/p>
&lt;blockquote>
&lt;p>视频推荐：&lt;/p>
&lt;p>&lt;a class="link" href="https://www.bilibili.com/video/BV141421B7G6/" target="_blank" rel="noopener"
>【脊医博士鹏哥】颈椎训练&lt;/a>
&lt;a class="link" href="https://www.bilibili.com/video/BV1wm411S7jQ/" target="_blank" rel="noopener"
>【脊医博士鹏哥】眼睛重新校准训练&lt;/a>（颈椎训练中的眼睛训练的补充，可以刺激脑干）&lt;/p>
&lt;/blockquote>
&lt;h1 id="笔记">笔记
&lt;/h1>&lt;p>这是从视频中提取的笔记，建议结合视频实用。&lt;/p>
&lt;h2 id="基础">💪基础
&lt;/h2>&lt;h3 id="1--平衡训练">1. 平衡训练
&lt;/h3>&lt;p>&lt;strong>目的&lt;/strong>：训练前挺脊髓束
单脚站立30s（进阶：闭眼）&lt;/p>
&lt;h3 id="2-练眼睛">2. 练眼睛
&lt;/h3>&lt;p>&lt;strong>目的&lt;/strong>：刺激脑干
眼睛跟着笔走，上下左右
然后闭眼，鼻子吸气4s，嘴巴吐气8s&lt;/p>
&lt;h3 id="3--颈椎深层肌肉">3. 颈椎深层肌肉
&lt;/h3>&lt;p>颈椎对抗：10s，5次&lt;/p>
&lt;h3 id="4-生物压力反馈仪">4. 生物压力反馈仪
&lt;/h3>&lt;p>购买一个&lt;code>生物压力反馈仪&lt;/code>，能锻炼大脑对颈椎的控制能力&lt;/p>
&lt;h2 id="日常">🌞日常
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>蜂鸟&lt;/strong>：手呈w形状转动，像蜂鸟一样飞&lt;/li>
&lt;li>&lt;strong>压背部&lt;/strong>：跪着，把手肘压在凳子上&lt;/li>
&lt;li>&lt;strong>头靠墙支撑&lt;/strong>&lt;/li>
&lt;/ol>
&lt;h2 id="支撑">🦴支撑
&lt;/h2>&lt;p>&lt;strong>最佳枕头所需的三个支撑点&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>后脑勺：无感支撑，放松大脑&lt;/p>
&lt;/li>
&lt;li>
&lt;p>颈椎曲度：软支撑&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>颈胸椎结合处（富贵包）：强支撑&lt;/code> 这个很重要&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>将&lt;code>颈胸椎结合处&lt;/code>撑在枕头最硬的突起处，做牵引。&lt;/p></description></item><item><title>Hello Hugo</title><link>https://blog.fiveth.cc/p/hello-hugo/</link><pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/hello-hugo/</guid><description>&lt;img src="https://p.fiveth.cc/img/2024/0518131750.webp" alt="Featured image of post Hello Hugo" />&lt;p>hi，大家应该发现了，我的博客大变样了（不是💩样）&lt;/p>
&lt;p>因为我把博客从&lt;code>Hexo&lt;/code>迁移到了&lt;code>Hugo&lt;/code>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>2022年疫情上网课的时候，我用&lt;code>Hexo&lt;/code>搭建了我的个人博客&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2024将博客迁移至了&lt;code>Hugo&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="原因">😯原因
&lt;/h2>&lt;h3 id="优点">优点
&lt;/h3>&lt;ol>
&lt;li>相比&lt;code>Hexo&lt;/code>，&lt;code>Hugo&lt;/code>的静态&lt;code>生成速度更快&lt;/code>。在本地运行后半秒不到就能在本地生成完页面，方便调试。&lt;/li>
&lt;li>看了L1nSn0w大佬的博客后，被&lt;code>Stack主题&lt;/code>这个&lt;code>简约舒适&lt;/code>的博客页面狠狠种草了。个人觉得这样的页面阅读体验非常好，没有其他花里胡哨的东西吸引眼球，进来就是一排文章，方便阅读。&lt;/li>
&lt;li>最主要是为了&lt;code>减少折腾&lt;/code>，这让我可以&lt;code>专心地写文章&lt;/code>。不再反复折腾博客页面。&lt;/li>
&lt;/ol>
&lt;h3 id="缺点">缺点
&lt;/h3>&lt;ol>
&lt;li>&lt;code>Hugo&lt;/code>在国内的&lt;code>社区&lt;/code>没有&lt;code>Hexo&lt;/code>的大，意味着遇到问题比较难找到解决方法，需要一定Debug能力。&lt;/li>
&lt;li>没有&lt;code>Hexo&lt;/code>那么多&lt;code>插件功能&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="so">So
&lt;/h3>&lt;p>对我来说，Hugo会更加适合我。&lt;/p>
&lt;p>大家可以根据个人需求和喜好选择，看看自己是要简约的，还是多功能、自定义化高的。&lt;/p>
&lt;blockquote>
&lt;p>这里奉上我的&lt;a class="link" href="https://blog.fiveth.cc/tags/hexo/" target="_blank" rel="noopener"
>Hexo博客搭建教程&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="关于hugo安装">😎关于Hugo安装
&lt;/h2>&lt;p>这里列出我在hugo博客搭建过程中阅读的文章：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.linsnow.cn/p/join-hugo-and-stack/" target="_blank" rel="noopener"
>【L1nSn0w】(1)带着Stack主题入坑Hugo&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.linsnow.cn/p/deploy-hugo/" target="_blank" rel="noopener"
>【L1nSn0w】(2)部署你的Hugo博客&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/m0_51993913/article/details/132657065" target="_blank" rel="noopener"
>【CSDN】GitHub Action自动化部署Hugo博客&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://blog.linsnow.cn/p/modify-hugo/" target="_blank" rel="noopener"
>【L1nSn0w】(3)Stack主题的自定义&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>我在自动部署处做了些改动&lt;/strong>：&lt;/p>
&lt;p>把&lt;code>deploy_key&lt;/code>那行换成&lt;code>PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}&lt;/code>，然后在仓库设置添加secret变量&lt;code>PERSONAL_TOKEN&lt;/code>，里面填&lt;code>token&lt;/code>。&lt;code>token&lt;/code>在用户设置中创建，要勾选&lt;code>repo&lt;/code>和&lt;code>workflow&lt;/code>权限。&lt;/p></description></item><item><title>618购物攻略：今年规则大改，取消预售</title><link>https://blog.fiveth.cc/p/208b/</link><pubDate>Thu, 09 May 2024 22:11:16 +0000</pubDate><guid>https://blog.fiveth.cc/p/208b/</guid><description>&lt;img src="https://p.fiveth.cc/img/2024/0518115531.jpg" alt="Featured image of post 618购物攻略：今年规则大改，取消预售" />&lt;p>今天偶然在微信公众号看到天猫618的规则改了，取消了预售制度。&lt;/p>
&lt;p>虽然以前的规则我也不太了解，不过想到正好有东西要买，所以就提前做了波攻略，看看怎么样买最省钱。&lt;/p>
&lt;p>接下来让我们看看吧~&lt;/p>
&lt;h2 id="今年618规则">🛍️今年618规则
&lt;/h2>&lt;h3 id="活动时间">活动时间
&lt;/h3>&lt;p>取消5月10号的预售制度，购物爆发节点改为5.20和5.31。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>年中开门红&lt;/strong>：5.20 8:00后&lt;/li>
&lt;li>&lt;strong>618年中狂欢节&lt;/strong>：5.31 8:00后&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>注意：年中开门红价格&amp;lt;618年中狂欢节价格&lt;/p>
&lt;/blockquote>
&lt;p>最好在活动开始后马上买，不然优惠会偷偷变小。
所以尽量5.20买，有遗漏的就等5.31。&lt;/p>
&lt;h3 id="满减机制">满减机制：
&lt;/h3>&lt;ul>
&lt;li>满300减50&lt;/li>
&lt;li>满200减30&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>技巧：凑不够可以买不需要的，下完单后退货🤪&lt;/p>
&lt;/blockquote>
&lt;h3 id="价保制度">价保制度
&lt;/h3>&lt;p>价保时间延长至7月5日，只要买贵了，点&lt;code>一键价保&lt;/code>，强制退还差价。&lt;/p>
&lt;h2 id="小技巧">✍️小技巧
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>优惠卷&lt;/strong>：记得在活动主页领品类卷，可以叠加优惠。&lt;/li>
&lt;li>&lt;strong>直播间&lt;/strong>：进品牌直播间的专属链接下单，会有优惠。&lt;/li>
&lt;li>&lt;strong>入会&lt;/strong>：第一次下单的品牌记得先入会，领新人优惠卷。&lt;/li>
&lt;li>&lt;strong>会员福利&lt;/strong>：88VIP享九五折，大额优惠券，无限次退货，品牌会员额外优惠。&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>最后，虽然活动促销很好，但是不要掉入资本主义的陷阱，要注意理性消费，不要因为有折扣就买不需要的物品。&lt;/p>
&lt;blockquote>
&lt;p>本文参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.bilibili.com/video/BV1hC411j7Qv/" target="_blank" rel="noopener"
>【bilibili】618最全攻略！规则巨变！一篇讲清怎么买最划算！&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://mp.weixin.qq.com/s/BLDLq5YnxBpIIEyl8R68Wg" target="_blank" rel="noopener"
>【黑马公社】淘宝下狠手，12年“毒瘤”，说砍就砍！&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>Hexo搭建进阶：Vercel部署、主题安装、基础用法</title><link>https://blog.fiveth.cc/p/138e/</link><pubDate>Mon, 29 Apr 2024 21:33:53 +0000</pubDate><guid>https://blog.fiveth.cc/p/138e/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/hexo.jpg" alt="Featured image of post Hexo搭建进阶：Vercel部署、主题安装、基础用法" />&lt;p>{% note info flat %}&lt;/p>
&lt;ul>
&lt;li>本篇前文：&lt;a class="link" href="https://blog.fiveth.cc/p/bb32.html" >如何用Hexo搭建个人博客?&lt;/a>&lt;/li>
&lt;li>本文基于&lt;a class="link" href="https://www.fomal.cc/posts/4aa2d85f.html" target="_blank" rel="noopener"
>Hexo博客搭建基础教程(二)&lt;/a>修改，部分转载&lt;/li>
&lt;li>我的&lt;strong>Hexo优化系列&lt;/strong>：&lt;a class="link" href="https://blog.fiveth.cc/tags/hexo" >Hexo文章目录&lt;/a>
{% endnote %}&lt;/li>
&lt;/ul>
&lt;p>我的博客搭建教程是一年前写的了，非常感谢&lt;a class="link" href="https://www.fomal.cc/" target="_blank" rel="noopener"
>fomalhaut&lt;/a>，当时我是跟着他的教程一步步搭建的。最近我终于在b站发了视频版的博客搭建教程，有很多朋友想进一步优化博客。这篇文章接上一篇，教大家将博客部署到vercel、主题安装、Hexo博客的基础用法。&lt;/p>
&lt;h2 id="vercel部署">Vercel部署
&lt;/h2>&lt;p>Github提供的网址在国内的访问速度较慢，所以推荐在搭建完后用&lt;a class="link" href="https://vercel.com/" target="_blank" rel="noopener"
>Vercel&lt;/a>部署，再通过Vercel绑定到自己的域名上，这样会速度会很快。&lt;/p>
&lt;p>因为Vercel给我们分配的域名在国内是无法访问的，所以我们需要把在Vercel部署的绑定到自己的域名上，这样就可以访问了。&lt;/p>
&lt;p>域名可以在&lt;a class="link" href="https://www.aliyun.com/" target="_blank" rel="noopener"
>阿里云&lt;/a>等域名供应商购买，我用的是&lt;a class="link" href="https://www.west.cn/" target="_blank" rel="noopener"
>西部数码&lt;/a>，便宜好用。&lt;/p>
&lt;blockquote>
&lt;p>建议选用&lt;code>com&lt;/code>，&lt;code>cn&lt;/code>或&lt;code>cc&lt;/code>等常用好记的顶域，对SEO比较友好，自定义部分的长度尽可能短，别人才会更容易地记住你的网站，域名就是网站的名片。&lt;/p>
&lt;/blockquote>
&lt;h3 id="使用vercel部署">使用Vercel部署
&lt;/h3>&lt;ol>
&lt;li>首先需要一个&lt;a class="link" href="https://vercel.com/" target="_blank" rel="noopener"
>Vercel&lt;/a>账号，这里&lt;strong>推荐用GitHub账户关联，这样你就可以在vercel中直接托管你的GitHub库中的项目了&lt;/strong>，实现开发部署一步到位（网络不流畅可以考虑挂梯子）。&lt;/li>
&lt;li>当你用你的Github账户关联并绑定手机号登录之后，点击右上角的&lt;code>Add New Project&lt;/code>创建新的项目，之后导入选项那里选择&lt;code>Continue with Github&lt;/code>，这时候应该能看到你Github账号的仓库，选择你刚刚部署成功的存储静态博客的仓库&lt;code>&amp;lt;username&amp;gt;.github.io&lt;/code>右边的&lt;code>Import&lt;/code>选项，表示你要导入该仓库。&lt;/li>
&lt;li>起一个只能有字母、数字或者或者连字符的项目名称，然后其他默认，点击&lt;code>Deploy&lt;/code>，等待一分钟即可部署成功，部署成功后电极&lt;code>Continue to Dashboard&lt;/code>跳转到控制面板，下图所示就是控制面板，看到就代表成功部署到了，但是我们现在还不能访问他给出的域，因为GFW把Vercel屏蔽了。&lt;/li>
&lt;/ol>
&lt;h3 id="绑定自定义域名">绑定自定义域名
&lt;/h3>&lt;p>现在你有一个github托管的网址&lt;code>username.github.io&lt;/code>，以及在Vercel上有一个&lt;code>blog-demo-chi.vercel.app&lt;/code>，但是它国内无法访问，所以这时候我们就需要将Vercel部署的网页绑定到自己的域名上。&lt;/p>
&lt;p>&lt;strong>接下来我们绑定自己的域名：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>点击Vercel控制面板右上角的&lt;code>View Domains&lt;/code>查看当前的域，我们可以看到仅有Vercel给你预分配的一个域名，此时我们输入我们要用的域名，添加后他会提示你添加一条DNS解析记录。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>我买的域名是&lt;code>fiveth.cc&lt;/code>，我决定用二级域名&lt;code>blog.fiveth.cc&lt;/code>当我博客的域名，大家也可以直接用根域名&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>接下来在域名解析记录里面添加记录，其中记录类型对应&lt;code>Type&lt;/code>，主机记录对应&lt;code>Name&lt;/code>，记录值对应&lt;code>Value&lt;/code>，其他的设置默认即可。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>如果不成功，可以尝试统一用&lt;code>A记录&lt;/code>，值&lt;code>76.223.126.88&lt;/code>&lt;/p>
&lt;p>如下是我的示例，&lt;code>blog&lt;/code>解析出来的域名是&lt;code>blog.fiveth.cc&lt;/code>，&lt;code>@&lt;/code>解析出来的是根域名&lt;code>fiveth.cc&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;img src="https://p.fiveth.cc/img/2024/0429203503.png" style="zoom:33%;" />
&lt;ol start="3">
&lt;li>回到Vercel刚刚查看域名的地方，如果操作没问题，应该会显示域名配置成功的提示，此时就可以通过自定义域名来访问我们搭建的网站了。&lt;/li>
&lt;li>当你有了新的域名之后，需要将&lt;code>[BlogRoot]\_config.yml&lt;/code>文件中的&lt;code>url&lt;/code>配置项改为自己的新域名，这样博客的文章链接才会正确生成。&lt;/li>
&lt;/ol>
&lt;h2 id="安装主题">安装主题
&lt;/h2>&lt;h3 id="butterfly主题">Butterfly主题
&lt;/h3>&lt;p>&lt;a class="link" href="https://butterfly.js.org/" target="_blank" rel="noopener"
>Butterfly主题&lt;/a>是最流行的主题，拥有很大的社区，自定义度高，还可以用来魔改。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>这是官方的安装文档：&lt;a class="link" href="https://butterfly.js.org/posts/21cfbf15" target="_blank" rel="noopener"
>【Butterfly 安裝文檔】&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Butterfly的魔改：推荐文章&lt;a class="link" href="https://www.fomal.cc/posts/eec9786.html" target="_blank" rel="noopener"
>【博客魔改教程总结(一)】&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="安知鱼主题">安知鱼主题
&lt;/h3>&lt;p>&lt;a class="link" href="https://docs.anheyu.com/" target="_blank" rel="noopener"
>安知鱼主题&lt;/a>一款基于Butterfly主题修改的主题，也是我目前在使用的。&lt;/p>
&lt;p>如果大家也想用和我一样的话，可以直接跟着&lt;a class="link" href="https://docs.anheyu.com/" target="_blank" rel="noopener"
>【安知鱼主题官方文档】&lt;/a>进行安装和配置，文档非常详细。&lt;/p>
&lt;h3 id="其他主题">其他主题
&lt;/h3>&lt;p>hexo还有很多其他主题，可以在&lt;a class="link" href="https://hexo.io/themes/" target="_blank" rel="noopener"
>hexo主题&lt;/a>中找到。&lt;/p>
&lt;h2 id="基础用法">基础用法
&lt;/h2>&lt;h3 id="front-matter">Front-matter
&lt;/h3>&lt;p>&lt;code>Front-matter&lt;/code> 是 markdown 文件最上方以&lt;code>---&lt;/code>分隔的区域，用于指定个别档案的变数。&lt;/p>
&lt;ul>
&lt;li>Page Front-matter 用于页面配置&lt;/li>
&lt;li>Post Front-matter 用于文章页配置&lt;/li>
&lt;/ul>
&lt;p>如果标注可选的参数，可根据自己需要添加，不用全部都写&lt;/p>
&lt;p>&lt;strong>Page Front-matter：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-MARKDOWN" data-lang="MARKDOWN">&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">updated:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">comments:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">keywords:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">top_img:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mathjax:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">katex:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aside:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aplayer:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">highlight_shrink:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">写法&lt;/th>
&lt;th>解释&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">title&lt;/td>
&lt;td>【必需】页面标题&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">date&lt;/td>
&lt;td>【必需】页面创建日期&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">type&lt;/td>
&lt;td>【必需】标籤、分类和友情链接三个页面需要配置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">updated&lt;/td>
&lt;td>【可选】页面更新日期&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">description&lt;/td>
&lt;td>【可选】页面描述&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">keywords&lt;/td>
&lt;td>【可选】页面关键字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">comments&lt;/td>
&lt;td>【可选】显示页面评论模块(默认 true)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">top_img&lt;/td>
&lt;td>【可选】页面顶部图片&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">mathjax&lt;/td>
&lt;td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">kates&lt;/td>
&lt;td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">aside&lt;/td>
&lt;td>【可选】显示侧边栏 (默认 true)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">aplayer&lt;/td>
&lt;td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">highlight_shrink&lt;/td>
&lt;td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Post Front-matter：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-MARKDOWN" data-lang="MARKDOWN">&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">updated:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tags:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">categories:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">keywords:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">top_img:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">comments:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">image:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">toc:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">toc_number:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">toc_style_simple:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">copyright:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">copyright_author:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">copyright_author_href:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">copyright_url:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">copyright_info:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mathjax:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">katex:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aplayer:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">highlight_shrink:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aside:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>写法&lt;/th>
&lt;th>解释&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>title&lt;/td>
&lt;td>【必需】文章标题&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>date&lt;/td>
&lt;td>【必需】文章创建日期&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>updated&lt;/td>
&lt;td>【可选】文章更新日期&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>tags&lt;/td>
&lt;td>【可选】文章标籤&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>categories&lt;/td>
&lt;td>【可选】文章分类&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>keywords&lt;/td>
&lt;td>【可选】文章关键字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>description&lt;/td>
&lt;td>【可选】文章描述&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>top_img&lt;/td>
&lt;td>【可选】文章顶部图片&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cover&lt;/td>
&lt;td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>comments&lt;/td>
&lt;td>【可选】显示文章评论模块(默认 true)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>toc&lt;/td>
&lt;td>【可选】显示文章TOC(默认为设置中toc的enable配置)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>toc_number&lt;/td>
&lt;td>【可选】显示toc_number(默认为设置中toc的number配置)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>toc_style_simple&lt;/td>
&lt;td>【可选】显示 toc 简洁模式&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>copyright&lt;/td>
&lt;td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>copyright_author&lt;/td>
&lt;td>【可选】文章版权模块的文章作者&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>copyright_author_href&lt;/td>
&lt;td>【可选】文章版权模块的文章作者链接&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>copyright_url&lt;/td>
&lt;td>【可选】文章版权模块的文章连结链接&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>copyright_info&lt;/td>
&lt;td>【可选】文章版权模块的版权声明文字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>mathjax&lt;/td>
&lt;td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>katex&lt;/td>
&lt;td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>aplayer&lt;/td>
&lt;td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>highlight_shrink&lt;/td>
&lt;td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>aside&lt;/td>
&lt;td>【可选】显示侧边栏 (默认 true)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>注意：我的博客根目录路径为 【D:/Blog/】，下文所说的根目录都是此路径，将用[BlogRoot]代替。&lt;/p>
&lt;h3 id="标签页">标签页
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>前往你的Hexo博客根目录，打开&lt;code>Git Bash&lt;/code>执行如下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-SHELL" data-lang="SHELL">&lt;span class="line">&lt;span class="cl">hexo new page tags
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在&lt;code>[BlogRoot]\source\&lt;/code>会生成一个含有&lt;code>index.md&lt;/code>文件的&lt;code>tags&lt;/code>文件夹。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改&lt;code>[BlogRoot]\source\tags\index.md&lt;/code>，添加&lt;code>type: &amp;quot;tags&amp;quot;&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-MARKDOWN" data-lang="MARKDOWN">&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: tags
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date: 2022-10-28 12:00:00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type: &amp;#34;tags&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="友情链接">友情链接
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>前往你的Hexo博客根目录，打开cmd命令窗口执行如下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hexo new page link
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在&lt;code>[BlogRoot]\source\&lt;/code>会生成一个含有&lt;code>index.md&lt;/code>文件的&lt;code>link&lt;/code>文件夹&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改&lt;code>[BlogRoot]\source\link\index.md&lt;/code>，添加&lt;code>type: &amp;quot;link&amp;quot;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: link
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">date: 2024-4-29 12:00:00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type: &amp;#34;link&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>前往&lt;code>[BlogRoot]\source\_data&lt;/code>创建一个&lt;code>link.yml&lt;/code>文件（如果沒有 &lt;code>_data&lt;/code> 文件夹，请自行创建），并写入如下信息（根据你的需要写）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">class_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1.&lt;/span>&lt;span class="l">技术支持&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">class_desc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">本网站的搭建由以下开源作者提供技术支持&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">link_list&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Hexo &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">link&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://hexo.io/zh-cn/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">avatar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">descr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">快速、简单且强大的网志框架&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">siteshot&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://source.fomal.cc/siteshot/hexo.io.jpg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">class_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2.&lt;/span>&lt;span class="l">友情链接&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">class_desc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">一些好朋友~~&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">link_list&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Fiveth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">link&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://blog.fiveth.cc/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">avatar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://p.fiveth.cc/avatar.jpg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">descr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">分享知识与生活&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">siteshot&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://p.fiveth.cc/siteshot.jpg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>class_name和class_desc支持 html 格式，如不需要，也可以留空。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="子页面">子页面
&lt;/h3>&lt;p>子页面也是普通的页面，可以使用&lt;code>hexo new page xxx&lt;/code>创建页面。&lt;/p>
&lt;h3 id="404页面">404页面
&lt;/h3>&lt;p>主題內置了一个简单的404页面，可在设置中开放。&lt;/p>
&lt;p>如需本地预览，请访问 http://localhost:4000/404.html&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">## A simple 404 page&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">error_404&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">subtitle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;页面沒有找到&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">background&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr></description></item><item><title>读书日：聊聊我的读书方法</title><link>https://blog.fiveth.cc/p/ef0e/</link><pubDate>Tue, 23 Apr 2024 13:48:27 +0000</pubDate><guid>https://blog.fiveth.cc/p/ef0e/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/lowsun.webp" alt="Featured image of post 读书日：聊聊我的读书方法" />&lt;p>{% tip sync %}4.23 今天是世界读书日📖{% endtip %}&lt;/p>
&lt;p>正好最近我最近开始记录阅读，规划读书。&lt;/p>
&lt;p>这篇文章就和大家聊聊我的读书方法&lt;/p>
&lt;h2 id="为什么读书">为什么读书
&lt;/h2>&lt;p>以前我都是看视频获取知识的，在这个时代，通过短视频在很短时间获得大量信息。&lt;/p>
&lt;p>但现在我开始阅读，通过书籍去学习。为什么呢？&lt;/p>
&lt;ol>
&lt;li>书籍是作者花几年时间写的，而视频通常只是几天时间做出的。&lt;/li>
&lt;li>书中大量的举例、解释，让我们对知识了解更通透。&lt;/li>
&lt;li>自己提取出来的知识，印象才会深，记得深。&lt;/li>
&lt;li>读书可以进入心流状态，提高专注力。在这个快节奏的时代，离开手机，读读书，可以让我们慢下来。&lt;/li>
&lt;/ol>
&lt;p>我只列出了几个点，读书的原因有很多，许多名人都推荐我们读书。&lt;/p>
&lt;h2 id="我的博客书单页面">我的博客书单页面
&lt;/h2>&lt;p>我给博客开了一个&lt;a class="link" href="https://blog.fiveth.cc/book" >我的书单&lt;/a>页面，记录我每个月的阅读书籍。&lt;/p>
&lt;p>用的是&lt;a class="link" href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu" target="_blank" rel="noopener"
>anzhiyu&lt;/a>主题里面的&lt;code>装备页面&lt;/code>改的。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/2024/0423150425.jpg" style="zoom: 67%;" />
&lt;h2 id="我的读书笔记">我的读书笔记
&lt;/h2>&lt;p>我每读一本书，都会用&lt;strong>一面A5纸&lt;/strong>做一个读书笔记。&lt;/p>
&lt;p>对，就是一面A5纸，我会把笔记的量控制在这张纸中。为什么呢？&lt;/p>
&lt;p>因为我们的&lt;strong>记忆是有限的&lt;/strong>。很多人在读书后会做大量的梳理、思维导图，但大部分人只是将作者的思路框架重新理了一遍，告诉自己搞懂了。之前我也试过做全书梳理的笔记，结果发现自己没有记住书中的多少知识，并且也不愿意再翻那长长的笔记。&lt;/p>
&lt;p>实际上，一本书，只要有一个点让我们受到感触，并让我们去行动了，那它就发挥了巨大的价值。在读完后只记下最受感触的几个点，并尝试将他们运用起来，&lt;strong>做出改变&lt;/strong>。而不是大量梳理，告诉自己我懂了。&lt;/p>
&lt;blockquote>
&lt;p>我之前的文章 &lt;a class="link" href="https://blog.fiveth.cc/9c7a.html" >一本让我开始觉醒的书：《认知觉醒》&lt;/a>中有讲过&lt;/p>
&lt;/blockquote>
&lt;h2 id="我用什么读书">我用什么读书
&lt;/h2>&lt;p>每次看完书都要重新在网上买书，等快递。&lt;/p>
&lt;p>所以之前我会用iPad读书，书籍我都是从&lt;a class="link" href="https://zlib.yibook.org/" target="_blank" rel="noopener"
>Zlibrary&lt;/a>下载。但是，阅读时长上去之后，眼睛看久了会疲劳，伤视力。于是，我就买了个电纸书：&lt;/p>
&lt;p>我现在用的是&lt;code>kindle kwp3&lt;/code>，某鱼330💰入手的，非常小巧可爱，白色的颜值非常高。可以拿着在地铁上看书。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/2024/0423150751.jpg" alt="我的kindle kwp3" style="zoom:50%;" />
&lt;p>我一般都是从zlibrary下书，而且还可以保存在amazon的图书馆云端上，要读的时候再下载。&lt;/p>
&lt;hr>
&lt;p>{% tip info %}读书是一生的习惯，让我们一起读书吧📖。{% endtip %}&lt;/p></description></item><item><title>雅思7分的教训：听力8.5，口语踩雷</title><link>https://blog.fiveth.cc/p/938f/</link><pubDate>Sat, 20 Apr 2024 20:24:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/938f/</guid><description>&lt;img src="https://p.fiveth.cc/img/2024/0420213033.jpg" alt="Featured image of post 雅思7分的教训：听力8.5，口语踩雷" />&lt;p>这是我第二次考雅思，考了7分。全靠听力8.5拉的分，口语甚至只考了个5.5，非常离谱。我对这份成绩是有些失望的，尤其是口语给我整无语了。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/2024/0420203736.jpg" style="zoom:50%;" />
&lt;p>我第一次考的是6.5分，当时口语还有6，这次给了个5.5，我个人认为发挥是差不多的，可能是考官的判断问题。值得一提的是我踩了个雷，在有一个问题的时候，我刚回答了个&lt;code>Of Course&lt;/code>，之后考官立马地打断我，问下一个问题。当时我非常疑惑，回头考完一查发现&lt;code>Of Course&lt;/code>是非常不礼貌的，意思相当于&lt;code>“这不废话吗”&lt;/code>😅。&lt;/p>
&lt;p>非常可惜，口语小分没有到大学申请标准，如果有6的话，这份成绩单至少可以用来保底。但是没关系，我的目标不局限于此，暑假的时候我会做好准备后再考一次，争取总分7.5，小分6.5。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/2024/0420212221.jpg" style="zoom:50%;" />
&lt;p>不过听力稳定发挥了我的平常实力，还是很好的。给大家分享以下我学习英语的一些小方法：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>看英语视频&lt;/strong>，老生常谈了，但是有要点，就是去看自己&lt;strong>感兴趣的内容&lt;/strong>，比如我平时喜欢在b站看教学视频，那不妨去Youtube上看看，可以找到更多优质的内容。为了学习视频中讲的内容，我就会认真去听，并且思维模式也会跟着作者的英语走。这个时候英语就是我用来学习其他东西的工具/媒介，练习英语只是顺带着。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>我还发现一个非常有用的方法，就是&lt;strong>用英语写日记&lt;/strong>。如果你已经有写日记的习惯，那可以试试改成用英语写，这个方法非常有效，你在表达自己想法和情绪的时候，就必须用英语组织出来，遇到不会讲的也会去查了然后写上去。只需要坚持几天，就会发现自己有时候思考是用英语思考的，非常有意思。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>总结发现，这两个方法都是将英语作为一种&lt;strong>工具&lt;/strong>去使用，顺带着用英语去做别的事，而不用特意的去学习，我认为这是很好的方法。非常适合真正、长期地地提升英语硬实力，但是如果是应对考试之类的，还是专项训练会效率比较高。&lt;/p></description></item><item><title>一本让我开始觉醒的书：《认知觉醒》</title><link>https://blog.fiveth.cc/p/9c7a/</link><pubDate>Sun, 14 Apr 2024 21:57:47 +0000</pubDate><guid>https://blog.fiveth.cc/p/9c7a/</guid><description>&lt;img src="https://p.fiveth.cc/img/2024/0518114933.jpg" alt="Featured image of post 一本让我开始觉醒的书：《认知觉醒》" />&lt;p>最近我读了《认知觉醒》这本书，作者是周岭。我非常感谢这本书，对我帮助非常大。如果你想改变自己现在的生活，变得更加优秀，这本书一定会帮到你。书中给出了许多提升自己的方法，其中的每个章节都让我有所感悟。这篇文章我会讲其中一些让我最受感触的点。&lt;/p>
&lt;h2 id="元认知">元认知
&lt;/h2>&lt;p>书中提到了“元认知”这个概念，当我们开启元认知，就会不断的进步、提升。开启元认知，就是&lt;strong>开启第三人称，时刻审视自己在做什么、在想什么&lt;/strong>。有了这种觉知，你就会在玩游戏的时候意识到自己正在过度放纵，并且思考自己的大脑为什么会沉迷于游戏当中；当你分手后无比沮丧的时候，就会思考自己现在处于一个怎样的状态，为什么不开心。当你开启这样一个能力之后，你就会无限进步，你能一直审视自己的行为和思维，在错误的时候意识到并改进。这就相当于自己开了上帝视角，时刻地在监督自己。&lt;/p>
&lt;p>当你知道了这个概念之后，你就可以开始行动、练习，时刻审视自己。当你受到任何感触，比如开心或沮丧时，问问自己是什么原因，这会让你变得更加了解自己。最近我看到一个句子让我很有感触，&amp;quot;&lt;strong>who looks outisde, dreams; who looks inside, awakes.&lt;/strong>&amp;quot;-Carl Jung，当你开始挖掘自己内心时，你就会清醒，明白自己到底想要什么，了解自己的思维方式，这会帮你打开自我提升的大门。写日记、写每日反思是一个很好的方法，在每天的结尾反思自己做了什么，无需置疑，这绝对是一个改变终身的习惯，孔子说过”吾日三省吾身“。其次，&lt;strong>练习元认知最好的方法是冥想&lt;/strong>，具体关于冥想的知识，大家可以自行去搜索，之后我会单独写一篇文章来讲我的冥想心得，总之这是一个非常有益的习惯，在冥想中，我们会练习将注意力放在呼吸和身体上，当有杂念的时候，我们就需要意识到并注意力拉回。可见冥想是练习元认知能力最直接的方法。&lt;/p>
&lt;h2 id="行动">行动
&lt;/h2>&lt;p>”&lt;strong>真正的成长不在于自己懂了多少道理，而在于自己做了多少改变&lt;/strong>“&lt;/p>
&lt;p>很多时候，我们会从书中或者视频中学到很多知识，在读后我们都会恍然大悟，觉得很有道理，但是，你可以回忆一下其中有多少是你真正为之做出改变的，运用到了生活之中的。我们很容易就会陷入到只停留在懂了，但没有去做的阶段。所以，当你学到任何知识让你受到感触的，那就开始行动，思考如何做出改变。这个道理很使用于读书，很多人读书会做大量的笔记，甚至思维导图，但他们只是将作者的思路整理列了个大纲，而在做完之后他们认为懂了就再也没翻阅过，即使翻阅，大量的内容也会让他们头晕目眩，这点我也深有感悟。真正好的读书方法是：&lt;/p>
&lt;p>&lt;strong>在书中取一个你最受感触的点并为之做出改变，这远远比你把一大堆知识记下来要有用得多&lt;/strong>。想想，一本书只要让你改变了一点点，那它就已经发挥了它的巨大价值。&lt;/p>
&lt;p>所以，在读完这本书后我改进了自己的读书方法，在读完后只记下最受感触的几个点，并尝试将他们运用起来，做出改变。而不是大量梳理（可能适用于课程学习，但肯定不适用于读书），告诉自己我懂了。其次，我为什么会写这篇文章，分享读书知识，那就是费曼学习法。&lt;/p>
&lt;h2 id="费曼">费曼
&lt;/h2>&lt;p>费曼学习法就是&lt;strong>将自己学到的知识，用自己的话讲述给他人&lt;/strong>，在这个过程中知识会在你的大脑中得到加工和巩固，如果你能非常清晰地讲述给他人，那说明你真正懂了。这本书我是上周读的，而我现在并没有拿着这本书写博客，我只是将自己从这本书中得到的最受感触的，进入我记忆中的，用自己的话写了出来。&lt;/p>
&lt;h2 id="关联">关联
&lt;/h2>&lt;p>&lt;strong>能与自己产生关联的知识，是记得最深的&lt;/strong>。从一本书中你可能会学到很多有道理的知识，但你不一定会记住每一个。这个知识需要和你以往某个经历，或者存在于你知识体系中的某个点练习起来，才会被记得非常深。如果和你大脑中的知识没有任何关联，即使很有道理，也很容易忘记。所以，利用好这点，当你看到某个很受感触的知识时，有什么你已知的知识与其相关联，将你的想法记下来。如果你现在是一个学生，你读到职场的一些知识，那么就把它先放一放吧。&lt;/p>
&lt;hr>
&lt;p>以上就是这本书我深受感触的一些知识点，当然这些只是对我来说最受感触的，和我有关联的，其中还有非常多有用的知识，非常推荐大家自行去阅读这本书。如果大家喜欢这篇文章，可以关注本站，我会每周分享自己读到的好书。&lt;/p></description></item><item><title>Hexo博客优化：批量修改md文件名</title><link>https://blog.fiveth.cc/p/fbe8/</link><pubDate>Tue, 09 Apr 2024 11:51:10 +0000</pubDate><guid>https://blog.fiveth.cc/p/fbe8/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/hexo.jpg" alt="Featured image of post Hexo博客优化：批量修改md文件名" />&lt;p>今天整理博客，发现我给文章取的文件名比较混乱，要找文章的时候会很不方便。&lt;/p>
&lt;p>一般我们都是用&lt;code>hexo new file_name&lt;/code>创建文章的md文件的，然后文章的标题是在md文件的信息栏定义的。而我们很多时候是开始写文章才想好标题，随着写作标题也会发生变动，这导致最后我们文章标题和文件名是不同的，加大了我们的管理难度。&lt;/p>
&lt;p>所以我们会在改动文章标题的时候，将文件名也改成一样的。但是这样手动改非常麻烦。因此我配合ChatGPT用Python写了个一键批量修改文件名的小脚本。这样我们就可以很方便的一键将文件名全部都同步成文章的标题。&lt;/p>
&lt;p>&lt;img src="https://p.fiveth.cc/img/2024/04/09144430.webp"
loading="lazy"
alt="image1"
>&lt;/p>
&lt;h2 id="使用方法">使用方法
&lt;/h2>&lt;h3 id="方法1-exe文件">方法1. exe文件
&lt;/h3>&lt;p>脚本已经打包成exe文件，大家可以直接下载使用，下载后放到&lt;code>_posts&lt;/code>文件夹下运行即可。&lt;/p>
&lt;p>&lt;a class="link" href="https://wwf.lanzoum.com/icY4q1ufi7na" target="_blank" rel="noopener"
>https://wwf.lanzoum.com/icY4q1ufi7na&lt;/a> 密码:ff6u&lt;/p>
&lt;blockquote>
&lt;p>注意：如果标题中有不支持的特殊符号，会导致运行失败。可以往下看，自行用python调整源代码后运行&lt;/p>
&lt;/blockquote>
&lt;p>记得运行完后将脚本移出文件夹，防止被上传。&lt;/p>
&lt;h3 id="方法2-python运行">方法2. python运行
&lt;/h3>&lt;p>如果有调试需求，大家也可以自己用python编译使用。&lt;/p>
&lt;p>&lt;strong>下面是方法&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>首先要安装&lt;a class="link" href="https://www.python.org/" target="_blank" rel="noopener"
>python&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在&lt;code>_posts&lt;/code>文件夹中创建一个&lt;code>rename.txt&lt;/code>文件，复制粘贴下列代码进去：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dir_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;./&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir_path&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Skip &amp;#39;.&amp;#39; and &amp;#39;..&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;..&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Construct the full path to the file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Read the file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">UnicodeDecodeError&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Skipping file due to encoding issue: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Skip files with less than 2 lines&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lines&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Extract and process the title from the second line&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lines&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;title:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Remove any marks from the title&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;?&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;|&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Rename&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new_filename&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">title&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;.md&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new_file_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_file_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>然后将文件名后缀修改成&lt;code>.py&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在文件夹空白处右键，点击&lt;code>在终端中打开&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在终端中输入&lt;code>python rename.py&lt;/code>即可运行脚本&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>自己做脚本优化了一下博客工作流，成就感满满。&lt;/p>
&lt;p>另外，去年我一直是随缘更博客，接下来我会开始有规律性的定期发文章，分享我的生活和学习到的知识。做博客的精髓在于长期坚持，一直有新内容才会有人关注。一起加油吧😊&lt;/p></description></item><item><title>2022款Thinkbook14+酷睿版续航优化方案</title><link>https://blog.fiveth.cc/p/4b21/</link><pubDate>Tue, 27 Feb 2024 16:03:50 +0000</pubDate><guid>https://blog.fiveth.cc/p/4b21/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/thinkbook-battery-cover.jpg" alt="Featured image of post 2022款Thinkbook14+酷睿版续航优化方案" />&lt;p>使用Thinkbook14+也有两年了，我是在22年买的。后悔自己买的太早，因为22年酷睿款的续航十分鸡肋（23及24款在续航有很大提升），相信一样用这款的朋友们应该深有体会。离电不到2小时的续航，堪比游戏本。作为一个学生，在学校中基本上只能离电使用，所以我对续航有一定需求。&lt;/p>
&lt;p>在我的一番调教下，它的续航最终达到了静置10小时，低负办公8小时的理论成绩。这对我日常使用体验的提升非常大，终于不用再频繁地把电脑放到充电仓。今天就来分享一下我自用的续航调教方案。本篇部分适用于所有笔记本，部分是针对22 Thinkbook14+酷睿版的。&lt;/p>
&lt;p>文章部分参考自&lt;a class="link" href="https://zhuanlan.zhihu.com/p/662648384" target="_blank" rel="noopener"
>【知乎】2022款ThinkBook 14+/16+酷睿版的电池续航优化更新&lt;/a>&lt;/p>
&lt;h2 id="基础">基础
&lt;/h2>&lt;p>在离电使用时，做如下设置延长电池续航：&lt;/p>
&lt;ol>
&lt;li>Fn+Q 切换到节能模式（显示电池图标的那个）&lt;/li>
&lt;li>Fn+空格键 关闭键盘背光&lt;/li>
&lt;li>Fn+R把屏幕刷新率调整为60Hz（配置了高刷屏的机型）&lt;/li>
&lt;li>右键点击屏幕右下角的电池图标打开&lt;code>电源和睡眠设置&lt;/code>，将电源模式设置为&lt;code>最佳能效&lt;/code>&lt;/li>
&lt;li>打开节电模式&lt;/li>
&lt;li>不使用蓝牙时就关掉（WIFI同理）&lt;/li>
&lt;li>适当降低屏幕亮度&lt;/li>
&lt;/ol>
&lt;h2 id="更新驱动">更新驱动
&lt;/h2>&lt;p>近期，官方在驱动程序上对22酷睿款更新了优化续航的措施，我们需要上官网下载更新。操作如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>进入官网&lt;a class="link" href="https://newthink.lenovo.com.cn/" target="_blank" rel="noopener"
>Lenovo服务与支持&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在搜索框中输入自己的机型（机型可以在笔记本机身底部找到）&lt;/p>
&lt;p>比如我的是&lt;code>ThinkBook 14 G4+ IAP&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://p.fiveth.cc/img/m/lenovo.png"
loading="lazy"
alt="Lenovo服务与支持"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击&lt;code>驱动下载&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载以下程序的最新版本并安装&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> BIOS升级程序 （IAP - HYCN45WW或ARA - J6CN46WW之后版本）&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Intel显卡驱动 （23/9/27之后版本）&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> 主板Lenovo Dispatcher-Basic 驱动程序（23/9/27之后版本）&lt;/li>
&lt;/ul>
&lt;h2 id="关闭独显">关闭独显
&lt;/h2>&lt;p>我的机型搭载了独显Nvidia，独显的耗电量是非常大的，我试过用软件让独显强制睡眠，但是监测显示独显仍有耗电。&lt;/p>
&lt;p>所以最后干脆直接在BIOS中关闭独显，以最大程度提升续航，操作如下：&lt;/p>
&lt;ol>
&lt;li>重启电脑，在开机页面按Enter&lt;/li>
&lt;li>按F1进入BIOS控制面板&lt;/li>
&lt;li>显示模式选择&lt;code>集显模式&lt;/code>&lt;/li>
&lt;li>退出并保存&lt;/li>
&lt;/ol>
&lt;p>现在我们在桌面右键打开更多选项，就会发现Nvidia控制面板没了，我们成功关闭了独显。&lt;/p>
&lt;p>之后若要开启使用，还是一样的操作进入BIOS调回&lt;code>混合模式&lt;/code>即可。&lt;/p>
&lt;h2 id="throttlestop">ThrottleStop
&lt;/h2>&lt;p>&lt;a class="link" href="https://www.techpowerup.com/download/techpowerup-throttlestop/" target="_blank" rel="noopener"
>Throttlestop&lt;/a>是一个CPU调节工具，可以用来超频/降频/降温/降压。&lt;a class="link" href="https://wwf.lanzoum.com/iCRUv1pjepza" target="_blank" rel="noopener"
>中文版下载&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://p.fiveth.cc/img/m/throttlestop.png"
loading="lazy"
alt="Throttlestop"
>&lt;/p>
&lt;p>上面四个选项是选择不同场景，可以分别配置不同场景下的参数，场景的名字可以在设置中自定义。下面是配置选项，这里我们只需要用到&lt;code>Speed Shift EPP（变速EPP）&lt;/code>。EPP 允许设置范围为0~255，数值越大越省电，数值越小性能越好。&lt;/p>
&lt;p>这里给大家参考下我的四个场景配置：&lt;/p>
&lt;ol>
&lt;li>性能：高性能，EPP 32&lt;/li>
&lt;li>插电：平衡，EPP 128&lt;/li>
&lt;li>离电：省电模式，EPP 192&lt;/li>
&lt;li>节能：省电模式，EPP 255&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>设置开启自动启动&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>在桌面右键&lt;code>此电脑&lt;/code>，点击&lt;code>管理&lt;/code>&lt;/li>
&lt;li>左侧展开&lt;code>任务计划程序&lt;/code>，点击&lt;code>任务计划程序库&lt;/code>&lt;/li>
&lt;li>右侧&lt;code>创建任务&lt;/code>&lt;/li>
&lt;li>取名”Throttlestop“&lt;/li>
&lt;li>触发器页面，新建选择&lt;code>当任何用户登陆时&lt;/code>&lt;/li>
&lt;li>操作页面，新建然后点击&lt;code>浏览&lt;/code>，找到并选择Throttlestop.exe&lt;/li>
&lt;li>条件页面，取消勾选&lt;code>只有在计算机使用交流电源时才启动此任务&lt;/code>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>如果需要进一步提升续航，还可以在FIVR中限制CPU的电压，硬核延长续航，此操作有一定风险，并且新版BIOS限制了电压控制的功能，还需要先解锁电压控制，此处不做展开。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>我的个人调教方案到这里就结束了，我们已经非常大程度提升了续航，可以带着笔记本出门放心耍啦😎&lt;/p></description></item><item><title>阿谦读书笔记：《原子习惯》</title><link>https://blog.fiveth.cc/p/a76a/</link><pubDate>Thu, 23 Nov 2023 16:07:26 +0000</pubDate><guid>https://blog.fiveth.cc/p/a76a/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/habits.jpg" alt="Featured image of post 阿谦读书笔记：《原子习惯》" />&lt;h2 id="基础">基础
&lt;/h2>&lt;h3 id="小习惯的大力量">小习惯的大力量
&lt;/h3>&lt;p>一个微小的习惯改变，会对未来影响很大。
每天进步1%，一年就是很多。
专注于系统，而不是目标。&lt;/p>
&lt;h3 id="基于身份的习惯比基于目标的习惯更有效">基于身份的习惯比基于目标的习惯更有效
&lt;/h3>&lt;ol>
&lt;li>自己想成为什么样的人&lt;/li>
&lt;li>用习惯去证明自己是这样的人&lt;/li>
&lt;/ol>
&lt;h3 id="习惯形成的4个步骤">习惯形成的4个步骤：
&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>提示，渴望，反应，奖励。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>例子&lt;/code>：你起床(提示)，想要清醒(渴望)，所以喝了杯咖啡(反应)，满足了清醒的需求(奖励)。&lt;/p>
&lt;p>&lt;strong>建立好习惯&lt;/strong>：让提示更明显，让渴望更吸引，让反应更简单，让奖励更令人满意。
&lt;strong>打破坏习惯&lt;/strong>：让提示不明显，让渴望不吸引，让反应更困难，让奖励更令人不满。&lt;/p>
&lt;h2 id="1st-law让提示更明显">1st law—让提示更明显
&lt;/h2>&lt;h3 id="加强对习惯的意识">加强对习惯的意识
&lt;/h3>&lt;p>&lt;strong>写习惯清单&lt;/strong>：把自己现有的习惯全写上去，并做好坏评估。&lt;/p>
&lt;p>&lt;strong>Pointing-and-calling&lt;/strong>：把自己接下来要做的事和结果大声说出来。这样可以增强意识。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>例子&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>“明天五点我要去邮政局”&lt;/li>
&lt;li>“我现在要吃饼干，但是我并不需要，这会让我变胖。”&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="让提示更明显的两个方法">让提示更明显的两个方法
&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>Implementation intension(执行意向)公式&lt;/strong>：“I will [BEHAVIOR] at [TIME] in [LOCATION].”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>Habit stacking(习惯堆叠)公式&lt;/strong>：“After [CURRENT HABIT], I will [NEW HABIT].”&lt;/p>
&lt;/blockquote>
&lt;h3 id="环境比动力更重要">环境比动力更重要
&lt;/h3>&lt;p>&lt;strong>让好习惯的提示更明显&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>把要阅读的书放在桌子上显眼的地方&lt;/p>
&lt;/li>
&lt;li>
&lt;p>把游戏手柄放隐蔽的地方&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>给特定环境关联特定习惯&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>在床上就睡觉，在桌上就学习&lt;/li>
&lt;/ul>
&lt;p>（尽量给一个环境只关联一个习惯）&lt;/p>
&lt;h3 id="借助环境远离坏习惯">借助环境远离坏习惯
&lt;/h3>&lt;p>依靠自控力只是一个短期的方法，我们需要环境配合才能更长久，要&lt;strong>远离坏习惯的提示&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>例子&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>写作业效率不高，就把手机放在另一个房间一段时间。&lt;/li>
&lt;li>花钱买太多东西，就不要刷淘宝。&lt;/li>
&lt;li>老玩游戏，就把手柄放在看不到的地方。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="2nd-law-让它更吸引">2nd law 让它更吸引
&lt;/h2>&lt;h3 id="诱惑捆绑">诱惑捆绑
&lt;/h3>&lt;p>把需要做的和想做的事关联起来&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>habit stacking + temptation bundling公式&lt;/strong>:
After [CURRENT HABIT], I will [HABIT I NEED].
After [HABIT I NEED], I will [HABIT I WANT].&lt;/p>
&lt;/blockquote>
&lt;h3 id="加入好的圈子">加入好的圈子
&lt;/h3>&lt;p>加入你想建立的习惯在他们之中是常态的圈子，我们会被所处圈子影响&lt;/p>
&lt;p>找到你和圈子中的人的相同特征，这会让你有归属感&lt;/p>
&lt;h3 id="激励仪式">激励仪式
&lt;/h3>&lt;p>创造一个激励仪式在困难习惯之前做，给好习惯关联上积极的情感。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>例子&lt;/code>：每次玩游戏前深呼吸然后笑，之后在写作业前也这样做。&lt;/p>
&lt;/blockquote>
&lt;h2 id="3rd-law-让它更简单">3rd law 让它更简单
&lt;/h2>&lt;h3 id="开始行动不断重复习惯不要纸上谈兵">开始行动，不断重复习惯，不要纸上谈兵
&lt;/h3>&lt;p>调整环境，让习惯更简单。&lt;strong>每次做完习惯之后，都为下一次习惯做好准备&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>例子&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>想健身，提前把装备准备好。&lt;/li>
&lt;li>想写作业，提前把作业放在桌上。&lt;/li>
&lt;li>玩游戏，就把手柄锁柜子里。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="善用决定性时刻用小行为决定走向">善用决定性时刻，用小行为决定走向。
&lt;/h3>&lt;p>当你穿上了跑鞋，就说明你决定了你接下来会去跑步。&lt;/p>
&lt;p>这会减少拖延和犹豫。&lt;/p>
&lt;h3 id="两分钟规则">两分钟规则
&lt;/h3>&lt;ol>
&lt;li>简化习惯，所有习惯都能简化成在两分钟内完成的形式。&lt;/li>
&lt;li>建立起习惯后，再去提升时长和质量。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>例子：&lt;/p>
&lt;ul>
&lt;li>每天读一页书。&lt;/li>
&lt;li>穿上跑步鞋。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="自动化你的习惯">自动化你的习惯
&lt;/h3>&lt;p>投资&lt;strong>锁定未来行为&lt;/strong>的技术和一次性购买。&lt;/p>
&lt;p>&lt;code>例子&lt;/code>：买健身房卡，这会迫使你未来常去锻炼。&lt;/p>
&lt;h2 id="4th-law-让它更令人开心">4th law 让它更令人开心
&lt;/h2>&lt;h3 id="即使奖励">即使奖励
&lt;/h3>&lt;p>给好习惯&lt;strong>增加立即能获得的奖励&lt;/strong>，给坏习惯&lt;strong>增加立即会得到的惩罚&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>The Cardinal Rule of Behavior Change&lt;/code>:&lt;/p>
&lt;p>What is immediately rewarded is repeated. What is immediately punished is avoided.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>例子&lt;/code>：记账“去旅游”，每少吃一次大餐就往里存50元。&lt;/p>
&lt;h3 id="视觉化进度">视觉化进度
&lt;/h3>&lt;p>&lt;strong>视觉化习惯的完成进度&lt;/strong>，增加每次做完后的成就感&lt;/p>
&lt;p>&lt;code>例子&lt;/code>：健身记录，读书页码，读书打卡&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Habit Tracking(习惯记录)&lt;/strong>&lt;/p>
&lt;p>The habit stacking + habit tracking公式:&lt;/p>
&lt;p>After [CURRENT HABIT], I will [TRACK MY HABIT].”&lt;/p>
&lt;/blockquote>
&lt;p>注意：不要因过度重视记录的次数，而忽略了习惯的质量和本身的目的。&lt;/p>
&lt;h3 id="习惯中断要立即重拾">习惯中断要立即重拾
&lt;/h3>&lt;p>不要连续缺勤两次，习惯&lt;strong>中断要立即重拾&lt;/strong>&lt;/p>
&lt;h3 id="习惯违反合同">习惯违反合同
&lt;/h3>&lt;p>找一个搭档，监督你的行为。&lt;/p>
&lt;p>建立习惯合同，让违反承诺的代价变得公开和痛苦。&lt;/p>
&lt;h2 id="高级策略">高级策略
&lt;/h2>&lt;h3 id="选择适合自己的习惯">选择适合自己的习惯
&lt;/h3>&lt;p>每个人都有自己的人格，有自己适合做的事情，要&lt;strong>取长补短&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>选择适合自己的习惯&lt;/strong>，会更好坚持。&lt;/p>
&lt;h3 id="忍受无聊">忍受无聊
&lt;/h3>&lt;p>成功在于能&lt;strong>忍受无聊&lt;/strong>。&lt;/p>
&lt;p>任何人在感到有动力时都可以努力工作。只有在&lt;strong>没有动力&lt;/strong>的时候，还能&lt;strong>坚持下去&lt;/strong>，才会超越他人。&lt;/p>
&lt;h3 id="习惯的弊端">习惯的弊端
&lt;/h3>&lt;p>养成习惯之后，很容易&lt;strong>停止去思考和提升&lt;/strong>。&lt;/p>
&lt;p>我们要定期&lt;strong>做反思和回顾&lt;/strong>，时刻注意自己的表现。&lt;/p></description></item><item><title>Hexo博客优化：如何优化Hexo的网站性能？</title><link>https://blog.fiveth.cc/p/95d6/</link><pubDate>Wed, 11 Oct 2023 12:06:31 +0000</pubDate><guid>https://blog.fiveth.cc/p/95d6/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/perf.jpg" alt="Featured image of post Hexo博客优化：如何优化Hexo的网站性能？" />&lt;p>对一个网站来说，性能是非常重要的，它决定了用户在网页停留的时长。&lt;/p>
&lt;p>如果网页的加载速度很慢的话，用户很容易就会离去。&lt;/p>
&lt;p>有朋友说我的博客速度挺快的，这篇文章就讲讲我是如何&lt;strong>优化我的网站性能&lt;/strong>的。&lt;/p>
&lt;h2 id="性能检测">性能检测
&lt;/h2>&lt;p>首先我们可以使用网站性能检测工具，来获取网站的性能报告，这样我们就可以知道是哪部分拖慢了网站速度，从而对其进行优化。&lt;/p>
&lt;p>我用的工具是&lt;strong>Chrome开发者工具&lt;/strong>中自带的&lt;strong>Lighthouse&lt;/strong>，给出性能报告的同时，它还会给出一些优化的建议。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/lighthouse.webp" alt="lighthouse"/>
&lt;h2 id="vercel网站托管">Vercel网站托管
&lt;/h2>&lt;p>我使用的是&lt;a class="link" href="https://vercel.com/dashboard" target="_blank" rel="noopener"
>Vercel&lt;/a>来托管我的网站，它在全球以及国内都有非常优秀的速度。如果想要让其在国内可以浏览的话，需要准备一个域名。&lt;/p>
&lt;blockquote>
&lt;p>具体如何使用可以参考&lt;a class="link" href="https://www.fomal.cc/" target="_blank" rel="noopener"
>Fomalhaut&lt;/a>的文章&lt;a class="link" href="https://www.fomal.cc/posts/4aa2d85f.html" target="_blank" rel="noopener"
>Hexo博客搭建基础教程(二)&lt;/a>中有详细教程。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>注意&lt;/code>：cname的解析方法目前会导致无法在国内访问，需要做一些修改
**失效方法：**记录值类型cname，值为cname.vercel-dns.com
**解决方法：**记录值类型A类型，值为76.223.126.88&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/jiexi.webp" alt="解析记录" />
&lt;h2 id="vercel加速节点新">Vercel加速节点（新）
&lt;/h2>&lt;p>{% note info flat %}此章为2024.4新添加内容{% endnote %}&lt;/p>
&lt;p>这是一个vercel加速节点，使用是会自动解析至附近可用节点，尽可能的选择优质节点。&lt;/p>
&lt;p>&lt;strong>食用方法&lt;/strong>：将原来解析至 &lt;code>cname.vercel.com&lt;/code> 改为 &lt;code>vercel.cdn.yt-blog.top&lt;/code>（CNAME记录）&lt;/p>
&lt;blockquote>
&lt;p>由&lt;a class="link" href="https://www.yt-blog.top/" target="_blank" rel="noopener"
>Fgaoxing&lt;/a>提供，原文链接：&lt;a class="link" href="https://www.yt-blog.top/9952/" target="_blank" rel="noopener"
>【推一下Vercel加速节点】&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="图片压缩">图片压缩
&lt;/h2>&lt;p>在我们的博客中，最消耗流量的应该就是图片了。所以为了提升加载速度，对图片的压缩非常重要。&lt;/p>
&lt;p>1.每次将图片上传到图床之前，我都会对其进行压缩（控制在50kb以下）&lt;/p>
&lt;p>2.同时，将图片转换成webp格式也会大大提高加载速度。&lt;/p>
&lt;blockquote>
&lt;p>这里推荐一个我一直在用的&lt;a class="link" href="https://imagestool.com/webp2jpg-online/" target="_blank" rel="noopener"
>多功能在线图片压缩&lt;/a>工具，非常方便快捷。&lt;/p>
&lt;/blockquote>
&lt;h2 id="lazyload">lazyload
&lt;/h2>&lt;p>**lazyload(懒加载)**是一个对提升性能非常有效的功能，它会优先加载处于屏幕显示区域内的资源，而不是等待一整个页面的资源加载完毕。这让许多资源可以在用户边浏览的时候边加载，节省时间。&lt;/p>
&lt;p>我给我的评论模块开启了lazyload，因为很多时候评论模块加载都会慢，导致用户要在加载页面等待。&lt;/p>
&lt;h2 id="gulp压缩">gulp压缩
&lt;/h2>&lt;p>&lt;a class="link" href="https://www.gulpjs.com.cn/" target="_blank" rel="noopener"
>gulp插件&lt;/a>可以帮助我们自动压缩博客静态资源。&lt;/p>
&lt;blockquote>
&lt;p>具体如何安装使用可以参考&lt;a class="link" href="https://akilar.top/" target="_blank" rel="noopener"
>Akilar&lt;/a>的文章&lt;a class="link" href="https://akilar.top/posts/49b73b87/" target="_blank" rel="noopener"
>【使用gulp压缩博客静态资源】&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="cdn">CDN
&lt;/h2>&lt;p>让所有的静态资源通过**CDN(内容分发网络)**加载，可以提高资源加载速度。&lt;/p>
&lt;blockquote>
&lt;p>我使用的是&lt;a class="link" href="https://blog.zhheo.com/" target="_blank" rel="noopener"
>HEO&lt;/a>大佬分享的&lt;a class="link" href="https://blog.zhheo.com/p/790087d9.html" target="_blank" rel="noopener"
>【Butterfly CDN链接更改指南】&lt;/a>中给出的cdn&lt;/p>
&lt;/blockquote>
&lt;p>这里给出我在butterfly中的cdn列表：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pjax&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lib.baomitu.com/pjax/0.2.8/pjax.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">twikoo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/twikoo/1.4.18/twikoo.all.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sharejs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lib.baomitu.com/social-share.js/1.0.16/js/social-share.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sharejs_css&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lib.baomitu.com/social-share.js/1.0.16/css/share.min.css&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">lazyload&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/vanilla-lazyload/17.3.1/lazyload.iife.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">instantpage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/instant.page/5.1.0/instantpage.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">typed&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/typed.js/2.0.12/typed.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">snackbar_css&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/node-snackbar/0.1.16/snackbar.min.css&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">snackbar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/node-snackbar/0.1.16/snackbar.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fontawesome&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/font-awesome/6.0.0/css/all.min.css&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">justifiedGallery_js&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/justifiedGallery/3.8.1/js/jquery.justifiedGallery.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">justifiedGallery_css&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/justifiedGallery/3.8.1/css/justifiedGallery.min.css&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">aplayer_css&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/aplayer/1.10.1/APlayer.min.css&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">aplayer_js&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/aplayer/1.10.1/APlayer.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">meting_js&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://npm.elemecdn.com/hexo-anzhiyu-music@1.0.1/assets/js/Meting2.min.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="总结">总结
&lt;/h2>&lt;p>这些大概就是我对我的网站做的优化总结了，其实还有很多地方可以再提升，但是对我来说已经够用了。&lt;/p>
&lt;p>希望大家都可以积极地去优化网站的性能，这样才可以收获更多的游客🙂&lt;/p></description></item><item><title>摆脱3DM启动器打开游戏：避免捆绑下载笑傲江湖</title><link>https://blog.fiveth.cc/p/134b/</link><pubDate>Tue, 06 Jun 2023 22:15:15 +0000</pubDate><guid>https://blog.fiveth.cc/p/134b/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/3dm.jpg" alt="Featured image of post 摆脱3DM启动器打开游戏：避免捆绑下载笑傲江湖" />&lt;p>经常白嫖游戏的小伙伴应该都对&lt;a class="link" href="https://www.3dmgame.com/" target="_blank" rel="noopener"
>3DM&lt;/a>不陌生，里面有很多盗版游戏资源。但是呢，很多3dm下来的游戏都要用3dm启动器去打开，你说用你启动器打开就算了，就多点两下的事对吧。但是每次打开你启动器，你都要下载个“笑傲江湖”到我电脑里，删了还没用，下次启动的时候又会跳出来，这跟流氓软件有什么区别。今天就教大家怎么摆脱3DM流氓启动器，直接打开游戏。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/xiaoao.webp" />
&lt;p>首先我们打开3dm启动器目录，如图，打开&lt;code>3dmConfig.ini&lt;/code>文件，找到游戏exe文件的路径。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/3dmpath.webp"/>
&lt;p>接下来我们顺着路径去寻找，会发现根本就找不到游戏的exe文件。别慌，这是3dm耍的小把戏，把游戏启动的exe文件给隐藏了。我们要做的就是把被隐藏的文件给显示出来。&lt;/p>
&lt;p>我们打开cmd窗口，进入对应的目录，然后执行dos命令：&lt;/p>
&lt;blockquote>
&lt;p>如何打开cmd窗口？win+r，然后输入cmd，点确定&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">attrib -s -a -h -r wwzRetailEgs.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://p.fiveth.cc/img/m/cmd.webp"/>
&lt;p>然后我们就能看到游戏的exe文件在目录中显示出来了，我们可以右键然后将快捷方式创建到桌面，之后我们就不需要用3dm启动器来打开游戏了😎。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/3dmexe.webp"/></description></item><item><title>OpenGL教学 | 3.如何给形状添加纹理，绘制各种带图案的形状？</title><link>https://blog.fiveth.cc/p/7cf1/</link><pubDate>Tue, 30 May 2023 18:33:42 +0000</pubDate><guid>https://blog.fiveth.cc/p/7cf1/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/grasscover.jpg" alt="Featured image of post OpenGL教学 | 3.如何给形状添加纹理，绘制各种带图案的形状？" />&lt;p>本篇将学习OpenGL中关于纹理的各种知识。纹理就是图片，用于给模型添加细节。&lt;/p>
&lt;h2 id="纹理环绕方式">纹理环绕方式
&lt;/h2>&lt;p>如果我们把纹理坐标设置在范围之外会发生什么？OpenGL默认的行为是重复这个纹理图像。下面更多的选择：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>环绕方式&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>GL_REPEAT&lt;/td>
&lt;td>对纹理的默认行为。重复纹理图像。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_MIRRORED_REPEAT&lt;/td>
&lt;td>和GL_REPEAT一样，但每次重复图片是镜像放置的。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_CLAMP_TO_EDGE&lt;/td>
&lt;td>纹理坐标会被约束在0到1之间，超出的部分会重复纹理坐标的边缘，产生一种边缘被拉伸的效果。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_CLAMP_TO_BORDER&lt;/td>
&lt;td>超出的坐标为用户指定的边缘颜色。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>设置坐标轴环绕方式（s、t（如果是使用3D纹理那么还有一个r））&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_WRAP_S&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_MIRRORED_REPEAT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_WRAP_T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_MIRRORED_REPEAT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果选择GL_CLAMP_TO_BORDER选项，需要指定一个边缘的颜色。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">borderColor&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameterfv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_BORDER_COLOR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">borderColor&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="纹理过滤">纹理过滤
&lt;/h2>&lt;p>如何将&lt;strong>纹理像素&lt;/strong>(Texture Pixel)映射到纹理坐标，让分辨率清晰&lt;/p>
&lt;p>纹理过滤有很多个选项，但是现在我们只讨论最重要的两种：&lt;/p>
&lt;h4 id="gl_nearest">GL_NEAREST
&lt;/h4>&lt;p>邻近过滤 (Nearest Neighbor Filtering):&lt;/p>
&lt;p>选择中心点最接近纹理坐标的那个像素&lt;/p>
&lt;p>&lt;img src="https://learnopengl-cn.github.io/img/01/06/filter_nearest.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h4 id="gl_linear">GL_LINEAR
&lt;/h4>&lt;p>线性过滤 (linear Filtering):&lt;/p>
&lt;p>基于纹理坐标附近的纹理像素，计算出一个插值 (心距离纹理坐标越近,贡献越大)&lt;/p>
&lt;p>&lt;img src="https://learnopengl-cn.github.io/img/01/06/filter_linear.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h4 id="效果对比">效果对比
&lt;/h4>&lt;p>&lt;img src="https://learnopengl-cn.github.io/img/01/06/texture_filtering.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>我们可以在纹理被缩小的时候使用邻近过滤，被放大时使用线性过滤。方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MIN_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_NEAREST&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MAG_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="多级渐远纹理">多级渐远纹理
&lt;/h2>&lt;p>(Mipmap)：一系列的纹理图像，后一个纹理图像是前一个的二分之一。&lt;/p>
&lt;p>功能：提升真实性、提升性能。&lt;/p>
&lt;p>&lt;img src="https://learnopengl-cn.github.io/img/01/06/mipmaps.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>过滤方式&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>GL_NEAREST_MIPMAP_NEAREST&lt;/td>
&lt;td>使用最邻近的多级渐远纹理来匹配像素大小，并使用邻近插值进行纹理采样&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_LINEAR_MIPMAP_NEAREST&lt;/td>
&lt;td>使用最邻近的多级渐远纹理级别，并使用线性插值进行采样&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_NEAREST_MIPMAP_LINEAR&lt;/td>
&lt;td>在两个最匹配像素大小的多级渐远纹理之间进行线性插值，使用邻近插值进行采样&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GL_LINEAR_MIPMAP_LINEAR&lt;/td>
&lt;td>在两个邻近的多级渐远纹理之间使用线性插值，并使用线性插值进行采样&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>设置方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MIN_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR_MIPMAP_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MAG_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="加载与创建纹理">加载与创建纹理
&lt;/h2>&lt;p>将图像加载到应用中，需要自己写一个图像加载器，或者使用支持多种格式的图像加载库。&lt;/p>
&lt;h3 id="stb_imageh">stb_image.h
&lt;/h3>&lt;p>&lt;a class="link" href="https://github.com/nothings/stb/blob/master/stb_image.h" target="_blank" rel="noopener"
>stb_image.h下载链接&lt;/a>&lt;/p>
&lt;p>将头文件加入你的工程，并在源文件中输入以下代码引入：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define STB_IMAGE_IMPLEMENTATION &lt;/span>&lt;span class="c1">//让头文件只包含相关的函数定义源码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;stb_image.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来，我们用stb_image加载图片&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nrChannels&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stbi_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;container.jpg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">nrChannels&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>加载图片前我们为了防止图片颠倒输出，我们可以输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stbi_set_flip_vertically_on_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//OpenGL会自动将图片颠倒，所以我们要上下翻转
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="生成纹理">生成纹理
&lt;/h2>&lt;p>创建纹理对象&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glGenTextures&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成纹理&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexImage2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_RGB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_RGB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_BYTE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glGenerateMipmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>第一个参数指定了纹理目标(Target)。设置为GL_TEXTURE_2D意味着会生成与当前绑定的纹理对象在同一个目标上的纹理（任何绑定到GL_TEXTURE_1D和GL_TEXTURE_3D的纹理不会受到影响）。&lt;/li>
&lt;li>第二个参数为纹理指定多级渐远纹理的级别，如果你希望单独手动设置每个多级渐远纹理的级别的话。这里我们填0，也就是基本级别。&lt;/li>
&lt;li>第三个参数：纹理储存格式。(RGB\RGBA)&lt;/li>
&lt;li>第四个和第五个参数设置最终的纹理的宽度和高度。&lt;/li>
&lt;li>下个参数应该总是被设为&lt;code>0&lt;/code>（历史遗留的问题）。&lt;/li>
&lt;li>第七第八个参数定义了源图的格式和数据类型。我们使用RGB值加载这个图像，并把它们储存为&lt;code>char&lt;/code>(byte)数组，我们将会传入对应值。&lt;/li>
&lt;li>最后一个参数：图像数据。&lt;/li>
&lt;/ul>
&lt;p>最后还要释放图像内存&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stbi_image_free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>生成纹理的整个过程&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glGenTextures&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 为当前绑定的纹理对象设置环绕、过滤方式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_WRAP_S&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_REPEAT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_WRAP_T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_REPEAT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MIN_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glTexParameteri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_TEXTURE_MAG_FILTER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINEAR&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 加载并生成纹理
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nrChannels&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stbi_set_flip_vertically_on_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">//OpenGL会自动将图片颠倒，所以我们要上下翻转
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stbi_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;container.jpg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">nrChannels&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glTexImage2D&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_RGB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_RGB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_BYTE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGenerateMipmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Failed to load texture&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stbi_image_free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="应用纹理">应用纹理
&lt;/h2>&lt;p>接下来我们来应用纹理，绘制一个带我的世界草块纹理的矩形：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/grass.jpg" target="_blank" rel="noopener"
>草块图片&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ---- 位置 ---- ---- 颜色 ---- - 纹理坐标 -
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 左下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span> &lt;span class="c1">// 左上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">indices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// first triangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1">// second triangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在循环中绘制&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glDrawElements&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TRIANGLES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们的草块就出来了！&lt;/p>
&lt;p>我们再在草块上加上顶点颜色：修改片段着色器&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/grasswin.webp" style="zoom:50%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E7%BA%B9%E7%90%86%E5%BA%94%E7%94%A8.cpp" target="_blank" rel="noopener"
>纹理应用源码&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ourTexture&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TexCoord&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ourColor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://p.fiveth.cc/img/m/colorgrass.webp" style="zoom:50%;" />
&lt;h2 id="纹理单元">纹理单元
&lt;/h2>&lt;p>纹理单元(Texture Unit)：纹理的位置值&lt;/p>
&lt;p>绑定前激活纹理单元：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glActiveTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 在绑定纹理之前先激活纹理单元
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>我们来做个笑脸草块：&lt;/strong>&lt;/p>
&lt;p>先修改一下片段着色器：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">uniform&lt;/span> &lt;span class="n">sampler2D&lt;/span> &lt;span class="n">texture1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">uniform&lt;/span> &lt;span class="n">sampler2D&lt;/span> &lt;span class="n">texture2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texture1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TexCoord&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">texture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texture2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TexCoord&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mf">0.2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//mix输出两个texture的混合值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再设置纹理单元&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glUniform1i&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">glGetUniformLocation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;texture1&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//手动设置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;texture2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在我们绑定多个纹理并绘制：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glActiveTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glActiveTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindTexture&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TEXTURE_2D&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">texture2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glDrawElements&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TRIANGLES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就可以看到我们的笑脸草块了&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/smilegrass.webp" style="zoom:50%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E6%B7%B7%E5%90%88%E7%BA%B9%E7%90%86.cpp" target="_blank" rel="noopener"
>混合纹理源码&lt;/a>&lt;/p></description></item><item><title>OpenGL教程 | 2.了解着色器，并绘制彩色三角形</title><link>https://blog.fiveth.cc/p/9641/</link><pubDate>Sun, 28 May 2023 16:20:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/9641/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/colorcover.jpg" alt="Featured image of post OpenGL教程 | 2.了解着色器，并绘制彩色三角形" />&lt;p>本篇我们会更深入地了解着色器：&lt;/p>
&lt;ol>
&lt;li>学会着色器如何输入输出&lt;/li>
&lt;li>学会使用Uniform，绘制会随时间变化颜色的图形&lt;/li>
&lt;li>绘制彩色三角形&lt;/li>
&lt;li>定义自己的着色器类&lt;/li>
&lt;/ol>
&lt;p>本文参考&lt;a class="link" href="https://learnopengl.com/" target="_blank" rel="noopener"
>LearnOpenGL&lt;/a>教学网站&lt;/p>
&lt;blockquote>
&lt;p>经验：建议打开源代码看着学习，光跟着文档的话思路会很乱&lt;/p>
&lt;/blockquote>
&lt;p>下面是我做的笔记&lt;/p>
&lt;p>配合源码食用更佳🤫：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL" target="_blank" rel="noopener"
>OpenGL学习源码&lt;/a>&lt;/p>
&lt;h2 id="向量">向量
&lt;/h2>&lt;p>数据类型：一般使用vecn（包含n个float分量的默认向量）&lt;/p>
&lt;p>&lt;strong>重组（灵活的分量选择方式）：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//重组的例子
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">vec2&lt;/span> &lt;span class="n">someVec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec4&lt;/span> &lt;span class="n">differentVec&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">someVec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyxx&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec3&lt;/span> &lt;span class="n">anotherVec&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">differentVec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zyw&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec4&lt;/span> &lt;span class="n">otherVec&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">someVec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xxxx&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">anotherVec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">yxzy&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec2&lt;/span> &lt;span class="n">vect&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.7&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec4&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vect&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vec4&lt;/span> &lt;span class="n">otherResult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">xyz&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="输入与输出">输入与输出
&lt;/h2>&lt;p>我们给着色器加上输入和输出，让顶点着色器为片段着色器决定颜色。&lt;/p>
&lt;h4 id="顶点着色器">顶点着色器
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 位置变量的属性位置值为0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">vertexColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 指定一个颜色输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gl_Position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 注意我们如何把一个vec3作为vec4的构造器的参数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">vertexColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 把输出变量设置为暗红色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="片段着色器">片段着色器
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">FragColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">in&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">vertexColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 从顶点着色器传来的输入变量（名称相同、类型相同）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vertexColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在运行，就可以看到我们成功将颜色由顶点着色器输入到片段着色器中，将三角形的颜色设置成了深红色。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/redtriangle.png" style="zoom:50%;" />
&lt;h2 id="uniform">Uniform
&lt;/h2>&lt;p>Uniform是一种从CPU中的应用向GPU中的着色器发送数据的方式&lt;/p>
&lt;p>我们在&lt;strong>片段着色器&lt;/strong>中声明Uniform&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">FragColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">uniform&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">ourColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 在OpenGL程序代码中设定这个变量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ourColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在，我们就可以在渲染循环中去改变三角形颜色了。这里我们用让它随时间变化颜色。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">timeValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glfwGetTime&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">greenValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">sin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timeValue&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">2.0f&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">vertexColorLocation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glGetUniformLocation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;ourColor&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glUseProgram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glUniform4f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexColorLocation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">greenValue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://p.fiveth.cc/img/m/uniform.gif" style="zoom:95%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/Uniform.cpp" target="_blank" rel="noopener"
>Uniform源码&lt;/a>&lt;/p>
&lt;h2 id="你好彩色三角形">你好，彩色三角形
&lt;/h2>&lt;p>现在，我们将把颜色数据添加为3个值至vertices数组。我们将把三角形的三个角分别指定为红色、绿色和蓝色。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//顶点数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 位置 // 颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 左下
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span> &lt;span class="c1">// 顶部
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们让顶点着色器接收颜色值，并输出到片段着色器。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 位置变量的属性位置值为 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">aColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 颜色变量的属性位置值为 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">out&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">ourColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 向片段着色器输出一个颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gl_Position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aPos&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ourColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">aColor&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 将ourColor设置为我们从顶点数据那里得到的输入颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再修改一下片段着色器，让他输入颜色。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">FragColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">ourColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ourColor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在我们修改着色器的顶点格式。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 位置属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glVertexAttribPointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FLOAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glEnableVertexAttribArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 颜色属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glVertexAttribPointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FLOAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glEnableVertexAttribArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后我们就可以看到一个彩色的三角形😍&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/colorful.webp" style="zoom:50%;" />
&lt;p>三角形会自动将我们给的三个顶点颜色进行渐变，这是在片段着色器中进行的所谓片段插值(Fragment Interpolation)的结果。&lt;/p>
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E5%BD%A9%E8%89%B2%E4%B8%89%E8%A7%92.cpp" target="_blank" rel="noopener"
>彩色三角形源码&lt;/a>&lt;/p>
&lt;h2 id="自己的着色器类">自己的着色器类
&lt;/h2>&lt;p>管理着色器类是很麻烦的事，所以我们要写一个类来让我们能更轻松的管理。&lt;/p>
&lt;p>我们的着色器类用于：&lt;/p>
&lt;ol>
&lt;li>打开着色器文件&lt;/li>
&lt;li>编译和链接着色器&lt;/li>
&lt;li>use用来激活着色器程序&lt;/li>
&lt;li>set用于设置和查询uniform&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>使用方法&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Shader&lt;/span> &lt;span class="nf">ourShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;path/to/shaders/shader.vs&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;path/to/shaders/shader.fs&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span>&lt;span class="p">(...)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ourShader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setFloat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;someUniform&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DrawStuff&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>顶点和片段着色器的文件名可以任意取（推荐用shader.vs和shader.fs，很直观）&lt;/p>
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/shader.h" target="_blank" rel="noopener"
>着色器类源码&lt;/a>&lt;/p>
&lt;hr>
&lt;p>恭喜你又学完了一篇教程🎉，你正在向目标一步一步地进发。&lt;/p></description></item><item><title>OpenGL教程 | 1.如何上手OpenGL, 绘制三角形和矩形</title><link>https://blog.fiveth.cc/p/8ca/</link><pubDate>Wed, 24 May 2023 21:34:08 +0000</pubDate><guid>https://blog.fiveth.cc/p/8ca/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/openglcover.webp" alt="Featured image of post OpenGL教程 | 1.如何上手OpenGL, 绘制三角形和矩形" />&lt;h2 id="关于学习opengl">关于学习OpenGL
&lt;/h2>&lt;p>OpenGL是学习计算机图形学的必备，虽然现在Vulkan是未来的OpenGL，但目前OpenGL仍是无法被替代的。&lt;/p>
&lt;p>Vulkan学习难度过高，个人做项目太耗时间，所以OpenGL依旧是很好的选择。很多大神都认为，先学OpenGL打基础，在学习Vulkan的时候再将原先的知识进行分解转化，是个很好的方法。因为学习Vulkan时，想让屏幕上显示点东西需要做的工作太多了，非常容易放弃。(别说Vulkan了，OpenGL就已经够难了🤕)&lt;/p>
&lt;p>所以看了各论坛和思考后，我决定先上手OpenGL。&lt;/p>
&lt;p>这是一个非常好的OpenGL教学网站：&lt;a class="link" href="https://learnopengl.com/" target="_blank" rel="noopener"
>英文版&lt;/a> | &lt;a class="link" href="https://learnopengl-cn.github.io/" target="_blank" rel="noopener"
>中文版&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>经验：建议打开源代码看着学习，光跟着文档的话思路会很乱&lt;/p>
&lt;/blockquote>
&lt;p>下面是我做的笔记&lt;/p>
&lt;p>配合源码食用更佳🤫：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL" target="_blank" rel="noopener"
>OpenGL学习源码&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="配置">配置
&lt;/h2>&lt;p>因为OpenGL不支持，所以我们需要一个库用于显示窗口和处理用户输入 (如GLUT，SDL，SFML和GLFW)&lt;/p>
&lt;p>这里我们使用GLFW&lt;/p>
&lt;h3 id="glfw">GLFW
&lt;/h3>&lt;p>一个专门针对OpenGL的C语言库。&lt;a class="link" href="https://www.glfw.org/download.html" target="_blank" rel="noopener"
>GLFW下载&lt;/a>&lt;/p>
&lt;p>为确保完整性，下载&lt;strong>源代码&lt;/strong>后用CMake编译。&lt;/p>
&lt;h3 id="cmake">CMake
&lt;/h3>&lt;p>一个工程文件生成工具。&lt;a class="link" href="https://cmake.org/download/" target="_blank" rel="noopener"
>Cmake下载&lt;/a>&lt;/p>
&lt;h3 id="glad">glad
&lt;/h3>&lt;p>用于简化OpenGL获取函数地址的库。&lt;a class="link" href="https://glad.dav1d.de/" target="_blank" rel="noopener"
>生成glad&lt;/a>&lt;/p>
&lt;h3 id="配置-1">配置
&lt;/h3>&lt;p>在vs项目属性中指向include和lib文件夹&lt;/p>
&lt;p>将glad/src里的glad.c放入工程文件，并在vs中&lt;strong>添加现有项&lt;/strong>&lt;/p>
&lt;p>在依赖项里加入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glfw3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">opengl32&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lib&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="你好窗口">你好，窗口
&lt;/h2>&lt;h3 id="代码">代码
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;glad/glad.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;GLFW/glfw3.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">framebuffer_size_callback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//配置项
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SCR_WIDTH&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">800&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SCR_HEIGHT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">600&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//初始化glfw
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glfwInit&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_CONTEXT_VERSION_MAJOR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_CONTEXT_VERSION_MINOR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwWindowHint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFW_OPENGL_PROFILE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GLFW_OPENGL_CORE_PROFILE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建glfw窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glfwCreateWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SCR_WIDTH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SCR_HEIGHT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;LearnOpenGL&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Failed to create GLFW window&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwTerminate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwMakeContextCurrent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//窗口变换
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glfwSetFramebufferSizeCallback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">framebuffer_size_callback&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//glad加载opengl指针
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">gladLoadGLLoader&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">GLADloadproc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">glfwGetProcAddress&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Failed to initialize GLAD&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//渲染循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">glfwWindowShouldClose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//处理输入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//渲染
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glClearColor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.2f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.3f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.3f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glClear&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_COLOR_BUFFER_BIT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//glfw检查并调用事件，交换缓冲
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glfwSwapBuffers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwPollEvents&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// glfw清除
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glfwTerminate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//输入处理函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">processInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">glfwGetKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GLFW_KEY_ESCAPE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">GLFW_PRESS&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glfwSetWindowShouldClose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// glfw，窗口大小变换时自动调用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">framebuffer_size_callback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GLFWwindow&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">window&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glViewport&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E7%AA%97%E5%8F%A3.cpp" target="_blank" rel="noopener"
>窗口源码&lt;/a>&lt;/p>
&lt;h2 id="你好三角形">你好，三角形
&lt;/h2>&lt;p>现代Opengl渲染至少要设置一个&lt;strong>顶点着色器&lt;/strong>和一个&lt;strong>片段着色器&lt;/strong>。&lt;/p>
&lt;h3 id="知识">知识
&lt;/h3>&lt;ul>
&lt;li>VAO (顶点数组对象 Vertex Array Object)&lt;/li>
&lt;li>VBO (顶点缓冲对象 Vertex Buffer Object)&lt;/li>
&lt;li>EBO (元素缓冲对象 Element Buffer Object)&lt;/li>
&lt;/ul>
&lt;h4 id="顶点着色器">顶点着色器
&lt;/h4>&lt;p>Vertex Shader&lt;/p>
&lt;h5 id="基础源码">基础源码
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">layout&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">in&lt;/span> &lt;span class="n">vec3&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gl_Position&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">aPos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="片段着色器">片段着色器
&lt;/h4>&lt;p>Fragment Shader 计算像素最后的颜色输出&lt;/p>
&lt;h5 id="基础源码-1">基础源码
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#version 330 core
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="n">vec4&lt;/span> &lt;span class="n">FragColor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FragColor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vec4&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.2f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//输出黄色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="着色器程序">着色器程序
&lt;/h4>&lt;p>Shader Program Object&lt;/p>
&lt;p>链接多个着色器，将它们合并在一起。&lt;/p>
&lt;h4 id="链接顶点属性">链接顶点属性
&lt;/h4>&lt;p>指定Opengl如何解释顶点数据。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glVertexAttribPointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FLOAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glEnableVertexAttribArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>第一个参数：顶点属性。&lt;/li>
&lt;li>第二个参数：顶点属性的大小。顶点属性是一个&lt;strong>vec3&lt;/strong>，它由3个值组成，所以大小是3。&lt;/li>
&lt;li>第三个参数：数据的类型，这里是GL_FLOAT(GLSL中&lt;strong>vec&lt;/strong>*都是由浮点数值组成的)。&lt;/li>
&lt;li>第四个参数：是否希望数据被标准化(Normalize)。如果我们设置为GL_TRUE，所有数据都会被映射到0（对于有符号型signed数据是-1）到1之间。我们把它设置为GL_FALSE。&lt;/li>
&lt;li>第五个参数叫做步长(Stride)，它告诉我们在连续的顶点属性组之间的间隔。由于下个组位置数据在3个&lt;strong>float&lt;/strong>之后，我们把步长设置为&lt;strong>3 * sizeof(float&lt;/strong>)。要注意的是由于我们知道这个数组是紧密排列的（在两个顶点属性之间没有空隙）我们也可以设置为0来让OpenGL决定具体步长是多少（只有当数值是紧密排列时才可用）。（译注: &lt;strong>这个参数的意思简单说就是从这个属性第二次出现的地方到整个数组0位置之间有多少字节&lt;/strong>）。&lt;/li>
&lt;li>最后一个参数：类型是&lt;strong>void&lt;/strong>*，所以需要我们进行这个奇怪的强制类型转换。它表示位置数据在缓冲中起始位置的偏移量(Offset)。由于位置数据在数组的开头，所以这里是0。我们会在后面详细解释这个参数。&lt;/li>
&lt;/ul>
&lt;h3 id="代码-1">代码
&lt;/h3>&lt;h4 id="硬编码着色器源码">硬编码着色器源码
&lt;/h4>&lt;p>定义全局变量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//硬编码着色器源代码
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">vertexShaderSource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#version 330 core&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;layout (location = 0) in vec3 aPos;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;void main()&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;{&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34; gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;}&lt;/span>&lt;span class="se">\0&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">fragmentShaderSource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;#version 330 core&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;out vec4 FragColor;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;void main()&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;{&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34; FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;}&lt;/span>&lt;span class="se">\n\0&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="配置着色器">配置着色器
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建&amp;amp;编译 着色器
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 顶点着色器vertex shader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">vertexShader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glCreateShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_VERTEX_SHADER&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glShaderSource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">vertexShaderSource&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glCompileShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 检测错误
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">success&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">infoLog&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">512&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGetShaderiv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_COMPILE_STATUS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGetShaderInfoLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">512&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">infoLog&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;ERROR::SHADER::VERTEX::COMPILATION_FAILED&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">infoLog&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 片段着色器fragment shader
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">fragmentShader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glCreateShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_FRAGMENT_SHADER&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glShaderSource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">fragmentShaderSource&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glCompileShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 检测错误
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glGetShaderiv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_COMPILE_STATUS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGetShaderInfoLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">512&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">infoLog&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">infoLog&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 着色器程序(链接着色器)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">shaderProgram&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">glCreateProgram&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glAttachShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vertexShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glAttachShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glLinkProgram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 检测错误
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glGetProgramiv&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINK_STATUS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGetProgramInfoLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">512&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">infoLog&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;ERROR::SHADER::PROGRAM::LINKING_FAILED&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">infoLog&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//删除前面的着色器
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glDeleteShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertexShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glDeleteShader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fragmentShader&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 链接顶点属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// left
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// right
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span> &lt;span class="c1">// top
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//VBO顶点缓冲对象，VAO顶点数组对象
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">VBO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">VAO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGenVertexArrays&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glGenBuffers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">VBO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 先绑定VAO，然后VBO，最后设置顶点属性指针
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//bind the Vertex Array Object first, then bindand set vertex buffer(s), and then configure vertex attributes(s).
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glBindBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">VBO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glBufferData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vertices&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_STATIC_DRAW&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glVertexAttribPointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FLOAT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_FALSE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glEnableVertexAttribArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 解绑
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">glBindBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>glBufferData参数&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>GL_STATIC_DRAW ：数据不会或几乎不会改变。&lt;/li>
&lt;li>GL_DYNAMIC_DRAW：数据会被改变很多。&lt;/li>
&lt;li>GL_STREAM_DRAW ：数据每次绘制时都会改变。&lt;/li>
&lt;/ul>
&lt;h4 id="绘制三角形">绘制三角形
&lt;/h4>&lt;p>在渲染循环中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//画三角形
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glUseProgram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glDrawArrays&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TRIANGLES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就可以跟三角形说你好了！😎&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/triangle.webp" style="zoom:50%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E4%B8%89%E8%A7%92%E5%BD%A2.cpp" target="_blank" rel="noopener"
>三角形源码&lt;/a>&lt;/p>
&lt;h2 id="hey矩形">Hey，矩形
&lt;/h2>&lt;p>我们绘制两个三角形来组成一个矩形&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 第一个三角形
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右上角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右下角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 左上角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 第二个三角形
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 右下角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 左下角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span> &lt;span class="c1">// 左上角
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是，我们会看到，有两个顶点是重叠的，这回大大增加开销。所以我们要用到&lt;strong>元素缓冲对象&lt;/strong>。&lt;/p>
&lt;h4 id="元素缓冲对象">元素缓冲对象
&lt;/h4>&lt;p>&lt;strong>EBO&lt;/strong> 他存储 OpenGL 用来决定要绘制哪些顶点的索引&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span> &lt;span class="n">vertices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// top right
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// bottom right
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// bottom left
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span> &lt;span class="c1">// top left
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">indices&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// 从0开始!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// first Triangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1">// second Triangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到现在只用存四个顶点数据&lt;/p>
&lt;p>和VAO,VBO一样，创建并绑到缓冲中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">EBO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ELEMENT_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">EBO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBufferData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_ELEMENT_ARRAY_BUFFER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">indices&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">indices&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_STATIC_DRAW&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后在渲染循环中绘制&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 绘制
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">glUseProgram&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shaderProgram&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glBindVertexArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">VAO&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">glDrawElements&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_TRIANGLES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_UNSIGNED_INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//绘制元素缓冲中的内容
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后我们就得到我们的矩形了&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/rectangle.webp" style="zoom:50%;" />
&lt;p>我们还可以打开线框模式，显示矩形由两个三角形组成&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">glPolygonMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GL_FRONT_AND_BACK&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GL_LINE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//G_LINE打开，GL_FILL关闭
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://p.fiveth.cc/img/m/rectline.webp" style="zoom:50%;" />
&lt;p>源代码：&lt;a class="link" href="https://github.com/kevinwu06/LearnOpenGL/blob/main/%E7%9F%A9%E5%BD%A2.cpp" target="_blank" rel="noopener"
>矩形源码&lt;/a>&lt;/p>
&lt;hr>
&lt;p>如果你也到这步了，那么恭喜你🎉，通过了OpenGL最难部分之一。&lt;/p>
&lt;p>接下来的路还很长，我们一起加油。&lt;/p></description></item><item><title>【Qt C++】TCP联机小游戏 RectMans</title><link>https://blog.fiveth.cc/p/1841/</link><pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/1841/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/rectmans.jpg" alt="Featured image of post 【Qt C++】TCP联机小游戏 RectMans" />&lt;p>学习TCP后用基于Qt TCP库做了一个联机小游戏🤼&lt;/p>
&lt;p>断断续续大概写了一周，程序源码放在文章底部了。&lt;/p>
&lt;h2 id="结构思路">结构思路
&lt;/h2>&lt;p>游戏通过服务端或者客户端进入，只支持两玩家。&lt;/p>
&lt;p>服务端进入：自己显示红色衣服，对方蓝色&lt;/p>
&lt;p>客户端进入：自己显示蓝色衣服，对方红色&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/rectman.webp" style="zoom:30%;" />
&lt;h2 id="代码">代码
&lt;/h2>&lt;h3 id="位置传输">位置传输
&lt;/h3>&lt;h4 id="发送位置">发送位置
&lt;/h4>&lt;p>将int[]转成QByteArray达到发送多数据的效果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="n">Server&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sendData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x_self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">y_self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">dir_self&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isConnected&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//int[] 转 QByteArray
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">self&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">x_self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">y_self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">dir_self&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QByteArray&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="接收位置">接收位置
&lt;/h4>&lt;p>将QByteArray转成int[]&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="n">Server&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">receiveData&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// QByteArray 转 int[]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">QByteArray&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">readAll&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">unTemp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">memcpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">unTemp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unTemp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="相对位置">相对位置
&lt;/h3>&lt;p>自己始终显示在屏幕中间，只显示方向的改变。&lt;/p>
&lt;p>移动时改变坐标但不显示。&lt;/p>
&lt;p>游戏中的物体显示在 &lt;strong>[屏幕中心坐标+物体坐标-自己坐标]&lt;/strong>&lt;/p>
&lt;p>物体包括：对方玩家，地图，树木&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//刷新函数，放在游戏主循环中
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="n">Map&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">draw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//传入自己坐标
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">map&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CENTER_X&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">CENTER_Y&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//移动到相对位置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="树木伪3d显示">树木伪3D显示
&lt;/h3>&lt;p>很简单，当玩家y坐标大于树时显示在上，小于时显示在下。&lt;/p>
&lt;p>这段代码是有bug的，有两名玩家时，树木上下就会出现问题。&lt;/p>
&lt;p>主要是我没有找到将Label下移或者上移一层的函数，只有置顶和置底，所以代码逻辑很麻烦🤡。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">player1&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">70&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">player1&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">45&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">||&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">player2&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">70&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">player2&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">45&lt;/span>&lt;span class="p">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">Raise&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">player1&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">45&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">player1&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">Raise&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">player2&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">45&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">player2&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">Raise&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">Lower&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="树木和敌人随机位置生成">树木和敌人随机位置生成
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">TREE_NUM&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//用QRandomGenerator库，随机生成-1400到1400之间的数字
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">tree&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">QRandomGenerator&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">global&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">bounded&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1400&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1400&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QRandomGenerator&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">global&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">bounded&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1400&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1400&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="僵尸追踪">僵尸追踪
&lt;/h4>&lt;p>僵尸首先会判断与两个玩家间的距离，追踪距离更近的玩家。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="n">Enemy&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">chase&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Player&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Player&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">Xp1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getX&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="n">Yp1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="n">Xp2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getX&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="n">Yp2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">getY&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">disP1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Xp1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Xp1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Yp1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Yp1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">disP2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Xp2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Xp2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Yp2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Yp2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">disP1&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">disP2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Xp1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">enemy&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setPixmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">enemy_r&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="nf">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Xp1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">enemy&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setPixmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">enemy_l&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Yp1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="nf">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Yp1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Xp2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">enemy&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setPixmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">enemy_r&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="nf">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Xp2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">enemy&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setPixmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">enemy_l&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Yp2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="nf">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Yp2&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="n">speed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="视频演示">视频演示
&lt;/h2>&lt;iframe src="//player.bilibili.com/player.html?aid=443100831&amp;bvid=BV1oL411h7Ms&amp;cid=1112953964&amp;page=1&amp;autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> &lt;/iframe>
&lt;h2 id="源码">源码
&lt;/h2>&lt;p>源码：https://github.com/kevinwu06/RectMans&lt;/p></description></item><item><title>【Qt C++】TCP聊天程序DuckChat</title><link>https://blog.fiveth.cc/p/dcd3/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/dcd3/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/duckchat.jpg" alt="Featured image of post 【Qt C++】TCP聊天程序DuckChat" />&lt;p>用Qt和C++开发了一个基于TCP协议的通信程序，源码放在文章底部了。&lt;/p>
&lt;p>TCP是一种传输协议，以服务器和客户端的形式运行。&lt;/p>
&lt;p>Qt中提供了QTcpServer类来编写服务器端程序，以及QTcpSocket类来编写客户端程序。&lt;/p>
&lt;p>服务端开启对一个端口的监听，等待客户端连入。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/duckchat.webp" style="zoom:30%;" />
&lt;h2 id="服务端">服务端
&lt;/h2>&lt;p>服务端继承于QTcpServer类，加上Q_OBJECT&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//头文件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="nc">Server&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">public&lt;/span> &lt;span class="n">QTcpServer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Q_OBJECT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//源文件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">Server&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Server&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">QObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">:&lt;/span> &lt;span class="n">QTcpServer&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">parent&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="查询ip和端口">查询ip和端口
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">netstat -ano 活动连接列表
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ipconfig /all 查看ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="监听">监听
&lt;/h3>&lt;p>服务端用QTcpServer监听端口，用QTcpSocket 读取和写入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="line">&lt;span class="cl">&lt;span class="n">server&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">QHostAddress&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Any&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">8888&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//开始监听端口
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="连入">连入
&lt;/h3>&lt;p>连接后自动触发的函数，开始接受数据&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="n">Server&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">incomingConnection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">qintptr&lt;/span> &lt;span class="n">handle&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">setSocketDescriptor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">handle&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">SIGNAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">readyRead&lt;/span>&lt;span class="p">()),&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">SLOT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">receiveData&lt;/span>&lt;span class="p">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="读取">读取
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="n">Server&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">receiveData&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QByteArray&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">readAll&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">str&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">//转为QString
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="发送">发送
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="n">Server&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sendData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">QString&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toUtf8&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="客户端">客户端
&lt;/h2>&lt;p>用QTcpSocket实现连接及收发&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="n">QTcpSocket&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">connectToHost&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IP&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">PORT&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//连接
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">waitForConnected&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)){&lt;/span> &lt;span class="c1">//等待1秒连接
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">qDebug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;成功连接聊天室...&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">qDebug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;连接失败...&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">SIGNAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">readyRead&lt;/span>&lt;span class="p">()),&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">SLOT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">receiveData&lt;/span>&lt;span class="p">()));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="接受和发送">接受和发送
&lt;/h3>&lt;p>接受和发送与服务端相同&lt;/p>
&lt;h2 id="界面ui">界面UI
&lt;/h2>&lt;p>QSS是QT受CSS启发做的样式表语言，在简单的qt程序制作中非常好用。&lt;/p>
&lt;h3 id="界面背景">界面背景
&lt;/h3>&lt;p>在坐标(0,0)处放QLabel并拉满整个窗口，样式表中放入照片，照片要先导入到qrc资源文件中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">QLabel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border-image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sx">:/Images/duckl.png&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="按钮样式表">按钮样式表
&lt;/h3>&lt;p>hover是鼠标放在上面显示的样式&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">QPushButton&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="kc">white&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">90&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">194&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">198&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">min-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-family&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Microsoft YaHei&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="kt">pt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-weight&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">bold&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">white&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">QPushButton&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="kc">white&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#1fab89&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">min-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-family&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Microsoft YaHei&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="kt">pt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-weight&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">bold&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">white&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="全局样式表">全局样式表
&lt;/h3>&lt;p>编辑基类widget样式表&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">QWidget&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">QLineEdit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">147&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">154&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">rgba&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">44&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">52&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">150&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">min-width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-family&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Microsoft YaHei&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="kt">pt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-weight&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">bold&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">rgb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">147&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">154&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="程序源码">程序源码
&lt;/h2>&lt;p>源码：https://github.com/kevinwu06/DuckChat&lt;/p></description></item><item><title>【Qt C++】Fighter Duck</title><link>https://blog.fiveth.cc/p/f1e0/</link><pubDate>Sat, 15 Apr 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/f1e0/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/fighterduck.jpg" alt="Featured image of post 【Qt C++】Fighter Duck" />&lt;p>最近在学习Qt，做了个游戏当练手项目。&lt;/p>
&lt;p>断断续续大概写了两周，程序源码放在文章底部了。&lt;/p>
&lt;h2 id="游戏美术">游戏美术
&lt;/h2>&lt;p>用软件Aseprite自己绘制。Aseprite是一款专门针对像素画的软件，界面简洁，适合快速上手，没有ps那些繁琐的功能。&lt;/p>
&lt;p>游戏动态背景用ps做成，因为ps的动画功能可以实现流畅的帧变换。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/drawduck.webp" style="zoom: 25%;" />
&lt;h2 id="游戏代码">游戏代码
&lt;/h2>&lt;p>接下来是如何用Qt提供的接口来实现一些游戏的基本功能&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/duckgame.webp" style="zoom: 50%;" />
&lt;h3 id="动画">动画
&lt;/h3>&lt;p>游戏人物的动态用的是gif动图&lt;/p>
&lt;p>用QLabel和QMovie实现&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QLabel&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">duck&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">QLabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QMovie&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">duck_stand&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">QMovie&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Images/duck_stand.gif&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duck&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setMovie&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">duck_stand&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duck_stand&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">//开始播放
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">duck&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setFixedSize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">150&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">150&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//设置大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">duck&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setScaledContents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//自动大小匹配
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">duck&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//移动位置
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="图片">图片
&lt;/h3>&lt;p>显示静态图片用QLabel和QPixmap&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QLabel&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">duck&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">QLabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QPixmap&lt;/span> &lt;span class="n">duck_stand&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duck_stand&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Images/duck_stand.gif&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QLabel&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setMovie&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">duck_stand&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="事件处理">事件处理
&lt;/h3>&lt;p>在head文件中加入，再在源文件中定义&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="k">protected&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="n">keyPressEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">QKeyEvent&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">keyReleaseEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">QKeyEvent&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="游戏主循环">游戏主循环
&lt;/h3>&lt;p>控制帧率，一秒循环多少次&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QTimer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">timer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">QTimer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">QTimer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">timeout&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">GameEngine&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">MainGame&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//MainGame()是循环的函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">timer&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">FRAME&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//FRAME帧率
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="delay函数">Delay函数
&lt;/h3>&lt;p>Qt中要使用delay函数可以自己定义，代码如下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">msec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QTime&lt;/span> &lt;span class="n">dieTime&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">QTime&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">currentTime&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">addMSecs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msec&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="n">QTime&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">currentTime&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">dieTime&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QCoreApplication&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">processEvents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">QEventLoop&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">AllEvents&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="显示文字">显示文字
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C++" data-lang="C++">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QLabel&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">health&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">QLabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">widget&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">string_health_number&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">QString&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">number&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">health_number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//将int类型转化成QString
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">health&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string_health_number&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">health&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">QFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Microsoft YaHei&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">QFont&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Bold&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">health&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">setStyleSheet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;color:red;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;img src="https://p.fiveth.cc/img/m/fighterduck.webp" style="zoom: 30%;" />
&lt;h2 id="源码">源码
&lt;/h2>&lt;p>源码：https://github.com/kevinwu06/FighterDuck&lt;/p></description></item><item><title>阿谦读书笔记：《深入浅出程序设计竞赛》</title><link>https://blog.fiveth.cc/p/98d7/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/98d7/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/shenji.jpg" alt="Featured image of post 阿谦读书笔记：《深入浅出程序设计竞赛》" />&lt;h2 id="简介">简介
&lt;/h2>&lt;p>《深入浅出程序设计竞赛》是洛谷站长出的书，帮助青少年上手C++算法竞赛。书中对学习算法竞赛的顺序编排非常好，很系统，很适合用于算法竞赛入门。文章最后有书籍pdf版。&lt;/p>
&lt;hr>
&lt;p>&lt;strong>下面是我从基础语言入门部分(第一部分)总结出来的精华笔记。&lt;/strong>&lt;/p>
&lt;h2 id="文件操作">文件操作
&lt;/h2>&lt;p>在文件里创建 title.in文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">freeopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;title.in&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">stdin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">freeopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;title.out&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="头文件">头文件
&lt;/h2>&lt;h5 id="cstdio头文件">cstdio头文件
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//输入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="cmath头文件">cmath头文件:
&lt;/h5>&lt;p>包含一系列&lt;strong>数学函数&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="err">根号&lt;/span>&lt;span class="n">sqrt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">几次方&lt;/span>&lt;span class="n">pow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="algorithm头文件">algorithm头文件：
&lt;/h5>&lt;p>一系列&lt;strong>算法函数&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">min&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sort&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">swap&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="cstring头文件">cstring头文件：
&lt;/h5>&lt;p>用于char字符串&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">strlen获取字符串长度&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">strcpy复制字符串内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fgets读入字符串&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">sscanf获取字符串&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">sprintf输&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="杂货">杂货
&lt;/h2>&lt;h5 id="ascii码">ASCII码:
&lt;/h5>&lt;p>&amp;lsquo;A&amp;rsquo;=66, &amp;lsquo;a&amp;rsquo;=97&lt;/p>
&lt;h5 id="强制转换">强制转换:
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="函数">函数:
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//在这个函数里面对放入的a进行修改，函数外是不会生效的。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//相当于给放入的变量取了个别名，对其修改，该变量也会改变。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">stat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="c1">//相当于传入&amp;amp;a[]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//这也是一样，相当于把n的地址告诉函数，这样才能输入到n中。
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="左移右移运算符">左移/右移运算符
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//左移运算符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">^&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//右移运算符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">^&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="随机数">随机数
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;cstdlib&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;ctime&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">srand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ans&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">rand&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="c1">//生成0到(a-1)随机数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//ans=rand()%(b-a+1)+a 生成a到b随机数
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="异或运算符-">异或运算符: ^
&lt;/h5>&lt;p>一个成立一个不成立&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">true&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nb">false&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">true&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="字符串">字符串
&lt;/h2>&lt;h5 id="char字符串">char字符串
&lt;/h5>&lt;p>结束标记字符：&amp;rsquo;\0&amp;rsquo;&lt;/p>
&lt;p>&lt;strong>读入字符串方法：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cin&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这两种方法只能读到空格或者换行就会终止&lt;/p>
&lt;p>如果要输入&lt;strong>包括空格或换行的字符串&lt;/strong>，并存入一个字符串中，就用下面这种方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">getchar&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//读入字符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">EOF&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">putchar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>结束输入的时候，要使用组合键Ctrl+Z，然后回车。&lt;/p>
&lt;p>这是因为getchar返回EOF(End of file)代表文件读入完毕。&lt;/p>
&lt;p>windows下输入Ctrl+z / Linux下输入Ctrl+D 来输入EOF标记&lt;/p>
&lt;h5 id="string字符串">string字符串
&lt;/h5>&lt;p>加强版字符串，可以赋值、拼接&lt;/p>
&lt;p>&lt;strong>字符串string需要使用头文件 string,包括下面的常用方法&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//定义字符串变量s
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//拼接字符串1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//拼接字符串2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//比较字符串 s 的字典序是否在字符 str 的字典序之前
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取长度1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取长度2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//截取字符串s,从第 pos 个位置开始len 个字符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">substr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//在字符串s的第 pos 个字符之前插字符串 st
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//在字符串 s 中从第 pos 个字符开始寻找 str,并返回位置,如果找不到返回-1。pos 可以省略,默认值是 0。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//可以获取带空格字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">getline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cin&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" href="https://kevinwu06.lanzout.com/igPpV0rpkuve" target="_blank" rel="noopener"
>深入浅出程序设计竞赛.zip 蓝奏云&lt;/a>&lt;/p></description></item><item><title>阿谦教算法：如何学精排序算法？</title><link>https://blog.fiveth.cc/p/92b9/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/92b9/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/sort.webp" alt="Featured image of post 阿谦教算法：如何学精排序算法？" />&lt;h4 id="各种排序">各种排序
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>排序&lt;/th>
&lt;th>概述&lt;/th>
&lt;th>时间复杂度&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>计数排序&lt;/td>
&lt;td>对应票投入对应票箱&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>选择排序&lt;/td>
&lt;td>最小的放前 (两重循环)&lt;/td>
&lt;td>O(n^2^)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>冒泡排序&lt;/td>
&lt;td>依次比较相邻 (两重循环)&lt;/td>
&lt;td>O(n^2^)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>插入排序&lt;/td>
&lt;td>依次拿出一张牌插入排列中 (两重循环)&lt;/td>
&lt;td>O(n^2^)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;hellip;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>这些排序各适用不同情况，但时间复杂度总体较大。&lt;/p>
&lt;h4 id="快速排序">快速排序
&lt;/h4>&lt;p>程序设计竞赛中最普遍的排序。&lt;/p>
&lt;p>随机选择哨兵，时间复杂度O(n log n)。但极端情况O(n^2^)。&lt;/p>
&lt;p>&lt;strong>概述：&lt;/strong>&lt;/p>
&lt;p>选出一个哨兵，比哨兵小的数全放左边，比他大的全放右边。&lt;/p>
&lt;p>再分别在左边和右边选出哨兵，进行分类。&lt;/p>
&lt;p>以此循环，直到排序完成。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">qsort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">first&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">last&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">first&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">last&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="n">first&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">last&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">do&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//带=为了让i和j交错而过，这样才可以用递归
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">qsort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">first&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">last&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">qsort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">last&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100000&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//必须从i=1开始
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">qsort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当然也可以直接用algorithm头文件中的sort函数，&lt;/p>
&lt;p>我们学会自己写是为了理解原理，提升思维，&lt;/p>
&lt;p>同时在有特殊需求的时候可以更自定义化。&lt;/p></description></item><item><title>阿谦读书笔记：Computational Fairy Tales</title><link>https://blog.fiveth.cc/p/ee7c/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/ee7c/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/computa.jpg" alt="Featured image of post 阿谦读书笔记：Computational Fairy Tales" />&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>This is a book on the &lt;strong>Computer Science book list of Oxford&lt;/strong>. It is a good book for crossing the threshold of computer science.&lt;/p>
&lt;p>The book briefly introduces the some &lt;strong>fundamental knowledges&lt;/strong> of computer science through an interesting adventure story.&lt;/p>
&lt;p>I recognized many &lt;strong>computational terms&lt;/strong> in the book that I&amp;rsquo;ve already learned in Chinese. So it helped me to know the spelling of the computational terms in English. And I also learned a lot that I&amp;rsquo;ve not learned about. I&amp;rsquo;ll keep on studying computer science and be on the way for fulfilling my dream.&lt;/p>
&lt;p>I note down all the essential terms in the book to sum it up and help me for review.&lt;/p>
&lt;h2 id="base">Base
&lt;/h2>&lt;p>&lt;strong>Computer Science:&lt;/strong> a way of thinking about problems.&lt;/p>
&lt;p>A set of core concepts-approaches to solving fundamental problems,and how combine them to solve larger and more complex problem.&lt;/p>
&lt;p>**Algorithm: **a set of specific steps for solving a problem.&lt;/p>
&lt;p>**Variable: **a place in memory where you can store a single piece of data.&lt;/p>
&lt;p>&lt;strong>IF-ELSE statements:&lt;/strong> branch off and execute one of different blocks of code.&lt;/p>
&lt;p>**Loops: **programming constructs for repeating a set of instructions until some terminal criterion is met.&lt;/p>
&lt;p>**Boolean logic: **base on two values: TRUE and FALSE&lt;/p>
&lt;p>&lt;strong>Binary:&lt;/strong> a number system which each digit can take one of 0 or 1.&lt;/p>
&lt;p>101=(1x2^2^)(0x2^1^)(1x2^0^)&lt;/p>
&lt;p>**Pseudocode: **an informal understandable way of writing algorithms.&lt;/p>
&lt;h2 id="data-structure">Data Structure
&lt;/h2>&lt;p>&lt;strong>Arrays:&lt;/strong> like a set of bins with a fixed number of slots.&lt;/p>
&lt;p>&lt;strong>Strings:&lt;/strong> sequences(array) of characters&lt;/p>
&lt;p>&lt;strong>Swapping two values:&lt;/strong>&lt;/p>
&lt;p>1.put one into temporary storage&lt;/p>
&lt;p>2.the other in the memory location of first entry&lt;/p>
&lt;p>3.the data from temporary storage is written to second entry.&lt;/p>
&lt;p>&lt;strong>Pointers:&lt;/strong> variables that hold addresses in the computer memory. &lt;em>Flexible&lt;/em>&lt;/p>
&lt;p>&lt;strong>Linked lists:&lt;/strong> data structures that store lists of items. Use pointer to store the next and previous node.&lt;/p>
&lt;p>&lt;strong>Stacks:&lt;/strong> last-in, first-out data structure.&lt;/p>
&lt;p>&lt;strong>Queues:&lt;/strong> first in, first out data structure.&lt;/p>
&lt;p>&lt;strong>Priority queues:&lt;/strong> return the highest priority data.&lt;/p>
&lt;p>&lt;strong>Binary search trees:&lt;/strong> efficient searches by value like a tree.&lt;/p>
&lt;p>&lt;strong>Caching data:&lt;/strong> storing a copy of data in a quickly accessible location to speed up future accesses of that data.&lt;/p>
&lt;p>&lt;strong>Recursion:&lt;/strong> a problem-solving technique that builds a solution to a problem from solutions to smaller subproblems of the same type.&lt;/p>
&lt;p>&lt;strong>Binary search:&lt;/strong> algorithm for efficiently finding a target value within a sorted list.&lt;/p>
&lt;p>&lt;strong>Insertion sort:&lt;/strong> simple inefficient sorting an array of number.&lt;/p>
&lt;p>&lt;strong>Bubble sort:&lt;/strong> Swapping adjacent elements if they are out of order.&lt;/p>
&lt;p>&lt;strong>Merge sort:&lt;/strong> Break the data in half, sort each half separately using merge sort and merge together.&lt;/p>
&lt;p>*&lt;strong>Oracle&amp;rsquo;s Array:&lt;/strong> Using algorithms and data structures together to create complex programs.&lt;/p>
&lt;p>&lt;strong>Graph:&lt;/strong> is defined by a set of nodes and a set of edges that link together the nodes.&lt;/p>
&lt;p>Directed/Undirected&lt;/p>
&lt;p>Weighted/Unweighted&lt;/p>
&lt;p>&lt;strong>Dijkstra&amp;rsquo;s algorithm:&lt;/strong> find the shortest path from a given starting node to all other nodes in the graph.&lt;/p>
&lt;p>&lt;strong>Representations of graphs:&lt;/strong> two common data structure representing graphs:&lt;/p>
&lt;p>​ &lt;strong>adjacency matrix:&lt;/strong> One row and one column for each node.&lt;/p>
&lt;p>​ &lt;strong>adjacency list:&lt;/strong> a separate list of neighbors for each node.&lt;/p>
&lt;p>&lt;strong>Traveling salesman problem:&lt;/strong> find the shortest path through a graph that visits each node and return to the starting node. &lt;em>&lt;strong>NP-hard&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>Depth-first search:&lt;/strong> a search algorithm that fully explores a single path before backtracking to test other paths.&lt;/p>
&lt;p>&lt;strong>Minimum Spanning Tree:&lt;/strong> the smallest set of edges that all of the nodes are connected.&lt;/p>
&lt;p>&lt;strong>Hamiltonian path:&lt;/strong> visits each node in a graph exactly one time. &lt;em>&lt;strong>NP-Hard&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="computational-thinking">Computational Thinking
&lt;/h2>&lt;p>Complex algorithms build on a core set of fundamental concepts. Mastering them and learn to combine them is the key to solving to problems.&lt;/p>
&lt;p>&lt;strong>NP-Hard:&lt;/strong> computational problems for which there are no known efficient and exact solution.&lt;/p>
&lt;p>&lt;strong>Quicksort:&lt;/strong> a recursive sorting algorithm that is similar to merge sort but faster.&lt;/p>
&lt;p>&lt;strong>Comments:&lt;/strong> additional text within code that improve the read ability.&lt;/p></description></item><item><title>如何用SDL开发游戏？</title><link>https://blog.fiveth.cc/p/b01b/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/b01b/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/sdl.jpg" alt="Featured image of post 如何用SDL开发游戏？" />&lt;p>SDL（Simple DirectMedia Layer）是一套开放源代码的&lt;strong>跨平台多媒体开发库&lt;/strong>，使用C语言写成。SDL提供了数种控制图像、声音、输出入的函数，让开发者只要用相同或是相似的代码就可以开发出跨多个平台的应用软件。现SDL多用于开发游戏、模拟器、媒体播放器等多媒体应用领域。&lt;/p>
&lt;p>最近前段时间浅学习了下SDL，以及做游戏。这篇文章总结下。&lt;/p>
&lt;h2 id="游戏结构">游戏结构
&lt;/h2>&lt;p>做游戏这里最主要的是&lt;strong>面向对象&lt;/strong>编程思想。&lt;/p>
&lt;p>&lt;strong>多创建类文件&lt;/strong>可以帮助我们更好的理清逻辑，管理代码。&lt;/p>
&lt;p>整个游戏的结构：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Init&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//初始化
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Running&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="c1">//运行状态循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Events&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//事件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">Loop&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">Render&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//渲染
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Clean&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="c1">//清除
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样把整个游戏结构写成函数形式可以让我们更好的管理代码。这应该就是我们main函数大概的样子。&lt;/p>
&lt;h2 id="sdl函数">SDL函数
&lt;/h2>&lt;p>接下来我们来看看SDL给我们提供的函数，让我们怎么去实现游戏功能。&lt;/p>
&lt;p>首先我们来看看一个简单的SDL&lt;strong>创建窗口&lt;/strong>的程序。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">SDL_Init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SDL_INIT_VIDEO&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_Log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cannot Init Video,%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SDL_GetError&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_Window&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">win&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SDL_CreateWindow&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Title&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_WINDOWPOS_CENTERED&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_WINDOWPOS_CENTERED&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">400&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SDL_WINDOW_SHOWN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">win&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_Log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cannot Create Window,%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">SDL_GetError&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_Delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//延迟3000毫秒
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_DestroyWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">win&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SDL_Quit&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="检测故障">检测故障
&lt;/h3>&lt;p>我们可以看到我们在初始化和创建的时候&lt;strong>会写一个判断语句&lt;/strong>。&lt;/p>
&lt;p>这是为什么？&lt;/p>
&lt;p>因为有时可能会因为各种原因导致&lt;strong>初始化失败&lt;/strong>或者&lt;strong>创建失败&lt;/strong>，到后面代码多了如果某个环节失败了，我们想要找出问题所在会非常困难。&lt;/p>
&lt;p>所以我们在初始化和创建的时候写判断语句，比如第一个&lt;strong>SDL_Init()&lt;/strong>，这个SDL给出的函数如果失败了会返回1(可以右键进入定义代码查看)，所以如果返回了1，我们就用**SDL_Log()&lt;strong>函数(SDL给出的输出函数,也可以用cout或者printf)输出问题，后面的&lt;/strong>SDL_Error()**可以获取问题。&lt;/p>
&lt;p>这样的检测故障的判断是必须的。&lt;/p>
&lt;h3 id="清除">清除
&lt;/h3>&lt;p>可以看到我们最后使用了&lt;/p>
&lt;pre>&lt;code>SDL_DestroyWindow(win);
SDL_Quit();
&lt;/code>&lt;/pre>
&lt;p>这是官方给出的销毁/清除的函数。&lt;/p>
&lt;p>在我们初始化了SDL的功能后，在程序末尾我们必须用SDL_Quit()将其清除。&lt;/p>
&lt;p>同样道理，我们用SDL创建的数据变量也应该销毁/释放掉。&lt;/p>
&lt;p>(每个数据变量都有对应的销毁/释放函数，如SDL_DestroyRenderer,SDL_FreeSurface)&lt;/p>
&lt;h2 id="sdl学习">SDL学习
&lt;/h2>&lt;p>SDL给出了非常非常多的功能函数。&lt;/p>
&lt;p>大家使用时应该学会查看官方文档，里面都给出了详细的使用方法。&lt;/p>
&lt;p>这是我之前学习SDL的文件，里面有一些最基本功能的实现，大家可以看看。&lt;/p>
&lt;p>&lt;a class="link" href="https://kevinwu06.lanzout.com/i3Stw0lrzw4f" target="_blank" rel="noopener"
>SDL学习文件 蓝奏云&lt;/a>&lt;/p></description></item><item><title>阿谦教算法：如何学精链表？</title><link>https://blog.fiveth.cc/p/c8a8/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/c8a8/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/linklist.webp" alt="Featured image of post 阿谦教算法：如何学精链表？" />&lt;p>我们存储很多数的时候，通常使用数组，但是数组不够灵活。&lt;/p>
&lt;p>哦？为什么说不灵活？&lt;/p>
&lt;p>我们如果要在一个数组前面或者中间插入一个数，就会很麻烦。&lt;/p>
&lt;p>假设我们有一个数组a,里面是排序好的数字,我们要将7按大小顺序插入数组&lt;/p>
&lt;p>我们就得把后面的数全都依次往后移一位，再将7放入。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/linklist1.webp" style="zoom:50%;" />
&lt;p>这样如果后面的数非常多的话就会很耽误时间。&lt;/p>
&lt;p>所以我们需要用到&lt;strong>链表&lt;/strong>。&lt;/p>
&lt;p>链表就是利用&lt;strong>结构体&lt;/strong>和&lt;strong>指针&lt;/strong>，在存储数据的同时，存储一个指向下一个结点的指针。&lt;/p>
&lt;p>这样我们要插入数字的时候，只要修改下指针的指向，就可以快速的进行插入或取出之类的操作。&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/linklist2.webp" style="zoom:50%;" />
&lt;p>链表有很多种：&lt;/p>
&lt;p>**单链表:**每个结点记录后继(图片演示的就是)&lt;/p>
&lt;p>**双链表:**每个结点记录前驱和后继，它比单链多了个往前走的功能&lt;/p>
&lt;p>**循环单链表:**将单链表的最后一个结点的后继指向第一个结点，形成一个环形结构&lt;/p>
&lt;p>**循环双链表:**将双链表连成环形&lt;/p>
&lt;p>&amp;hellip;（还有几种就不一一列述了）&lt;/p>
&lt;p>这里我们设计一个程序实现一下链表，首先输入四个按大小顺序排列的数字，然后再输入要插入的数字，&lt;/p>
&lt;p>程序会输出插入后的排列&lt;/p>
&lt;p>先上代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="nc">node&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//存数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//后继指针
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">node&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">head&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//用指针p指向一个动态申请的node大小的空间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">malloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//将数据存入当前结点(p指向的结点)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">p&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">head&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">head&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//如果是第一个结点，就将头指针指向当前结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">q&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//否则将上一个结点的后继指针指向当前结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//将q指向当前结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//插入数据
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">node&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//从链表头开始遍历
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">malloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//将数据存入当前结点(p指向的结点)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">p&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//将当前结点的后继指针指向下一结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//将上一结点的后继指针指向当前结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//下一结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//从链表头开始遍历
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//下一结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//释放动态申请的空间(确保安全)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">node&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">current&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//记录当前结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//下一结点
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>代码不长，但是可能需要时间理解。&lt;/p>
&lt;p>讲讲&lt;strong>malloc函数&lt;/strong>，malloc函数的作用是&lt;strong>动态分配内存&lt;/strong>。&lt;/p>
&lt;p>每次输入数据前，我们就用p指向一个动态申请的新空间，然后存入数据。&lt;/p>
&lt;p>程序的最后，我们用&lt;strong>free()函数&lt;/strong>来&lt;strong>释放&lt;/strong>动态申请的&lt;strong>空间&lt;/strong>，这样可以让我们的程序更安全。&lt;/p>
&lt;p>我们学习c语言和c++应该追求最大程度地优化，排除可能出现的问题。&lt;/p></description></item><item><title>算法：如何高效地筛出质数？(欧拉筛)</title><link>https://blog.fiveth.cc/p/a680/</link><pubDate>Fri, 23 Dec 2022 11:29:22 +0000</pubDate><guid>https://blog.fiveth.cc/p/a680/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/oula.webp" alt="Featured image of post 算法：如何高效地筛出质数？(欧拉筛)" />&lt;p>如何高效筛素数？让我们来看看&lt;/p>
&lt;p>**题目：**生成一个1到n范围内的质数数组&lt;/p>
&lt;h2 id="菜鸟这样做枚举法">菜鸟这样做（枚举法）
&lt;/h2>&lt;p>从1枚举到n，判断是素数就存入数组&lt;/p>
&lt;p>下面是判断方法&lt;/p>
&lt;h3 id="菜鸟">菜鸟：
&lt;/h3>&lt;p>从2枚举到n-1，如果有能整除该数的，该数就是质数。&lt;/p>
&lt;h3 id="进化版菜鸟">进化版菜鸟：
&lt;/h3>&lt;p>菜鸟进化了，从2枚举到$\sqrt n$&lt;/p>
&lt;hr>
&lt;h2 id="高手版">高手版
&lt;/h2>&lt;h3 id="埃氏筛">埃氏筛
&lt;/h3>&lt;p>这样筛掉后每次下一位没被筛掉的数就都是质数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">bool&lt;/span> &lt;span class="n">numlist&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100000&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//0代表质数，1代表非质数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">prime&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100000&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">work&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">numlist&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span> &lt;span class="c1">//如果是质数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">prime&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="c1">//就先存入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">numlist&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//然后将其平方后的所有倍数筛掉
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是这钟筛法还不是最优，因为p的倍数会重复，所以有些数会被重复筛掉。&lt;/p>
&lt;p>那么就引出了我们的最终筛法。&lt;/p>
&lt;h3 id="欧拉筛">欧拉筛
&lt;/h3>&lt;img src="https://p.fiveth.cc/img/m/欧拉.webp">
&lt;p>这个筛法避免了重复筛，思路就是：每个合数只会被其&lt;strong>最大非自身因数&lt;/strong>筛除&lt;/p>
&lt;p>多说无益，先上代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">bool&lt;/span> &lt;span class="n">numlist&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100000&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//0代表质数，1代表非质数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">prime&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100000&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">work&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">numlist&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ans&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//是质数就先存入数组
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">prime&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">numlist&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">prime&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//每次让i乘已放入的质数，然后标记非质数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">prime&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//但是如果i可以被该数整除就停止（关键）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在我们再来分析下。&lt;/p>
&lt;p>从表可以看出，我们会筛掉每个质数p的平方之后的p的倍数，但是如果i是p的倍数，那就说明它们的乘积那个合数的最大非自身因数不是i，所以不筛。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;em>i&lt;/em> 的值&lt;/th>
&lt;th style="text-align:left">质数表&lt;/th>
&lt;th style="text-align:left">筛去的数&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td style="text-align:left">2&lt;/td>
&lt;td style="text-align:left">4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td style="text-align:left">2, 3&lt;/td>
&lt;td style="text-align:left">6, 9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td style="text-align:left">2, 3&lt;/td>
&lt;td style="text-align:left">8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td style="text-align:left">2, 3, 5&lt;/td>
&lt;td style="text-align:left">10, 15, 25&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6&lt;/td>
&lt;td style="text-align:left">2, 3, 5&lt;/td>
&lt;td style="text-align:left">12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7&lt;/td>
&lt;td style="text-align:left">2, 3, 5, 7&lt;/td>
&lt;td style="text-align:left">14, 21, 28, 35&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⋯&lt;/td>
&lt;td style="text-align:left">⋯&lt;/td>
&lt;td style="text-align:left">⋯&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>阿谦学习笔记：HTML</title><link>https://blog.fiveth.cc/p/c57/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/c57/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/html.jpg" alt="Featured image of post 阿谦学习笔记：HTML" />&lt;p>这是我之前学习html做的一点笔记，是一些基础，非常简单好学。&lt;/p>
&lt;h2 id="网页基本信息">·网页基本信息
&lt;/h2>&lt;p>doctype声明&lt;/p>
&lt;h4 id="meta描述性标签">meta描述性标签
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/meta.webp" style="zoom:50%;" />
&lt;hr>
&lt;h2 id="网页基本标签">·网页基本标签
&lt;/h2>&lt;h5 id="标题标签">标题标签
&lt;/h5>&lt;p>h1~h6&lt;/p>
&lt;h5 id="段落标签">段落标签
&lt;/h5>&lt;p>p&lt;/p>
&lt;h4 id="换行标签">换行标签
&lt;/h4>&lt;p>br&lt;/p>
&lt;h4 id="粗体斜体">粗体斜体
&lt;/h4>&lt;p>粗体b 斜体i&lt;/p>
&lt;h4 id="特殊符号">特殊符号
&lt;/h4>&lt;p>（&amp;amp; ;）&lt;/p>
&lt;p>空格 nbsp&lt;/p>
&lt;p>大于gt 小于lt&lt;/p>
&lt;p>版权copy&lt;/p>
&lt;hr>
&lt;h2 id="图像标签">·图像标签
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/图像.webp" style="zoom: 25%;" />
&lt;hr>
&lt;h2 id="超链接标签">·超链接标签
&lt;/h2>&lt;h4 id="页面跳转">页面跳转
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/超链接.webp" style="zoom: 33%;" />
&lt;h4 id="锚链接">锚链接
&lt;/h4>&lt;p>&lt;strong>锚标记&lt;/strong> a id=“top”&lt;/p>
&lt;p>&lt;strong>邮件链接&lt;/strong> mailto:&lt;/p>
&lt;p>&lt;strong>QQ链接&lt;/strong> 上“qq推广”官网&lt;/p>
&lt;hr>
&lt;h2 id="概念行内元素和块元素">·*概念:行内元素和块元素
&lt;/h2>&lt;h4 id="块元素">块元素
&lt;/h4>&lt;p>独占一行的元素&lt;/p>
&lt;h4 id="行内元素">行内元素
&lt;/h4>&lt;p>撑开宽度的元素&lt;/p>
&lt;hr>
&lt;h2 id="列表">·列表
&lt;/h2>&lt;h4 id="有序列表无序列表">有序列表、无序列表
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/有序无序列表.webp" style="zoom: 33%;" />
&lt;h4 id="自定义列表">自定义列表
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/自定义列表.webp" style="zoom: 50%;" />
&lt;hr>
&lt;h2 id="表格标签">·表格标签
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/表格.webp" style="zoom:33%;" />
&lt;hr>
&lt;h2 id="媒体元素">·媒体元素
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/媒体.webp" style="zoom: 33%;" />
&lt;hr>
&lt;h2 id="页面结构">·页面结构
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/页面结构.webp" style="zoom: 25%;" />
&lt;hr>
&lt;h2 id="iframe内联框架">·iframe内联框架
&lt;/h2>&lt;img src="https://p.fiveth.cc/img/m/iframe.webp" style="zoom: 33%;" />
&lt;p>链接控制iframe窗口跳转&lt;/p>
&lt;hr>
&lt;h2 id="表单">·表单
&lt;/h2>&lt;h4 id="表单-1">表单
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/表单.webp" style="zoom:33%;" />
&lt;h4 id="元素表单格式">元素表单格式
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/表单元素格式.webp" style="zoom: 25%;" />
&lt;h4 id="文本框">文本框
&lt;/h4>&lt;p>text&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/文本框.webp" style="zoom: 50%;" />
&lt;h4 id="单选框">单选框
&lt;/h4>&lt;p>radio&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/单选框.webp" style="zoom: 50%;" />
&lt;h4 id="多选框">多选框
&lt;/h4>&lt;p>checkbox&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/多选框.webp" style="zoom: 50%;" />
&lt;h4 id="按钮">按钮
&lt;/h4>&lt;p>button&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/按钮.webp" style="zoom: 50%;" />
&lt;h4 id="下拉框">下拉框
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/下拉框.webp" style="zoom: 50%;" />
&lt;h4 id="文本域文件域">文本域、文件域
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/文本文件域.webp" style="zoom: 33%;" />
&lt;h4 id="滑块搜索框">滑块、搜索框
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/滑块、搜索框.webp" style="zoom: 33%;" />
&lt;h4 id="简单验证">简单验证
&lt;/h4>&lt;img src="https://p.fiveth.cc/img/m/功能表单.webp" style="zoom: 40%;" />
&lt;h2 id="表单应用">表单应用
&lt;/h2>&lt;p>只读 readonly&lt;/p>
&lt;p>禁用 disabled&lt;/p>
&lt;p>隐藏 hidden&lt;/p>
&lt;h2 id="表单初级验证">表单初级验证
&lt;/h2>&lt;p>placeholder 提示信息&lt;/p>
&lt;p>required 必填&lt;/p>
&lt;p>pattern 正则表达式（百度上搜索各种）&lt;/p>
&lt;hr>
&lt;p>图片来源于b站狂神说的html课程，推荐。&lt;/p></description></item><item><title>算法：高精度运算</title><link>https://blog.fiveth.cc/p/e08/</link><pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/e08/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/calculator.webp" alt="Featured image of post 算法：高精度运算" />&lt;p>我们知道每种数据类型的储存空间是有限的，如果我们要储存非常大的数可以用long long，更大则unsigned long long，再大就是有些编译器提供的_int128类型，但是要是比这还要大呢?我们就需要用到&lt;strong>高精度运算&lt;/strong>，&lt;strong>用数组来模拟非常大的整数&lt;/strong>。&lt;/p>
&lt;p>我们只要定义一个数组，把数字分别放入数组序列中就可以储存非常大的数。&lt;/p>
&lt;p>接下来我们看看怎么使用高精度运算。&lt;/p>
&lt;p>（注意以下都是我个人的解法，不一定是最优解，借鉴学习即可）&lt;/p>
&lt;h2 id="ab">A+B
&lt;/h2>&lt;p>**题目：**高精度加法，相当于 a+b problem，不用考虑负数。（&lt;a class="link" href="https://www.luogu.com.cn/problem/P1601" target="_blank" rel="noopener"
>洛谷P1601题&lt;/a>）&lt;/p>
&lt;p>输入a和b，然后输出a+b，太简单了！但是，题目要求的是高精度加法，也就是说输入的a和b是非常大的，我们要使用高精度才能储存该数进行处理。&lt;/p>
&lt;p>首先我们看看加法的竖式&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/a+b.webp" style="zoom: 15%;" />
&lt;p>如果&lt;strong>超过10&lt;/strong>就要向下一位&lt;strong>进位&lt;/strong>，进位的数字和下一位的值相加&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&amp;lt;iostream&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&amp;lt;algorithm&amp;gt;&lt;/span>&lt;span class="c1">//包含max函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="c1">//这个定义必须放在主函数外!!!这样它才会初始化，我被这个坑惨了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">string&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">lena&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">lenb&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lena&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lenb&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//把字符变成对应的数字，并倒序存入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">lena&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">lena&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">lenb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">lenb&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//相加并处理进位
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//相加
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//进位
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//如果进位使得位数增加，我们就多输出一位
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//因为我们之前是倒序存入，所以现在倒序输出就又正了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="ab-1">A*B
&lt;/h2>&lt;p>**题目：**给出两个非负整数，求它们的乘积。每个非负整数不超过 10^2000^（&lt;a class="link" href="https://www.luogu.com.cn/problem/P1303" target="_blank" rel="noopener"
>洛谷P1303题&lt;/a>）&lt;/p>
&lt;p>还是一样，看似是道弱智题，但是我们要注意输入值的范围，数值非常大，再加上要相乘，很容易就会超过我们数据类型范围，所以又要用到我们的高精度方法。&lt;/p>
&lt;p>算乘法，我们就先复习下乘法竖式&lt;/p>
&lt;img src="https://p.fiveth.cc/img/m/axb.webp" style="zoom: 15%;" />
&lt;p>&lt;strong>几个需要知道的点&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>和加法非常像，也是&lt;strong>超10进位&lt;/strong>。&lt;/li>
&lt;li>这里有个很重要的规律，我们&lt;strong>倒着数&lt;/strong>，&lt;strong>第一个数的i位乘第二个数的j位，它们的乘积会到第(i+j-1)位上&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>乘积的位数不超过两数的位数之和&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>知道了这个，我们就可以开始了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&amp;lt;iostream&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&amp;lt;string&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">string&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">lena&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">lenb&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//转化成对应数字并倒序存入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">lena&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">lena&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">lenb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">lenb&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//计算乘积
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">lena&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">lenb&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lena&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">lenb&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//乘积的位数不超过两数的位数之和
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//处理进位
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">%=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//去掉多余输出的位数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//特殊情况，乘积等于0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">len&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">C&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="阶乘之和">阶乘之和
&lt;/h2>&lt;p>&lt;strong>题目描述&lt;/strong>&lt;/p>
&lt;p>用高精度计算出 $S = 1! + 2! + 3! + \cdots + n!$（$n \le 50$）。&lt;/p>
&lt;p>其中 &lt;code>!&lt;/code> 表示阶乘，定义为 $n!=n\times (n-1)\times (n-2)\times \cdots \times 1$。例如，$5! = 5 \times 4 \times 3 \times 2 \times 1=120$。&lt;/p>
&lt;p>输入n，输出s。（&lt;a class="link" href="https://www.luogu.com.cn/problem/P1009" target="_blank" rel="noopener"
>洛谷P1009题&lt;/a>）&lt;/p>
&lt;p>这道题可以说是前两道题的结合。&lt;/p>
&lt;p>这是我的解法，因为这道题较特殊，所以可以做到比前两道的代码还短，可能有点抽象，要仔细思考&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&amp;lt;iostream&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1005&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1005&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cin&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//这个循环是外面的加法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//阶乘的相乘
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//阶乘的进位
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">%=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//每算完一个阶乘就加进结果并处理进位
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">%=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//去除多余的位数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">cout&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>灵活掌握，举一反三才能在程序竞赛中绽放自我。&lt;/p></description></item><item><title>阿谦教算法：如何求最大公因数？(辗转相除法)</title><link>https://blog.fiveth.cc/p/72c/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/72c/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/gcd.webp" alt="Featured image of post 阿谦教算法：如何求最大公因数？(辗转相除法)" />&lt;p>辗转相除法是一种求最大公因数的计算方法。&lt;/p>
&lt;p>这种方法在编程中很常用，在数学计算中也可以用来求很复杂的最大公因数问题。&lt;/p>
&lt;h2 id="如何使用">如何使用
&lt;/h2>&lt;p>题目：求最大公因数(36,14)&lt;/p>
&lt;p>我们如何用辗转相除法做这道题呢？
$$
\displaylines{
反复用除数除以余数直到除尽\
36{\div}14=2\dots8\
14{\div}8=1\dots6\
8{\div}6=1\dots2\
6{\div}2=3\
最后一个除数就是最大公约数，也就是2
}
$$
我们算出最大公约数(36,14)=2&lt;/p>
&lt;p>到这里，我们就知道如何使用辗转相除法了。&lt;/p>
&lt;p>但是，鲁迅曾说过“我们学公式必须得懂得原理”，我们明白了原理才能灵活运用&lt;/p>
&lt;h2 id="原理">原理
&lt;/h2>&lt;p>求最大公因数(a,b)&lt;/p>
&lt;p>首先我们推出这几条式子
$$
\displaylines{
a{\div}b=q\dots r \
a=bq+r \
r=a-bq
}
$$
&lt;strong>这是我们辗转法的原理&lt;/strong>
$$
\displaylines{
(a,b)=(b,r) \a和b的最大公约数就等于b和r的最大公约数
}
$$
接下来让我们证明这条公式
$$
\displaylines{
(1)设(a,b)=d\
那么a=dm,b=dn\
然后我们将其带入r=a-bq\
得r=d(m-nq)\
因为m,n,q都是整数，所以r是d的倍数，d是r的因数\
所以：只要是a,b的因数，就一定是d,r的约数\
}
$$&lt;/p>
&lt;p>$$
\displaylines{
(2)设(b,r)=d\
和之前一样，那么b=dx,r=dy\
然后将其代入a=bq+r\
得a=d(xq+y)\
因为x,q,y都是整数，所以a是d的倍数，d是a的因数\
所以：只要是d,r的因数，就一定是a的因数\
}
$$&lt;/p>
&lt;p>这样，我们就得出(a,b)的因数和(b,r)的因数相同，它们的因数都相同，那么它们的最大公因数也就相同。&lt;/p>
&lt;p>所以我们要求(a,b)的最大公因数，我们就通过可以求(b,r)的最大公因数来得到。&lt;/p>
&lt;p>&lt;strong>现在我们再来看看开头的题&lt;/strong>&lt;/p>
&lt;p>题目：求最大公因数(36,14)&lt;/p>
&lt;p>反复用(a,b)=(b,r)的方法&lt;/p>
&lt;p>(36,14)=(14,8)=(8,6)=(6,2)&lt;/p>
&lt;p>最后得到(6,2)，显而易见最大公约数是2&lt;/p>
&lt;h2 id="写gcd函数">写gcd函数
&lt;/h2>&lt;p>接下来看看我们如何在C++中用辗转相除法写gcd函数&lt;/p>
&lt;p>gcd函数就是用来求最大公因数的函数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">gcd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//a能被b整除时就终止循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//讲a换成除数b，b换成余数r
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当然也可以直接用algorithm头文件中的gcd函数，&lt;/p>
&lt;p>我们学会自己写是为了理解原理，提升思维，&lt;/p>
&lt;p>自己写还可以在有特殊需求的时候更自定义化。&lt;/p></description></item><item><title>如何用Hexo搭建个人博客?</title><link>https://blog.fiveth.cc/p/bb32/</link><pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.fiveth.cc/p/bb32/</guid><description>&lt;img src="https://p.fiveth.cc/img/m/hexo.jpg" alt="Featured image of post 如何用Hexo搭建个人博客?" />&lt;p>{% tip info %}&lt;code>2024.4&lt;/code> 我出了视频版教程啦：&lt;a class="link" href="https://www.bilibili.com/video/BV1Ju4m1c7WR/" target="_blank" rel="noopener"
>bilibili视频链接&lt;/a>{% endtip %}&lt;/p>
&lt;p>我的个人博客搭建成功啦！&lt;/p>
&lt;p>这篇文章会给大家分享我是如何从0开始搭建我的个人独立博客的&lt;/p>
&lt;p>接下来我们开始吧&lt;/p>
&lt;p>&lt;strong>文章比较精简，没有废话，不要跳步&lt;/strong>&lt;/p>
&lt;h2 id="准备工具">准备工具
&lt;/h2>&lt;p>首先我们需要到对应网站下载需要的工具&lt;/p>
&lt;p>&lt;strong>&lt;a class="link" href="https://nodejs.org/en/" target="_blank" rel="noopener"
>下载nodejs&lt;/a>&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>&lt;em>(这篇文章里有修改nodejs缓存路径的教学:&lt;a class="link" href="https://www.cnblogs.com/liuqiyun/p/8133904.html" target="_blank" rel="noopener"
>文章链接&lt;/a>，c盘战士可以不看)&lt;/em>&lt;/p>
&lt;p>&lt;strong>&lt;a class="link" href="https://git-scm.com/downloads" target="_blank" rel="noopener"
>下载git&lt;/a>&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>一直点确定就行，全部按它默认勾的&lt;/p>
&lt;p>&lt;em>(这里有一篇详细安装教程&lt;a class="link" href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html" target="_blank" rel="noopener"
>文章链接&lt;/a>，可以不看)&lt;/em>&lt;/p>
&lt;p>&lt;strong>接下来我们测试下是否都下载成功&lt;/strong>&lt;/p>
&lt;p>管理员运行cmd，依次输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">node -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm -v（这个是node附带的）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>下载hexo&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install hexo-cli -g
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="搭建仓库">搭建仓库
&lt;/h2>&lt;p>成功下载好工具之后，我们开始搭建GitHub存储静态页面的仓库&lt;/p>
&lt;p>首先注册/登入&lt;a class="link" href="https://github.com/" target="_blank" rel="noopener"
>Github&lt;/a>&lt;/p>
&lt;p>点击Create a new repository进入新建仓库页面&lt;/p>
&lt;p>仓库名输入：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">用户名.github.io
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>勾选 Public&lt;/p>
&lt;p>勾选 Add a README file&lt;/p>
&lt;p>拉到下面点击create创建&lt;/p>
&lt;h2 id="生成ssh-keys">生成SSH Keys
&lt;/h2>&lt;p>进入任意文件夹，右键空白处然后点Git bash here,输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa -C &amp;#34;邮件地址&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后敲4次Enter⌨️&lt;/p>
&lt;p>然后进入C:\Users\用户名，在里面进入.ssh文件&lt;/p>
&lt;p>用记事本打开里面的id_rsa.pub,全选复制里面的代码&lt;/p>
&lt;p>&lt;strong>然后打开github&lt;/strong>&lt;/p>
&lt;p>进入用户设置，找到SSH keys&lt;/p>
&lt;p>新建SSH keys，名称随意，在下面粘贴代码，&lt;/p>
&lt;p>然后创建&lt;/p>
&lt;p>&lt;strong>测试是否成功&lt;/strong>&lt;/p>
&lt;p>在git bash中输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh -T git@github.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>回车，然后再输入yes&lt;/p>
&lt;h2 id="本地生成博客内容">本地生成博客内容
&lt;/h2>&lt;p>在喜欢位置新建文件Blog，然后进入文件夹&lt;/p>
&lt;p>右键空白处然后点Git bash here，输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>如果‘command not find’，就在前面加上npx，如：&lt;code>npx hexo init&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>然后&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来依次输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo g
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hexo s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>（如果不成功的话就重复直到成功，因为国内与github连接不稳定）&lt;/p>
&lt;p>现在就可以复制生成的链接进入浏览器看到我们生成的本地服务器了&lt;/p>
&lt;p>然后回到命令行，ctrl+c关闭&lt;/p>
&lt;h2 id="上线博客">上线博客
&lt;/h2>&lt;p>进入之前的Blog文件夹，用记事本打开_config.yml&lt;/p>
&lt;p>拉到最下面将deploy后面的全删掉，复制粘贴这段&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> type: git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> repository:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branch: main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>注意缩进格式：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删！&lt;/p>
&lt;/blockquote>
&lt;p>去github之前生成的仓库页面，点code，复制https链接&lt;/p>
&lt;p>将其粘贴到我们记事本中的&lt;code>repository：&lt;/code>后面&lt;/p>
&lt;p>然后保存退出&lt;/p>
&lt;p>&lt;strong>回到博客文件夹，git bash&lt;/strong>&lt;/p>
&lt;p>安装自动部署发布工具&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install hexo-deployer-git --save
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后在Blog文件夹右键打开git bash，依次输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo g（生成）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hexo d（上传）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>如果是第一次使用git的话会需要配置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git config --global user.email &amp;#34;你的邮箱&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global user.name &amp;#34;你的名字&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置完后再&lt;code>hexo d&lt;/code>上传&lt;/p>
&lt;p>在跳出来的窗口内进行登录&lt;/p>
&lt;/blockquote>
&lt;p>接下来我们就成功把本地内容上传到github了&lt;/p>
&lt;p>上传成功以后，我们就算搭建好了！上自己的网址看看吧&lt;/p>
&lt;p>网址是我们之前设的仓库名：用户名.github.io&lt;/p>
&lt;h2 id="网站资料">网站资料
&lt;/h2>&lt;p>我们的博客标题还是默认的hexo，整个页面是初始默认的，接下来我们对其进行修改&lt;/p>
&lt;p>用记事本打开我们blog文件夹中的_config.yml文件&lt;/p>
&lt;p>将#Site下面按自己的需求填上&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">## Site
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">title: 标题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">subtitle: 副标题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">description: 描述
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">keywords: 关键词
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">author: 站主
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">language: 语言（可以填写zh-CN）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">timezone: 时区（可以填写Asia/Shanghai）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后保存&lt;/p>
&lt;h2 id="如何上传文章">如何上传文章
&lt;/h2>&lt;p>我们在Blog文件夹中打开git bash,输入下方代码就可以生成新的文章md文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo new 文章标题
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>文章是.md格式，在我们的Blog文件夹中的source/_posts中&lt;/p>
&lt;p>推荐用Typora软件来编辑.md格式的文件&lt;/p>
&lt;blockquote>
&lt;p>Typora官网：https://www.typoraio.cn/（89元终身使用，推荐正版）&lt;/p>
&lt;p>破解版奉上：&lt;a class="link" href="https://kevinwu06.lanzout.com/iXkq30icv1ha" target="_blank" rel="noopener"
>蓝奏云文件&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>然后我们用Typora软件打开该.md文件就可以开始写文章了&lt;/p>
&lt;p>写好以后，我们还是一样打开git bash生成、上传&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo g
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hexo d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>至此，我们就成功搭建好基本的博客了，剩下的就是对博客的一些优化和美化了。&lt;/p>
&lt;p>我目前使用的hexo博客主题是&lt;a class="link" href="http://docs.anheyu.com/" target="_blank" rel="noopener"
>anzhiyu&lt;/a>，推荐主题：&lt;a class="link" href="https://butterfly.js.org/posts/21cfbf15/" target="_blank" rel="noopener"
>Butterfly&lt;/a>，&lt;a class="link" href="http://docs.anheyu.com/" target="_blank" rel="noopener"
>anzhiyu&lt;/a>&lt;/p>
&lt;p>大家可以参阅主题文档进行安装配置&lt;/p>
&lt;p>有什么问题的话欢迎评论。&lt;/p>
&lt;p>{% tip info %}&lt;/p>
&lt;p>本篇下文：&lt;a class="link" href="https://blog.fiveth.cc/p/138e.html" >Hexo搭建进阶：Vercel部署、主题安装、基础用法&lt;/a>&lt;/p>
&lt;p>我的&lt;strong>Hexo优化系列&lt;/strong>：&lt;a class="link" href="https://www.fomal.cc/posts/4aa2d85f.html" target="_blank" rel="noopener"
>Hexo文章目录&lt;/a>&lt;/p>
&lt;p>{% endtip %}&lt;/p></description></item></channel></rss>